/*
 * generated by Xtext 2.12.0
 */
package com.sysma.goat.eclipse_plugin.ide.contentassist.antlr;

import com.google.inject.Inject;
import com.sysma.goat.eclipse_plugin.ide.contentassist.antlr.internal.InternalGoatInfrastructureParser;
import com.sysma.goat.eclipse_plugin.services.GoatInfrastructureGrammarAccess;
import java.util.HashMap;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;

public class GoatInfrastructureParser extends AbstractContentAssistParser {

	@Inject
	private GoatInfrastructureGrammarAccess grammarAccess;

	private Map<AbstractElement, String> nameMappings;

	@Override
	protected InternalGoatInfrastructureParser createParser() {
		InternalGoatInfrastructureParser result = new InternalGoatInfrastructureParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getSingleServerAccess().getGroup(), "rule__SingleServer__Group__0");
					put(grammarAccess.getParamsAccess().getGroup(), "rule__Params__Group__0");
					put(grammarAccess.getParamsAccess().getGroup_2(), "rule__Params__Group_2__0");
					put(grammarAccess.getParamsAccess().getGroup_2_0(), "rule__Params__Group_2_0__0");
					put(grammarAccess.getSingleServerAccess().getExternalAssignment_0(), "rule__SingleServer__ExternalAssignment_0");
					put(grammarAccess.getSingleServerAccess().getParamsAssignment_2(), "rule__SingleServer__ParamsAssignment_2");
					put(grammarAccess.getParamsAccess().getKeysAssignment_2_0_0(), "rule__Params__KeysAssignment_2_0_0");
					put(grammarAccess.getParamsAccess().getValuesAssignment_2_0_2(), "rule__Params__ValuesAssignment_2_0_2");
					put(grammarAccess.getParamsAccess().getKeysAssignment_2_1(), "rule__Params__KeysAssignment_2_1");
					put(grammarAccess.getParamsAccess().getValuesAssignment_2_3(), "rule__Params__ValuesAssignment_2_3");
				}
			};
		}
		return nameMappings.get(element);
	}
			
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public GoatInfrastructureGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(GoatInfrastructureGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
