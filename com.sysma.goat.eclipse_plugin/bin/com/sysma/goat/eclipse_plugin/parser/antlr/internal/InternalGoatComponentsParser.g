/*
 * generated by Xtext 2.12.0
 */
parser grammar InternalGoatComponentsParser;

options {
	tokenVocab=InternalGoatComponentsLexer;
	superClass=AbstractInternalAntlrParser;
}

@header {
package com.sysma.goat.eclipse_plugin.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import com.sysma.goat.eclipse_plugin.services.GoatComponentsGrammarAccess;

}

@members {

 	private GoatComponentsGrammarAccess grammarAccess;

    public InternalGoatComponentsParser(TokenStream input, GoatComponentsGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected GoatComponentsGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getProcessesProcessDefinitionParserRuleCall_0_0());
				}
				lv_processes_0_0=ruleProcessDefinition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"processes",
						lv_processes_0_0,
						"com.sysma.goat.eclipse_plugin.GoatComponents.ProcessDefinition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getComponentsComponentDefinitionParserRuleCall_1_0());
				}
				lv_components_1_0=ruleComponentDefinition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"components",
						lv_components_1_0,
						"com.sysma.goat.eclipse_plugin.GoatComponents.ComponentDefinition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getFunctionsFuncDefinitionParserRuleCall_2_0());
				}
				lv_functions_2_0=ruleFuncDefinition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"functions",
						lv_functions_2_0,
						"com.sysma.goat.eclipse_plugin.GoatComponents.FuncDefinition");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)*
;

// Entry rule entryRuleProc
entryRuleProc returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProcRule()); }
	iv_ruleProc=ruleProc
	{ $current=$iv_ruleProc.current; }
	EOF;

// Rule Proc
ruleProc returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getProcAccess().getInterleavingProcessParserRuleCall_0());
		}
		this_InterleavingProcess_0=ruleInterleavingProcess
		{
			$current = $this_InterleavingProcess_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getProcAccess().getNonDeterminismProcessParserRuleCall_1());
		}
		this_NonDeterminismProcess_1=ruleNonDeterminismProcess
		{
			$current = $this_NonDeterminismProcess_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleInterleavingProcess
entryRuleInterleavingProcess returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInterleavingProcessRule()); }
	iv_ruleInterleavingProcess=ruleInterleavingProcess
	{ $current=$iv_ruleInterleavingProcess.current; }
	EOF;

// Rule InterleavingProcess
ruleInterleavingProcess returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getInterleavingProcessAccess().getCallProcessParserRuleCall_0());
		}
		this_CallProcess_0=ruleCallProcess
		{
			$current = $this_CallProcess_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			{
				$current = forceCreateModelElementAndAdd(
					grammarAccess.getInterleavingProcessAccess().getInterleavingProcessSubProcsAction_1(),
					$current);
			}
		)
		(
			otherlv_2=VerticalLine
			{
				newLeafNode(otherlv_2, grammarAccess.getInterleavingProcessAccess().getVerticalLineKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInterleavingProcessAccess().getSubProcsCallProcessParserRuleCall_2_1_0());
					}
					lv_subProcs_3_0=ruleCallProcess
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInterleavingProcessRule());
						}
						add(
							$current,
							"subProcs",
							lv_subProcs_3_0,
							"com.sysma.goat.eclipse_plugin.GoatComponents.CallProcess");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleNonDeterminismProcess
entryRuleNonDeterminismProcess returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNonDeterminismProcessRule()); }
	iv_ruleNonDeterminismProcess=ruleNonDeterminismProcess
	{ $current=$iv_ruleNonDeterminismProcess.current; }
	EOF;

// Rule NonDeterminismProcess
ruleNonDeterminismProcess returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getNonDeterminismProcessAccess().getPredOutputProcessOrInputProcessesParserRuleCall_0());
		}
		this_PredOutputProcessOrInputProcesses_0=rulePredOutputProcessOrInputProcesses
		{
			$current = $this_PredOutputProcessOrInputProcesses_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getNonDeterminismProcessAccess().getIfProcessesParserRuleCall_1());
		}
		this_IfProcesses_1=ruleIfProcesses
		{
			$current = $this_IfProcesses_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getNonDeterminismProcessAccess().getNProcessParserRuleCall_2());
		}
		this_NProcess_2=ruleNProcess
		{
			$current = $this_NProcess_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulePreconditions
entryRulePreconditions returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPreconditionsRule()); }
	iv_rulePreconditions=rulePreconditions
	{ $current=$iv_rulePreconditions.current; }
	EOF;

// Rule Preconditions
rulePreconditions returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getPreconditionsAccess().getPreconditionsAction_0(),
					$current);
			}
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getPreconditionsAccess().getPrecondUpdateParserRuleCall_1_0_0());
					}
					lv_precond_1_1=ruleUpdate
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPreconditionsRule());
						}
						add(
							$current,
							"precond",
							lv_precond_1_1,
							"com.sysma.goat.eclipse_plugin.GoatComponents.Update");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getPreconditionsAccess().getPrecondAwarenessParserRuleCall_1_0_1());
					}
					lv_precond_1_2=ruleAwareness
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPreconditionsRule());
						}
						add(
							$current,
							"precond",
							lv_precond_1_2,
							"com.sysma.goat.eclipse_plugin.GoatComponents.Awareness");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRulePredOutputProcessOrInputProcesses
entryRulePredOutputProcessOrInputProcesses returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPredOutputProcessOrInputProcessesRule()); }
	iv_rulePredOutputProcessOrInputProcesses=rulePredOutputProcessOrInputProcesses
	{ $current=$iv_rulePredOutputProcessOrInputProcesses.current; }
	EOF;

// Rule PredOutputProcessOrInputProcesses
rulePredOutputProcessOrInputProcesses returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPredOutputProcessOrInputProcessesAccess().getPreconditionsParserRuleCall_0());
		}
		this_Preconditions_0=rulePreconditions
		{
			$current = $this_Preconditions_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getPredOutputProcessOrInputProcessesAccess().getOutputProcessPrecondAction_1_0_0(),
							$current);
					}
				)
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPredOutputProcessOrInputProcessesRule());
					}
					newCompositeNode(grammarAccess.getPredOutputProcessOrInputProcessesAccess().getOutputProcessPartParserRuleCall_1_0_1());
				}
				this_OutputProcessPart_2=ruleOutputProcessPart[$current]
				{
					$current = $this_OutputProcessPart_2.current;
					afterParserOrEnumRuleCall();
				}
			)
			    |
			(
				(
					{
						$current = forceCreateModelElementAndAdd(
							grammarAccess.getPredOutputProcessOrInputProcessesAccess().getInputProcessesPrecondsAction_1_1_0(),
							$current);
					}
				)
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPredOutputProcessOrInputProcessesRule());
					}
					newCompositeNode(grammarAccess.getPredOutputProcessOrInputProcessesAccess().getInputProcessesPartParserRuleCall_1_1_1());
				}
				this_InputProcessesPart_4=ruleInputProcessesPart[$current]
				{
					$current = $this_InputProcessesPart_4.current;
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulePredOutputProcessOrInputProcess
entryRulePredOutputProcessOrInputProcess returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPredOutputProcessOrInputProcessRule()); }
	iv_rulePredOutputProcessOrInputProcess=rulePredOutputProcessOrInputProcess
	{ $current=$iv_rulePredOutputProcessOrInputProcess.current; }
	EOF;

// Rule PredOutputProcessOrInputProcess
rulePredOutputProcessOrInputProcess returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPredOutputProcessOrInputProcessAccess().getPreconditionsParserRuleCall_0());
		}
		this_Preconditions_0=rulePreconditions
		{
			$current = $this_Preconditions_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getPredOutputProcessOrInputProcessAccess().getOutputProcessPrecondAction_1_0_0(),
							$current);
					}
				)
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPredOutputProcessOrInputProcessRule());
					}
					newCompositeNode(grammarAccess.getPredOutputProcessOrInputProcessAccess().getOutputProcessPartParserRuleCall_1_0_1());
				}
				this_OutputProcessPart_2=ruleOutputProcessPart[$current]
				{
					$current = $this_OutputProcessPart_2.current;
					afterParserOrEnumRuleCall();
				}
			)
			    |
			(
				(
					{
						$current = forceCreateModelElementAndAdd(
							grammarAccess.getPredOutputProcessOrInputProcessAccess().getInputProcessesPrecondsAction_1_1_0(),
							$current);
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getPredOutputProcessOrInputProcessAccess().getInputsInputProcessParserRuleCall_1_1_1_0());
						}
						lv_inputs_4_0=ruleInputProcess
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPredOutputProcessOrInputProcessRule());
							}
							add(
								$current,
								"inputs",
								lv_inputs_4_0,
								"com.sysma.goat.eclipse_plugin.GoatComponents.InputProcess");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)
	)
;


// Rule InputProcessesPart
ruleInputProcessesPart[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getInputProcessesPartAccess().getInputsInputProcessParserRuleCall_0_0());
				}
				lv_inputs_0_0=ruleInputProcess
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInputProcessesPartRule());
					}
					add(
						$current,
						"inputs",
						lv_inputs_0_0,
						"com.sysma.goat.eclipse_plugin.GoatComponents.InputProcess");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=PlusSign
			{
				newLeafNode(otherlv_1, grammarAccess.getInputProcessesPartAccess().getPlusSignKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInputProcessesPartAccess().getPrecondsPreconditionsParserRuleCall_1_1_0());
					}
					lv_preconds_2_0=rulePreconditions
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInputProcessesPartRule());
						}
						add(
							$current,
							"preconds",
							lv_preconds_2_0,
							"com.sysma.goat.eclipse_plugin.GoatComponents.Preconditions");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getInputProcessesPartAccess().getInputsInputProcessParserRuleCall_1_2_0());
					}
					lv_inputs_3_0=ruleInputProcess
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInputProcessesPartRule());
						}
						add(
							$current,
							"inputs",
							lv_inputs_3_0,
							"com.sysma.goat.eclipse_plugin.GoatComponents.InputProcess");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleInputProcess
entryRuleInputProcess returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInputProcessRule()); }
	iv_ruleInputProcess=ruleInputProcess
	{ $current=$iv_ruleInputProcess.current; }
	EOF;

// Rule InputProcess
ruleInputProcess returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getInputProcessAccess().getInputProcessAction_0(),
					$current);
			}
		)
		otherlv_1=LeftCurlyBracket
		{
			newLeafNode(otherlv_1, grammarAccess.getInputProcessAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInputProcessAccess().getRec_predPredicateParserRuleCall_2_0());
				}
				lv_rec_pred_2_0=rulePredicate
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInputProcessRule());
					}
					set(
						$current,
						"rec_pred",
						lv_rec_pred_2_0,
						"com.sysma.goat.eclipse_plugin.GoatComponents.Predicate");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=RightCurlyBracket
		{
			newLeafNode(otherlv_3, grammarAccess.getInputProcessAccess().getRightCurlyBracketKeyword_3());
		}
		otherlv_4=LeftParenthesis
		{
			newLeafNode(otherlv_4, grammarAccess.getInputProcessAccess().getLeftParenthesisKeyword_4());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getInputProcessAccess().getMsgInPartsAttributeParserRuleCall_5_0_0());
					}
					lv_msgInParts_5_0=ruleAttribute
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInputProcessRule());
						}
						add(
							$current,
							"msgInParts",
							lv_msgInParts_5_0,
							"com.sysma.goat.eclipse_plugin.GoatComponents.Attribute");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=Comma
				{
					newLeafNode(otherlv_6, grammarAccess.getInputProcessAccess().getCommaKeyword_5_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getInputProcessAccess().getMsgInPartsAttributeParserRuleCall_5_1_1_0());
						}
						lv_msgInParts_7_0=ruleAttribute
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getInputProcessRule());
							}
							add(
								$current,
								"msgInParts",
								lv_msgInParts_7_0,
								"com.sysma.goat.eclipse_plugin.GoatComponents.Attribute");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_8=RightParenthesis
		{
			newLeafNode(otherlv_8, grammarAccess.getInputProcessAccess().getRightParenthesisKeyword_6());
		}
		(
			(
				lv_output_9_0=RULE_STRING
				{
					newLeafNode(lv_output_9_0, grammarAccess.getInputProcessAccess().getOutputSTRINGTerminalRuleCall_7_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInputProcessRule());
					}
					setWithLastConsumed(
						$current,
						"output",
						lv_output_9_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)?
		otherlv_10=FullStop
		{
			newLeafNode(otherlv_10, grammarAccess.getInputProcessAccess().getFullStopKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInputProcessAccess().getNextNZCProcessParserRuleCall_9_0());
				}
				lv_next_11_0=ruleNZCProcess
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInputProcessRule());
					}
					set(
						$current,
						"next",
						lv_next_11_0,
						"com.sysma.goat.eclipse_plugin.GoatComponents.NZCProcess");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;


// Rule OutputProcessPart
ruleOutputProcessPart[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=LeftParenthesis
		{
			newLeafNode(otherlv_0, grammarAccess.getOutputProcessPartAccess().getLeftParenthesisKeyword_0());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getOutputProcessPartAccess().getMsgOutPartsValueParserRuleCall_1_0_0());
					}
					lv_msgOutParts_1_0=ruleValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOutputProcessPartRule());
						}
						add(
							$current,
							"msgOutParts",
							lv_msgOutParts_1_0,
							"com.sysma.goat.eclipse_plugin.GoatComponents.Value");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_2=Comma
				{
					newLeafNode(otherlv_2, grammarAccess.getOutputProcessPartAccess().getCommaKeyword_1_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getOutputProcessPartAccess().getMsgOutPartsValueParserRuleCall_1_1_1_0());
						}
						lv_msgOutParts_3_0=ruleValue
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getOutputProcessPartRule());
							}
							add(
								$current,
								"msgOutParts",
								lv_msgOutParts_3_0,
								"com.sysma.goat.eclipse_plugin.GoatComponents.Value");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_4=RightParenthesis
		{
			newLeafNode(otherlv_4, grammarAccess.getOutputProcessPartAccess().getRightParenthesisKeyword_2());
		}
		otherlv_5=CommercialAt
		{
			newLeafNode(otherlv_5, grammarAccess.getOutputProcessPartAccess().getCommercialAtKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOutputProcessPartAccess().getSend_predPredicateParserRuleCall_4_0());
				}
				lv_send_pred_6_0=rulePredicate
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOutputProcessPartRule());
					}
					set(
						$current,
						"send_pred",
						lv_send_pred_6_0,
						"com.sysma.goat.eclipse_plugin.GoatComponents.Predicate");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_output_7_0=RULE_STRING
				{
					newLeafNode(lv_output_7_0, grammarAccess.getOutputProcessPartAccess().getOutputSTRINGTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOutputProcessPartRule());
					}
					setWithLastConsumed(
						$current,
						"output",
						lv_output_7_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)?
		(
			otherlv_8=Sleep
			{
				newLeafNode(otherlv_8, grammarAccess.getOutputProcessPartAccess().getSleepKeyword_6_0());
			}
			otherlv_9=LeftParenthesis
			{
				newLeafNode(otherlv_9, grammarAccess.getOutputProcessPartAccess().getLeftParenthesisKeyword_6_1());
			}
			(
				(
					lv_msec_10_0=RULE_INT
					{
						newLeafNode(lv_msec_10_0, grammarAccess.getOutputProcessPartAccess().getMsecINTTerminalRuleCall_6_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOutputProcessPartRule());
						}
						setWithLastConsumed(
							$current,
							"msec",
							lv_msec_10_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
			otherlv_11=RightParenthesis
			{
				newLeafNode(otherlv_11, grammarAccess.getOutputProcessPartAccess().getRightParenthesisKeyword_6_3());
			}
		)?
		otherlv_12=FullStop
		{
			newLeafNode(otherlv_12, grammarAccess.getOutputProcessPartAccess().getFullStopKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOutputProcessPartAccess().getNextNZCProcessParserRuleCall_8_0());
				}
				lv_next_13_0=ruleNZCProcess
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOutputProcessPartRule());
					}
					set(
						$current,
						"next",
						lv_next_13_0,
						"com.sysma.goat.eclipse_plugin.GoatComponents.NZCProcess");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleIfProcesses
entryRuleIfProcesses returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIfProcessesRule()); }
	iv_ruleIfProcesses=ruleIfProcesses
	{ $current=$iv_ruleIfProcesses.current; }
	EOF;

// Rule IfProcesses
ruleIfProcesses returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getIfProcessesAccess().getIfProcessesAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getIfProcessesAccess().getBranchesIfBranchProcessParserRuleCall_1_0());
				}
				lv_branches_1_0=ruleIfBranchProcess
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfProcessesRule());
					}
					add(
						$current,
						"branches",
						lv_branches_1_0,
						"com.sysma.goat.eclipse_plugin.GoatComponents.IfBranchProcess");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=Else
			{
				newLeafNode(otherlv_2, grammarAccess.getIfProcessesAccess().getElseKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getIfProcessesAccess().getBranchesIfBranchProcessParserRuleCall_2_1_0());
					}
					lv_branches_3_0=ruleIfBranchProcess
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIfProcessesRule());
						}
						add(
							$current,
							"branches",
							lv_branches_3_0,
							"com.sysma.goat.eclipse_plugin.GoatComponents.IfBranchProcess");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleIfBranchProcess
entryRuleIfBranchProcess returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIfBranchProcessRule()); }
	iv_ruleIfBranchProcess=ruleIfBranchProcess
	{ $current=$iv_ruleIfBranchProcess.current; }
	EOF;

// Rule IfBranchProcess
ruleIfBranchProcess returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getIfBranchProcessAccess().getIfBranchProcessAction_0(),
					$current);
			}
		)
		otherlv_1=If
		{
			newLeafNode(otherlv_1, grammarAccess.getIfBranchProcessAccess().getIfKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIfBranchProcessAccess().getCondPreconditionsParserRuleCall_2_0());
				}
				lv_cond_2_0=rulePreconditions
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfBranchProcessRule());
					}
					set(
						$current,
						"cond",
						lv_cond_2_0,
						"com.sysma.goat.eclipse_plugin.GoatComponents.Preconditions");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=LeftCurlyBracket
		{
			newLeafNode(otherlv_3, grammarAccess.getIfBranchProcessAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIfBranchProcessAccess().getThenPredOutputProcessOrInputProcessParserRuleCall_4_0());
				}
				lv_then_4_0=rulePredOutputProcessOrInputProcess
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfBranchProcessRule());
					}
					set(
						$current,
						"then",
						lv_then_4_0,
						"com.sysma.goat.eclipse_plugin.GoatComponents.PredOutputProcessOrInputProcess");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=RightCurlyBracket
		{
			newLeafNode(otherlv_5, grammarAccess.getIfBranchProcessAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleUpdate
entryRuleUpdate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUpdateRule()); }
	iv_ruleUpdate=ruleUpdate
	{ $current=$iv_ruleUpdate.current; }
	EOF;

// Rule Update
ruleUpdate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=LeftSquareBracket
		{
			newLeafNode(otherlv_0, grammarAccess.getUpdateAccess().getLeftSquareBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getUpdateAccess().getVarsAttributeParserRuleCall_1_0());
				}
				lv_vars_1_0=ruleAttribute
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUpdateRule());
					}
					add(
						$current,
						"vars",
						lv_vars_1_0,
						"com.sysma.goat.eclipse_plugin.GoatComponents.Attribute");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=ColonEqualsSign
		{
			newLeafNode(otherlv_2, grammarAccess.getUpdateAccess().getColonEqualsSignKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getUpdateAccess().getValsValueParserRuleCall_3_0());
				}
				lv_vals_3_0=ruleValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUpdateRule());
					}
					add(
						$current,
						"vals",
						lv_vals_3_0,
						"com.sysma.goat.eclipse_plugin.GoatComponents.Value");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=Comma
			{
				newLeafNode(otherlv_4, grammarAccess.getUpdateAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getUpdateAccess().getVarsAttributeParserRuleCall_4_1_0());
					}
					lv_vars_5_0=ruleAttribute
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUpdateRule());
						}
						add(
							$current,
							"vars",
							lv_vars_5_0,
							"com.sysma.goat.eclipse_plugin.GoatComponents.Attribute");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_6=ColonEqualsSign
			{
				newLeafNode(otherlv_6, grammarAccess.getUpdateAccess().getColonEqualsSignKeyword_4_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getUpdateAccess().getValsValueParserRuleCall_4_3_0());
					}
					lv_vals_7_0=ruleValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUpdateRule());
						}
						add(
							$current,
							"vals",
							lv_vals_7_0,
							"com.sysma.goat.eclipse_plugin.GoatComponents.Value");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_8=RightSquareBracket
		{
			newLeafNode(otherlv_8, grammarAccess.getUpdateAccess().getRightSquareBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleAwareness
entryRuleAwareness returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAwarenessRule()); }
	iv_ruleAwareness=ruleAwareness
	{ $current=$iv_ruleAwareness.current; }
	EOF;

// Rule Awareness
ruleAwareness returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=LessThanSign
		{
			newLeafNode(otherlv_0, grammarAccess.getAwarenessAccess().getLessThanSignKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAwarenessAccess().getPredPredicateParserRuleCall_1_0());
				}
				lv_pred_1_0=rulePredicate
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAwarenessRule());
					}
					set(
						$current,
						"pred",
						lv_pred_1_0,
						"com.sysma.goat.eclipse_plugin.GoatComponents.Predicate");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=GreaterThanSign
		{
			newLeafNode(otherlv_2, grammarAccess.getAwarenessAccess().getGreaterThanSignKeyword_2());
		}
	)
;

// Entry rule entryRuleNZCProcess
entryRuleNZCProcess returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNZCProcessRule()); }
	iv_ruleNZCProcess=ruleNZCProcess
	{ $current=$iv_ruleNZCProcess.current; }
	EOF;

// Rule NZCProcess
ruleNZCProcess returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0=LeftParenthesis
			{
				newLeafNode(otherlv_0, grammarAccess.getNZCProcessAccess().getLeftParenthesisKeyword_0_0());
			}
			{
				newCompositeNode(grammarAccess.getNZCProcessAccess().getProcParserRuleCall_0_1());
			}
			this_Proc_1=ruleProc
			{
				$current = $this_Proc_1.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_2=RightParenthesis
			{
				newLeafNode(otherlv_2, grammarAccess.getNZCProcessAccess().getRightParenthesisKeyword_0_2());
			}
		)
		    |
		{
			newCompositeNode(grammarAccess.getNZCProcessAccess().getZeroProcessParserRuleCall_1());
		}
		this_ZeroProcess_3=ruleZeroProcess
		{
			$current = $this_ZeroProcess_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getNZCProcessAccess().getCallProcessParserRuleCall_2());
		}
		this_CallProcess_4=ruleCallProcess
		{
			$current = $this_CallProcess_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleNProcess
entryRuleNProcess returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNProcessRule()); }
	iv_ruleNProcess=ruleNProcess
	{ $current=$iv_ruleNProcess.current; }
	EOF;

// Rule NProcess
ruleNProcess returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0=LeftParenthesis
			{
				newLeafNode(otherlv_0, grammarAccess.getNProcessAccess().getLeftParenthesisKeyword_0_0());
			}
			{
				newCompositeNode(grammarAccess.getNProcessAccess().getProcParserRuleCall_0_1());
			}
			this_Proc_1=ruleProc
			{
				$current = $this_Proc_1.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_2=RightParenthesis
			{
				newLeafNode(otherlv_2, grammarAccess.getNProcessAccess().getRightParenthesisKeyword_0_2());
			}
		)
		    |
		{
			newCompositeNode(grammarAccess.getNProcessAccess().getZeroProcessParserRuleCall_1());
		}
		this_ZeroProcess_3=ruleZeroProcess
		{
			$current = $this_ZeroProcess_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleCallProcess
entryRuleCallProcess returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCallProcessRule()); }
	iv_ruleCallProcess=ruleCallProcess
	{ $current=$iv_ruleCallProcess.current; }
	EOF;

// Rule CallProcess
ruleCallProcess returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getCallProcessAccess().getCallProcessAction_0(),
					$current);
			}
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCallProcessRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getCallProcessAccess().getProcnameProcessDefinitionCrossReference_1_0());
				}
			)
		)
		(
			otherlv_2=LeftSquareBracket
			{
				newLeafNode(otherlv_2, grammarAccess.getCallProcessAccess().getLeftSquareBracketKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCallProcessAccess().getParamsValueParserRuleCall_2_1_0());
					}
					lv_params_3_0=ruleValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCallProcessRule());
						}
						add(
							$current,
							"params",
							lv_params_3_0,
							"com.sysma.goat.eclipse_plugin.GoatComponents.Value");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=Comma
				{
					newLeafNode(otherlv_4, grammarAccess.getCallProcessAccess().getCommaKeyword_2_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getCallProcessAccess().getParamsValueParserRuleCall_2_2_1_0());
						}
						lv_params_5_0=ruleValue
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCallProcessRule());
							}
							add(
								$current,
								"params",
								lv_params_5_0,
								"com.sysma.goat.eclipse_plugin.GoatComponents.Value");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_6=RightSquareBracket
			{
				newLeafNode(otherlv_6, grammarAccess.getCallProcessAccess().getRightSquareBracketKeyword_2_3());
			}
		)?
	)
;

// Entry rule entryRuleZeroProcess
entryRuleZeroProcess returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getZeroProcessRule()); }
	iv_ruleZeroProcess=ruleZeroProcess
	{ $current=$iv_ruleZeroProcess.current; }
	EOF;

// Rule ZeroProcess
ruleZeroProcess returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getZeroProcessAccess().getZeroProcessAction_0(),
					$current);
			}
		)
		otherlv_1=DigitZero
		{
			newLeafNode(otherlv_1, grammarAccess.getZeroProcessAccess().getDigitZeroKeyword_1());
		}
	)
;

// Entry rule entryRuleProcessDefinition
entryRuleProcessDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProcessDefinitionRule()); }
	iv_ruleProcessDefinition=ruleProcessDefinition
	{ $current=$iv_ruleProcessDefinition.current; }
	EOF;

// Rule ProcessDefinition
ruleProcessDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Proc
		{
			newLeafNode(otherlv_0, grammarAccess.getProcessDefinitionAccess().getProcKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getProcessDefinitionAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getProcessDefinitionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2=LeftSquareBracket
			{
				newLeafNode(otherlv_2, grammarAccess.getProcessDefinitionAccess().getLeftSquareBracketKeyword_2_0());
			}
			(
				(
					lv_params_3_0=RULE_ID
					{
						newLeafNode(lv_params_3_0, grammarAccess.getProcessDefinitionAccess().getParamsIDTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getProcessDefinitionRule());
						}
						addWithLastConsumed(
							$current,
							"params",
							lv_params_3_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			(
				otherlv_4=Comma
				{
					newLeafNode(otherlv_4, grammarAccess.getProcessDefinitionAccess().getCommaKeyword_2_2_0());
				}
				(
					(
						lv_params_5_0=RULE_ID
						{
							newLeafNode(lv_params_5_0, grammarAccess.getProcessDefinitionAccess().getParamsIDTerminalRuleCall_2_2_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getProcessDefinitionRule());
							}
							addWithLastConsumed(
								$current,
								"params",
								lv_params_5_0,
								"org.eclipse.xtext.common.Terminals.ID");
						}
					)
				)
			)*
			otherlv_6=RightSquareBracket
			{
				newLeafNode(otherlv_6, grammarAccess.getProcessDefinitionAccess().getRightSquareBracketKeyword_2_3());
			}
		)?
		otherlv_7=EqualsSign
		{
			newLeafNode(otherlv_7, grammarAccess.getProcessDefinitionAccess().getEqualsSignKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getProcessDefinitionAccess().getProcProcParserRuleCall_4_0());
				}
				lv_proc_8_0=ruleProc
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProcessDefinitionRule());
					}
					set(
						$current,
						"proc",
						lv_proc_8_0,
						"com.sysma.goat.eclipse_plugin.GoatComponents.Proc");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleEnvironment
entryRuleEnvironment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnvironmentRule()); }
	iv_ruleEnvironment=ruleEnvironment
	{ $current=$iv_ruleEnvironment.current; }
	EOF;

// Rule Environment
ruleEnvironment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getEnvironmentAccess().getEnvironmentAction_0(),
					$current);
			}
		)
		otherlv_1=LeftCurlyBracket
		{
			newLeafNode(otherlv_1, grammarAccess.getEnvironmentAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				(
					lv_attrs_2_0=RULE_ID
					{
						newLeafNode(lv_attrs_2_0, grammarAccess.getEnvironmentAccess().getAttrsIDTerminalRuleCall_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEnvironmentRule());
						}
						addWithLastConsumed(
							$current,
							"attrs",
							lv_attrs_2_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			otherlv_3=ColonEqualsSign
			{
				newLeafNode(otherlv_3, grammarAccess.getEnvironmentAccess().getColonEqualsSignKeyword_2_1());
			}
			(
				(
					lv_vals_4_0=RULE_STRING
					{
						newLeafNode(lv_vals_4_0, grammarAccess.getEnvironmentAccess().getValsSTRINGTerminalRuleCall_2_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEnvironmentRule());
						}
						addWithLastConsumed(
							$current,
							"vals",
							lv_vals_4_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
			(
				otherlv_5=Comma
				{
					newLeafNode(otherlv_5, grammarAccess.getEnvironmentAccess().getCommaKeyword_2_3_0());
				}
				(
					(
						lv_attrs_6_0=RULE_ID
						{
							newLeafNode(lv_attrs_6_0, grammarAccess.getEnvironmentAccess().getAttrsIDTerminalRuleCall_2_3_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getEnvironmentRule());
							}
							addWithLastConsumed(
								$current,
								"attrs",
								lv_attrs_6_0,
								"org.eclipse.xtext.common.Terminals.ID");
						}
					)
				)
				otherlv_7=ColonEqualsSign
				{
					newLeafNode(otherlv_7, grammarAccess.getEnvironmentAccess().getColonEqualsSignKeyword_2_3_2());
				}
				(
					(
						lv_vals_8_0=RULE_STRING
						{
							newLeafNode(lv_vals_8_0, grammarAccess.getEnvironmentAccess().getValsSTRINGTerminalRuleCall_2_3_3_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getEnvironmentRule());
							}
							addWithLastConsumed(
								$current,
								"vals",
								lv_vals_8_0,
								"org.eclipse.xtext.common.Terminals.STRING");
						}
					)
				)
			)*
		)?
		otherlv_9=RightCurlyBracket
		{
			newLeafNode(otherlv_9, grammarAccess.getEnvironmentAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleComponentDefinition
entryRuleComponentDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComponentDefinitionRule()); }
	iv_ruleComponentDefinition=ruleComponentDefinition
	{ $current=$iv_ruleComponentDefinition.current; }
	EOF;

// Rule ComponentDefinition
ruleComponentDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Component
		{
			newLeafNode(otherlv_0, grammarAccess.getComponentDefinitionAccess().getComponentKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getComponentDefinitionAccess().getEnvEnvironmentParserRuleCall_1_0());
				}
				lv_env_1_0=ruleEnvironment
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComponentDefinitionRule());
					}
					set(
						$current,
						"env",
						lv_env_1_0,
						"com.sysma.goat.eclipse_plugin.GoatComponents.Environment");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComponentDefinitionRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getComponentDefinitionAccess().getProcProcessDefinitionCrossReference_2_0());
				}
			)
		)
		(
			otherlv_3=LeftSquareBracket
			{
				newLeafNode(otherlv_3, grammarAccess.getComponentDefinitionAccess().getLeftSquareBracketKeyword_3_0());
			}
			(
				(
					lv_params_4_0=RULE_STRING
					{
						newLeafNode(lv_params_4_0, grammarAccess.getComponentDefinitionAccess().getParamsSTRINGTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getComponentDefinitionRule());
						}
						addWithLastConsumed(
							$current,
							"params",
							lv_params_4_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
			(
				otherlv_5=Comma
				{
					newLeafNode(otherlv_5, grammarAccess.getComponentDefinitionAccess().getCommaKeyword_3_2_0());
				}
				(
					(
						lv_params_6_0=RULE_STRING
						{
							newLeafNode(lv_params_6_0, grammarAccess.getComponentDefinitionAccess().getParamsSTRINGTerminalRuleCall_3_2_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getComponentDefinitionRule());
							}
							addWithLastConsumed(
								$current,
								"params",
								lv_params_6_0,
								"org.eclipse.xtext.common.Terminals.STRING");
						}
					)
				)
			)*
			otherlv_7=RightSquareBracket
			{
				newLeafNode(otherlv_7, grammarAccess.getComponentDefinitionAccess().getRightSquareBracketKeyword_3_3());
			}
		)?
		otherlv_8=At
		{
			newLeafNode(otherlv_8, grammarAccess.getComponentDefinitionAccess().getAtKeyword_4());
		}
		(
			(
				lv_address_9_0=RULE_STRING
				{
					newLeafNode(lv_address_9_0, grammarAccess.getComponentDefinitionAccess().getAddressSTRINGTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComponentDefinitionRule());
					}
					setWithLastConsumed(
						$current,
						"address",
						lv_address_9_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleAttribute
entryRuleAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAttributeRule()); }
	iv_ruleAttribute=ruleAttribute
	{ $current=$iv_ruleAttribute.current; }
	EOF;

// Rule Attribute
ruleAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_comp_0_0=This
					{
						newLeafNode(lv_comp_0_0, grammarAccess.getAttributeAccess().getCompThisKeyword_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAttributeRule());
						}
						setWithLastConsumed($current, "comp", true, "this");
					}
				)
			)
			otherlv_1=FullStop
			{
				newLeafNode(otherlv_1, grammarAccess.getAttributeAccess().getFullStopKeyword_0_1());
			}
		)?
		(
			(
				lv_ident_2_0=RULE_ID
				{
					newLeafNode(lv_ident_2_0, grammarAccess.getAttributeAccess().getIdentIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAttributeRule());
					}
					setWithLastConsumed(
						$current,
						"ident",
						lv_ident_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleRecAttribute
entryRuleRecAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRecAttributeRule()); }
	iv_ruleRecAttribute=ruleRecAttribute
	{ $current=$iv_ruleRecAttribute.current; }
	EOF;

// Rule RecAttribute
ruleRecAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Receiver
		{
			newLeafNode(otherlv_0, grammarAccess.getRecAttributeAccess().getReceiverKeyword_0());
		}
		otherlv_1=FullStop
		{
			newLeafNode(otherlv_1, grammarAccess.getRecAttributeAccess().getFullStopKeyword_1());
		}
		(
			(
				lv_ident_2_0=RULE_ID
				{
					newLeafNode(lv_ident_2_0, grammarAccess.getRecAttributeAccess().getIdentIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRecAttributeRule());
					}
					setWithLastConsumed(
						$current,
						"ident",
						lv_ident_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleValue
entryRuleValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getValueRule()); }
	iv_ruleValue=ruleValue
	{ $current=$iv_ruleValue.current; }
	EOF;

// Rule Value
ruleValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getValueAccess().getAttributeValueParserRuleCall_0());
		}
		this_AttributeValue_0=ruleAttributeValue
		{
			$current = $this_AttributeValue_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getValueAccess().getImmediateValueParserRuleCall_1());
		}
		this_ImmediateValue_1=ruleImmediateValue
		{
			$current = $this_ImmediateValue_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getValueAccess().getGoStringFunctionParserRuleCall_2());
		}
		this_GoStringFunction_2=ruleGoStringFunction
		{
			$current = $this_GoStringFunction_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleAttributeValue
entryRuleAttributeValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAttributeValueRule()); }
	iv_ruleAttributeValue=ruleAttributeValue
	{ $current=$iv_ruleAttributeValue.current; }
	EOF;

// Rule AttributeValue
ruleAttributeValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getAttributeValueAccess().getAttributeValueAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getAttributeValueAccess().getAttrAttributeParserRuleCall_1_0());
				}
				lv_attr_1_0=ruleAttribute
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAttributeValueRule());
					}
					set(
						$current,
						"attr",
						lv_attr_1_0,
						"com.sysma.goat.eclipse_plugin.GoatComponents.Attribute");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleImmediateValue
entryRuleImmediateValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImmediateValueRule()); }
	iv_ruleImmediateValue=ruleImmediateValue
	{ $current=$iv_ruleImmediateValue.current; }
	EOF;

// Rule ImmediateValue
ruleImmediateValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getImmediateValueAccess().getImmediateValueAction_0(),
					$current);
			}
		)
		(
			(
				lv_imm_1_0=RULE_STRING
				{
					newLeafNode(lv_imm_1_0, grammarAccess.getImmediateValueAccess().getImmSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImmediateValueRule());
					}
					setWithLastConsumed(
						$current,
						"imm",
						lv_imm_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleGoStringFunction
entryRuleGoStringFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGoStringFunctionRule()); }
	iv_ruleGoStringFunction=ruleGoStringFunction
	{ $current=$iv_ruleGoStringFunction.current; }
	EOF;

// Rule GoStringFunction
ruleGoStringFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getGoStringFunctionAccess().getGoStringFunctionAction_0(),
					$current);
			}
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGoStringFunctionRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getGoStringFunctionAccess().getFuncnameFuncDefinitionCrossReference_1_0());
				}
			)
		)
		otherlv_2=LeftParenthesis
		{
			newLeafNode(otherlv_2, grammarAccess.getGoStringFunctionAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getGoStringFunctionAccess().getParamsValueParserRuleCall_3_0_0());
					}
					lv_params_3_0=ruleValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGoStringFunctionRule());
						}
						add(
							$current,
							"params",
							lv_params_3_0,
							"com.sysma.goat.eclipse_plugin.GoatComponents.Value");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=Comma
				{
					newLeafNode(otherlv_4, grammarAccess.getGoStringFunctionAccess().getCommaKeyword_3_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getGoStringFunctionAccess().getParamsValueParserRuleCall_3_1_1_0());
						}
						lv_params_5_0=ruleValue
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getGoStringFunctionRule());
							}
							add(
								$current,
								"params",
								lv_params_5_0,
								"com.sysma.goat.eclipse_plugin.GoatComponents.Value");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_6=RightParenthesis
		{
			newLeafNode(otherlv_6, grammarAccess.getGoStringFunctionAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRulePredicate
entryRulePredicate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPredicateRule()); }
	iv_rulePredicate=rulePredicate
	{ $current=$iv_rulePredicate.current; }
	EOF;

// Rule Predicate
rulePredicate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPredicateAccess().getAndParserRuleCall_0());
		}
		this_And_0=ruleAnd
		{
			$current = $this_And_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndAdd(
						grammarAccess.getPredicateAccess().getPredicateOrAction_1_0(),
						$current);
				}
			)
			otherlv_2=VerticalLineVerticalLine
			{
				newLeafNode(otherlv_2, grammarAccess.getPredicateAccess().getVerticalLineVerticalLineKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPredicateAccess().getOrAndParserRuleCall_1_2_0());
					}
					lv_or_3_0=ruleAnd
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPredicateRule());
						}
						add(
							$current,
							"or",
							lv_or_3_0,
							"com.sysma.goat.eclipse_plugin.GoatComponents.And");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleAnd
entryRuleAnd returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAndRule()); }
	iv_ruleAnd=ruleAnd
	{ $current=$iv_ruleAnd.current; }
	EOF;

// Rule And
ruleAnd returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAndAccess().getNotParserRuleCall_0());
		}
		this_Not_0=ruleNot
		{
			$current = $this_Not_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndAdd(
						grammarAccess.getAndAccess().getAndAndAction_1_0(),
						$current);
				}
			)
			otherlv_2=AmpersandAmpersand
			{
				newLeafNode(otherlv_2, grammarAccess.getAndAccess().getAmpersandAmpersandKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAndAccess().getAndNotParserRuleCall_1_2_0());
					}
					lv_and_3_0=ruleNot
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAndRule());
						}
						add(
							$current,
							"and",
							lv_and_3_0,
							"com.sysma.goat.eclipse_plugin.GoatComponents.Not");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleNot
entryRuleNot returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNotRule()); }
	iv_ruleNot=ruleNot
	{ $current=$iv_ruleNot.current; }
	EOF;

// Rule Not
ruleNot returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getNotAccess().getTermParserRuleCall_0());
		}
		this_Term_0=ruleTerm
		{
			$current = $this_Term_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getNotAccess().getNotAction_1_0(),
						$current);
				}
			)
			(
				(
					lv_neg_2_0=ExclamationMark
					{
						newLeafNode(lv_neg_2_0, grammarAccess.getNotAccess().getNegExclamationMarkKeyword_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNotRule());
						}
						setWithLastConsumed($current, "neg", true, "!");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getNotAccess().getTermTermParserRuleCall_1_2_0());
					}
					lv_term_3_0=ruleTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNotRule());
						}
						set(
							$current,
							"term",
							lv_term_3_0,
							"com.sysma.goat.eclipse_plugin.GoatComponents.Term");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleTerm
entryRuleTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTermRule()); }
	iv_ruleTerm=ruleTerm
	{ $current=$iv_ruleTerm.current; }
	EOF;

// Rule Term
ruleTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTermAccess().getImmediateParserRuleCall_0());
		}
		this_Immediate_0=ruleImmediate
		{
			$current = $this_Immediate_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTermAccess().getEqualityTestParserRuleCall_1());
		}
		this_EqualityTest_1=ruleEqualityTest
		{
			$current = $this_EqualityTest_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			otherlv_2=LeftParenthesis
			{
				newLeafNode(otherlv_2, grammarAccess.getTermAccess().getLeftParenthesisKeyword_2_0());
			}
			{
				newCompositeNode(grammarAccess.getTermAccess().getPredicateParserRuleCall_2_1());
			}
			this_Predicate_3=rulePredicate
			{
				$current = $this_Predicate_3.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_4=RightParenthesis
			{
				newLeafNode(otherlv_4, grammarAccess.getTermAccess().getRightParenthesisKeyword_2_2());
			}
		)
	)
;

// Entry rule entryRuleImmediate
entryRuleImmediate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImmediateRule()); }
	iv_ruleImmediate=ruleImmediate
	{ $current=$iv_ruleImmediate.current; }
	EOF;

// Rule Immediate
ruleImmediate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getImmediateAccess().getImmediateAction_0(),
					$current);
			}
		)
		(
			(
				(
					lv_isTrue_1_0=True
					{
						newLeafNode(lv_isTrue_1_0, grammarAccess.getImmediateAccess().getIsTrueTrueKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getImmediateRule());
						}
						setWithLastConsumed($current, "isTrue", true, "true");
					}
				)
			)
			    |
			otherlv_2=False
			{
				newLeafNode(otherlv_2, grammarAccess.getImmediateAccess().getFalseKeyword_1_1());
			}
		)
	)
;

// Entry rule entryRuleEqualityTest
entryRuleEqualityTest returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEqualityTestRule()); }
	iv_ruleEqualityTest=ruleEqualityTest
	{ $current=$iv_ruleEqualityTest.current; }
	EOF;

// Rule EqualityTest
ruleEqualityTest returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getEqualityTestAccess().getEqualityTestAction_0(),
					$current);
			}
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getEqualityTestAccess().getOp1ValueParserRuleCall_1_0_0());
					}
					lv_op1_1_1=ruleValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEqualityTestRule());
						}
						set(
							$current,
							"op1",
							lv_op1_1_1,
							"com.sysma.goat.eclipse_plugin.GoatComponents.Value");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getEqualityTestAccess().getOp1RecAttributeParserRuleCall_1_0_1());
					}
					lv_op1_1_2=ruleRecAttribute
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEqualityTestRule());
						}
						set(
							$current,
							"op1",
							lv_op1_1_2,
							"com.sysma.goat.eclipse_plugin.GoatComponents.RecAttribute");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			(
				(
					lv_operand_2_1=LessThanSign
					{
						newLeafNode(lv_operand_2_1, grammarAccess.getEqualityTestAccess().getOperandLessThanSignKeyword_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEqualityTestRule());
						}
						setWithLastConsumed($current, "operand", lv_operand_2_1, null);
					}
					    |
					lv_operand_2_2=GreaterThanSign
					{
						newLeafNode(lv_operand_2_2, grammarAccess.getEqualityTestAccess().getOperandGreaterThanSignKeyword_2_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEqualityTestRule());
						}
						setWithLastConsumed($current, "operand", lv_operand_2_2, null);
					}
					    |
					lv_operand_2_3=LessThanSignEqualsSign
					{
						newLeafNode(lv_operand_2_3, grammarAccess.getEqualityTestAccess().getOperandLessThanSignEqualsSignKeyword_2_0_2());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEqualityTestRule());
						}
						setWithLastConsumed($current, "operand", lv_operand_2_3, null);
					}
					    |
					lv_operand_2_4=GreaterThanSignEqualsSign
					{
						newLeafNode(lv_operand_2_4, grammarAccess.getEqualityTestAccess().getOperandGreaterThanSignEqualsSignKeyword_2_0_3());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEqualityTestRule());
						}
						setWithLastConsumed($current, "operand", lv_operand_2_4, null);
					}
					    |
					lv_operand_2_5=EqualsSign
					{
						newLeafNode(lv_operand_2_5, grammarAccess.getEqualityTestAccess().getOperandEqualsSignKeyword_2_0_4());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEqualityTestRule());
						}
						setWithLastConsumed($current, "operand", lv_operand_2_5, null);
					}
					    |
					lv_operand_2_6=ExclamationMarkEqualsSign
					{
						newLeafNode(lv_operand_2_6, grammarAccess.getEqualityTestAccess().getOperandExclamationMarkEqualsSignKeyword_2_0_5());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEqualityTestRule());
						}
						setWithLastConsumed($current, "operand", lv_operand_2_6, null);
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getEqualityTestAccess().getOp2ValueParserRuleCall_3_0());
				}
				lv_op2_3_0=ruleValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEqualityTestRule());
					}
					set(
						$current,
						"op2",
						lv_op2_3_0,
						"com.sysma.goat.eclipse_plugin.GoatComponents.Value");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFuncParam
entryRuleFuncParam returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFuncParamRule()); }
	iv_ruleFuncParam=ruleFuncParam
	{ $current=$iv_ruleFuncParam.current; }
	EOF;

// Rule FuncParam
ruleFuncParam returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getFuncParamAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getFuncParamRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

// Entry rule entryRuleFuncDefinition
entryRuleFuncDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFuncDefinitionRule()); }
	iv_ruleFuncDefinition=ruleFuncDefinition
	{ $current=$iv_ruleFuncDefinition.current; }
	EOF;

// Rule FuncDefinition
ruleFuncDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Function
		{
			newLeafNode(otherlv_0, grammarAccess.getFuncDefinitionAccess().getFunctionKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getFuncDefinitionAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFuncDefinitionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=LeftParenthesis
		{
			newLeafNode(otherlv_2, grammarAccess.getFuncDefinitionAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getFuncDefinitionAccess().getParamsFuncParamParserRuleCall_3_0_0());
					}
					lv_params_3_0=ruleFuncParam
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFuncDefinitionRule());
						}
						add(
							$current,
							"params",
							lv_params_3_0,
							"com.sysma.goat.eclipse_plugin.GoatComponents.FuncParam");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=Comma
				{
					newLeafNode(otherlv_4, grammarAccess.getFuncDefinitionAccess().getCommaKeyword_3_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getFuncDefinitionAccess().getParamsFuncParamParserRuleCall_3_1_1_0());
						}
						lv_params_5_0=ruleFuncParam
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFuncDefinitionRule());
							}
							add(
								$current,
								"params",
								lv_params_5_0,
								"com.sysma.goat.eclipse_plugin.GoatComponents.FuncParam");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_6=RightParenthesis
		{
			newLeafNode(otherlv_6, grammarAccess.getFuncDefinitionAccess().getRightParenthesisKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFuncDefinitionAccess().getBlkFuncBlockParserRuleCall_5_0());
				}
				lv_blk_7_0=ruleFuncBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFuncDefinitionRule());
					}
					set(
						$current,
						"blk",
						lv_blk_7_0,
						"com.sysma.goat.eclipse_plugin.GoatComponents.FuncBlock");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFuncBlock
entryRuleFuncBlock returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFuncBlockRule()); }
	iv_ruleFuncBlock=ruleFuncBlock
	{ $current=$iv_ruleFuncBlock.current; }
	EOF;

// Rule FuncBlock
ruleFuncBlock returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=LeftCurlyBracket
		{
			newLeafNode(otherlv_0, grammarAccess.getFuncBlockAccess().getLeftCurlyBracketKeyword_0());
		}
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getFuncBlockAccess().getFuncBlockAction_1(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFuncBlockAccess().getStatementsFuncStatementParserRuleCall_2_0());
				}
				lv_statements_2_0=ruleFuncStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFuncBlockRule());
					}
					add(
						$current,
						"statements",
						lv_statements_2_0,
						"com.sysma.goat.eclipse_plugin.GoatComponents.FuncStatement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_3=RightCurlyBracket
		{
			newLeafNode(otherlv_3, grammarAccess.getFuncBlockAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleFuncStatement
entryRuleFuncStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFuncStatementRule()); }
	iv_ruleFuncStatement=ruleFuncStatement
	{ $current=$iv_ruleFuncStatement.current; }
	EOF;

// Rule FuncStatement
ruleFuncStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getFuncStatementAccess().getFuncVarAssignParserRuleCall_0());
		}
		this_FuncVarAssign_0=ruleFuncVarAssign
		{
			$current = $this_FuncVarAssign_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFuncStatementAccess().getFuncIfElseParserRuleCall_1());
		}
		this_FuncIfElse_1=ruleFuncIfElse
		{
			$current = $this_FuncIfElse_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFuncStatementAccess().getFuncReturnParserRuleCall_2());
		}
		this_FuncReturn_2=ruleFuncReturn
		{
			$current = $this_FuncReturn_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFuncStatementAccess().getFuncVarDeclarationParserRuleCall_3());
		}
		this_FuncVarDeclaration_3=ruleFuncVarDeclaration
		{
			$current = $this_FuncVarDeclaration_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleFuncVarDeclaration
entryRuleFuncVarDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFuncVarDeclarationRule()); }
	iv_ruleFuncVarDeclaration=ruleFuncVarDeclaration
	{ $current=$iv_ruleFuncVarDeclaration.current; }
	EOF;

// Rule FuncVarDeclaration
ruleFuncVarDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Var
		{
			newLeafNode(otherlv_0, grammarAccess.getFuncVarDeclarationAccess().getVarKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getFuncVarDeclarationAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFuncVarDeclarationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=EqualsSign
		{
			newLeafNode(otherlv_2, grammarAccess.getFuncVarDeclarationAccess().getEqualsSignKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFuncVarDeclarationAccess().getValFuncValParserRuleCall_3_0());
				}
				lv_val_3_0=ruleFuncVal
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFuncVarDeclarationRule());
					}
					set(
						$current,
						"val",
						lv_val_3_0,
						"com.sysma.goat.eclipse_plugin.GoatComponents.FuncVal");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFuncVarAssign
entryRuleFuncVarAssign returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFuncVarAssignRule()); }
	iv_ruleFuncVarAssign=ruleFuncVarAssign
	{ $current=$iv_ruleFuncVarAssign.current; }
	EOF;

// Rule FuncVarAssign
ruleFuncVarAssign returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFuncVarAssignRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getFuncVarAssignAccess().getVarFuncVarDeclarationCrossReference_0_0());
				}
			)
		)
		otherlv_1=EqualsSign
		{
			newLeafNode(otherlv_1, grammarAccess.getFuncVarAssignAccess().getEqualsSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFuncVarAssignAccess().getValFuncValParserRuleCall_2_0());
				}
				lv_val_2_0=ruleFuncVal
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFuncVarAssignRule());
					}
					set(
						$current,
						"val",
						lv_val_2_0,
						"com.sysma.goat.eclipse_plugin.GoatComponents.FuncVal");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFuncVal
entryRuleFuncVal returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFuncValRule()); }
	iv_ruleFuncVal=ruleFuncVal
	{ $current=$iv_ruleFuncVal.current; }
	EOF;

// Rule FuncVal
ruleFuncVal returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getFuncValAccess().getFuncStringAction_0_0(),
						$current);
				}
			)
			(
				(
					lv_imm_1_0=RULE_STRING
					{
						newLeafNode(lv_imm_1_0, grammarAccess.getFuncValAccess().getImmSTRINGTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFuncValRule());
						}
						setWithLastConsumed(
							$current,
							"imm",
							lv_imm_1_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getFuncValAccess().getFuncMemoryRefAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFuncValRule());
						}
					}
					otherlv_3=RULE_ID
					{
						newLeafNode(otherlv_3, grammarAccess.getFuncValAccess().getRefFuncVarParamCrossReference_1_1_0());
					}
				)
			)
		)
	)
;

// Entry rule entryRuleFuncPredicate
entryRuleFuncPredicate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFuncPredicateRule()); }
	iv_ruleFuncPredicate=ruleFuncPredicate
	{ $current=$iv_ruleFuncPredicate.current; }
	EOF;

// Rule FuncPredicate
ruleFuncPredicate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getFuncPredicateAccess().getFuncAndParserRuleCall_0());
		}
		this_FuncAnd_0=ruleFuncAnd
		{
			$current = $this_FuncAnd_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndAdd(
						grammarAccess.getFuncPredicateAccess().getFuncPredicateOrAction_1_0(),
						$current);
				}
			)
			otherlv_2=VerticalLineVerticalLine
			{
				newLeafNode(otherlv_2, grammarAccess.getFuncPredicateAccess().getVerticalLineVerticalLineKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFuncPredicateAccess().getOrFuncAndParserRuleCall_1_2_0());
					}
					lv_or_3_0=ruleFuncAnd
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFuncPredicateRule());
						}
						add(
							$current,
							"or",
							lv_or_3_0,
							"com.sysma.goat.eclipse_plugin.GoatComponents.FuncAnd");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleFuncAnd
entryRuleFuncAnd returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFuncAndRule()); }
	iv_ruleFuncAnd=ruleFuncAnd
	{ $current=$iv_ruleFuncAnd.current; }
	EOF;

// Rule FuncAnd
ruleFuncAnd returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getFuncAndAccess().getFuncNotParserRuleCall_0());
		}
		this_FuncNot_0=ruleFuncNot
		{
			$current = $this_FuncNot_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndAdd(
						grammarAccess.getFuncAndAccess().getFuncAndAndAction_1_0(),
						$current);
				}
			)
			otherlv_2=AmpersandAmpersand
			{
				newLeafNode(otherlv_2, grammarAccess.getFuncAndAccess().getAmpersandAmpersandKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFuncAndAccess().getAndFuncNotParserRuleCall_1_2_0());
					}
					lv_and_3_0=ruleFuncNot
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFuncAndRule());
						}
						add(
							$current,
							"and",
							lv_and_3_0,
							"com.sysma.goat.eclipse_plugin.GoatComponents.FuncNot");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleFuncNot
entryRuleFuncNot returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFuncNotRule()); }
	iv_ruleFuncNot=ruleFuncNot
	{ $current=$iv_ruleFuncNot.current; }
	EOF;

// Rule FuncNot
ruleFuncNot returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getFuncNotAccess().getFuncTermParserRuleCall_0());
		}
		this_FuncTerm_0=ruleFuncTerm
		{
			$current = $this_FuncTerm_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getFuncNotAccess().getFuncNotAction_1_0(),
						$current);
				}
			)
			(
				(
					lv_neg_2_0=ExclamationMark
					{
						newLeafNode(lv_neg_2_0, grammarAccess.getFuncNotAccess().getNegExclamationMarkKeyword_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFuncNotRule());
						}
						setWithLastConsumed($current, "neg", true, "!");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getFuncNotAccess().getTermFuncTermParserRuleCall_1_2_0());
					}
					lv_term_3_0=ruleFuncTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFuncNotRule());
						}
						set(
							$current,
							"term",
							lv_term_3_0,
							"com.sysma.goat.eclipse_plugin.GoatComponents.FuncTerm");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleFuncTerm
entryRuleFuncTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFuncTermRule()); }
	iv_ruleFuncTerm=ruleFuncTerm
	{ $current=$iv_ruleFuncTerm.current; }
	EOF;

// Rule FuncTerm
ruleFuncTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getFuncTermAccess().getFuncImmediateParserRuleCall_0());
		}
		this_FuncImmediate_0=ruleFuncImmediate
		{
			$current = $this_FuncImmediate_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFuncTermAccess().getFuncEqualityTestParserRuleCall_1());
		}
		this_FuncEqualityTest_1=ruleFuncEqualityTest
		{
			$current = $this_FuncEqualityTest_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			otherlv_2=LeftParenthesis
			{
				newLeafNode(otherlv_2, grammarAccess.getFuncTermAccess().getLeftParenthesisKeyword_2_0());
			}
			{
				newCompositeNode(grammarAccess.getFuncTermAccess().getFuncPredicateParserRuleCall_2_1());
			}
			this_FuncPredicate_3=ruleFuncPredicate
			{
				$current = $this_FuncPredicate_3.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_4=RightParenthesis
			{
				newLeafNode(otherlv_4, grammarAccess.getFuncTermAccess().getRightParenthesisKeyword_2_2());
			}
		)
	)
;

// Entry rule entryRuleFuncImmediate
entryRuleFuncImmediate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFuncImmediateRule()); }
	iv_ruleFuncImmediate=ruleFuncImmediate
	{ $current=$iv_ruleFuncImmediate.current; }
	EOF;

// Rule FuncImmediate
ruleFuncImmediate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getFuncImmediateAccess().getFuncImmediateAction_0(),
					$current);
			}
		)
		(
			(
				(
					lv_isTrue_1_0=True
					{
						newLeafNode(lv_isTrue_1_0, grammarAccess.getFuncImmediateAccess().getIsTrueTrueKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFuncImmediateRule());
						}
						setWithLastConsumed($current, "isTrue", true, "true");
					}
				)
			)
			    |
			otherlv_2=False
			{
				newLeafNode(otherlv_2, grammarAccess.getFuncImmediateAccess().getFalseKeyword_1_1());
			}
		)
	)
;

// Entry rule entryRuleFuncEqualityTest
entryRuleFuncEqualityTest returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFuncEqualityTestRule()); }
	iv_ruleFuncEqualityTest=ruleFuncEqualityTest
	{ $current=$iv_ruleFuncEqualityTest.current; }
	EOF;

// Rule FuncEqualityTest
ruleFuncEqualityTest returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getFuncEqualityTestAccess().getFuncEqualityTestAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFuncEqualityTestAccess().getOp1FuncValParserRuleCall_1_0());
				}
				lv_op1_1_0=ruleFuncVal
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFuncEqualityTestRule());
					}
					set(
						$current,
						"op1",
						lv_op1_1_0,
						"com.sysma.goat.eclipse_plugin.GoatComponents.FuncVal");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					lv_operand_2_1=LessThanSign
					{
						newLeafNode(lv_operand_2_1, grammarAccess.getFuncEqualityTestAccess().getOperandLessThanSignKeyword_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFuncEqualityTestRule());
						}
						setWithLastConsumed($current, "operand", lv_operand_2_1, null);
					}
					    |
					lv_operand_2_2=GreaterThanSign
					{
						newLeafNode(lv_operand_2_2, grammarAccess.getFuncEqualityTestAccess().getOperandGreaterThanSignKeyword_2_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFuncEqualityTestRule());
						}
						setWithLastConsumed($current, "operand", lv_operand_2_2, null);
					}
					    |
					lv_operand_2_3=LessThanSignEqualsSign
					{
						newLeafNode(lv_operand_2_3, grammarAccess.getFuncEqualityTestAccess().getOperandLessThanSignEqualsSignKeyword_2_0_2());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFuncEqualityTestRule());
						}
						setWithLastConsumed($current, "operand", lv_operand_2_3, null);
					}
					    |
					lv_operand_2_4=GreaterThanSignEqualsSign
					{
						newLeafNode(lv_operand_2_4, grammarAccess.getFuncEqualityTestAccess().getOperandGreaterThanSignEqualsSignKeyword_2_0_3());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFuncEqualityTestRule());
						}
						setWithLastConsumed($current, "operand", lv_operand_2_4, null);
					}
					    |
					lv_operand_2_5=EqualsSign
					{
						newLeafNode(lv_operand_2_5, grammarAccess.getFuncEqualityTestAccess().getOperandEqualsSignKeyword_2_0_4());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFuncEqualityTestRule());
						}
						setWithLastConsumed($current, "operand", lv_operand_2_5, null);
					}
					    |
					lv_operand_2_6=ExclamationMarkEqualsSign
					{
						newLeafNode(lv_operand_2_6, grammarAccess.getFuncEqualityTestAccess().getOperandExclamationMarkEqualsSignKeyword_2_0_5());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFuncEqualityTestRule());
						}
						setWithLastConsumed($current, "operand", lv_operand_2_6, null);
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFuncEqualityTestAccess().getOp2FuncValParserRuleCall_3_0());
				}
				lv_op2_3_0=ruleFuncVal
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFuncEqualityTestRule());
					}
					set(
						$current,
						"op2",
						lv_op2_3_0,
						"com.sysma.goat.eclipse_plugin.GoatComponents.FuncVal");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFuncIfElse
entryRuleFuncIfElse returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFuncIfElseRule()); }
	iv_ruleFuncIfElse=ruleFuncIfElse
	{ $current=$iv_ruleFuncIfElse.current; }
	EOF;

// Rule FuncIfElse
ruleFuncIfElse returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=If
		{
			newLeafNode(otherlv_0, grammarAccess.getFuncIfElseAccess().getIfKeyword_0());
		}
		otherlv_1=LeftParenthesis
		{
			newLeafNode(otherlv_1, grammarAccess.getFuncIfElseAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFuncIfElseAccess().getTestFuncPredicateParserRuleCall_2_0());
				}
				lv_test_2_0=ruleFuncPredicate
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFuncIfElseRule());
					}
					add(
						$current,
						"test",
						lv_test_2_0,
						"com.sysma.goat.eclipse_plugin.GoatComponents.FuncPredicate");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=RightParenthesis
		{
			newLeafNode(otherlv_3, grammarAccess.getFuncIfElseAccess().getRightParenthesisKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFuncIfElseAccess().getThenFuncBlockParserRuleCall_4_0());
				}
				lv_then_4_0=ruleFuncBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFuncIfElseRule());
					}
					add(
						$current,
						"then",
						lv_then_4_0,
						"com.sysma.goat.eclipse_plugin.GoatComponents.FuncBlock");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5=Elif
			{
				newLeafNode(otherlv_5, grammarAccess.getFuncIfElseAccess().getElifKeyword_5_0());
			}
			otherlv_6=LeftParenthesis
			{
				newLeafNode(otherlv_6, grammarAccess.getFuncIfElseAccess().getLeftParenthesisKeyword_5_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFuncIfElseAccess().getTestFuncPredicateParserRuleCall_5_2_0());
					}
					lv_test_7_0=ruleFuncPredicate
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFuncIfElseRule());
						}
						add(
							$current,
							"test",
							lv_test_7_0,
							"com.sysma.goat.eclipse_plugin.GoatComponents.FuncPredicate");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_8=RightParenthesis
			{
				newLeafNode(otherlv_8, grammarAccess.getFuncIfElseAccess().getRightParenthesisKeyword_5_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFuncIfElseAccess().getThenFuncBlockParserRuleCall_5_4_0());
					}
					lv_then_9_0=ruleFuncBlock
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFuncIfElseRule());
						}
						add(
							$current,
							"then",
							lv_then_9_0,
							"com.sysma.goat.eclipse_plugin.GoatComponents.FuncBlock");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			otherlv_10=Else
			{
				newLeafNode(otherlv_10, grammarAccess.getFuncIfElseAccess().getElseKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFuncIfElseAccess().getElseBranchFuncBlockParserRuleCall_6_1_0());
					}
					lv_elseBranch_11_0=ruleFuncBlock
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFuncIfElseRule());
						}
						set(
							$current,
							"elseBranch",
							lv_elseBranch_11_0,
							"com.sysma.goat.eclipse_plugin.GoatComponents.FuncBlock");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleFuncReturn
entryRuleFuncReturn returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFuncReturnRule()); }
	iv_ruleFuncReturn=ruleFuncReturn
	{ $current=$iv_ruleFuncReturn.current; }
	EOF;

// Rule FuncReturn
ruleFuncReturn returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Return
		{
			newLeafNode(otherlv_0, grammarAccess.getFuncReturnAccess().getReturnKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFuncReturnAccess().getValFuncValParserRuleCall_1_0());
				}
				lv_val_1_0=ruleFuncVal
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFuncReturnRule());
					}
					set(
						$current,
						"val",
						lv_val_1_0,
						"com.sysma.goat.eclipse_plugin.GoatComponents.FuncVal");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;
