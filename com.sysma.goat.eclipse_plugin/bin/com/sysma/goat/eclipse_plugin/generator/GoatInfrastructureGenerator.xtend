/*
 * generated by Xtext 2.12.0
 */
package com.sysma.goat.eclipse_plugin.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import com.sysma.goat.eclipse_plugin.goatInfrastructure.SingleServer
import org.eclipse.core.runtime.Path

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class GoatInfrastructureGenerator extends AbstractGenerator {

	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
		for(server:(resource.allContents.toIterable.filter(SingleServer))){
			val c_ssrv = new CodeSingleServer(server)
			val goFileName = new Path("infrastructure").append(
					new Path(resource.URI.toPlatformString(true))
					.removeFirstSegments(2)
					.removeFileExtension
					.addFileExtension("go")
				).toString
			// EcorePlatformUtil.getFile(resource)
			fsa.generateFile(goFileName, c_ssrv.code)
		}
	}
}
