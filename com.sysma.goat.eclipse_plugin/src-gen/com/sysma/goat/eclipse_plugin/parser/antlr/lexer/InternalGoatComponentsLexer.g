/*
 * generated by Xtext 2.12.0
 */
lexer grammar InternalGoatComponentsLexer;

@header {
package com.sysma.goat.eclipse_plugin.parser.antlr.lexer;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

Component : 'component';

Function : 'function';

Receiver : 'receiver';

Return : 'return';

False : 'false';

Sleep : 'sleep';

Elif : 'elif';

Else : 'else';

Proc : 'proc';

This : 'this';

True : 'true';

Var : 'var';

ExclamationMarkEqualsSign : '!=';

AmpersandAmpersand : '&&';

ColonEqualsSign : ':=';

LessThanSignEqualsSign : '<=';

GreaterThanSignEqualsSign : '>=';

At : 'at';

If : 'if';

VerticalLineVerticalLine : '||';

ExclamationMark : '!';

LeftParenthesis : '(';

RightParenthesis : ')';

PlusSign : '+';

Comma : ',';

FullStop : '.';

DigitZero : '0';

LessThanSign : '<';

EqualsSign : '=';

GreaterThanSign : '>';

CommercialAt : '@';

LeftSquareBracket : '[';

RightSquareBracket : ']';

LeftCurlyBracket : '{';

VerticalLine : '|';

RightCurlyBracket : '}';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
