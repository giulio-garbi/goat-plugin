/*
 * generated by Xtext 2.12.0
 */
parser grammar InternalGoatComponentsParser;

options {
	tokenVocab=InternalGoatComponentsLexer;
	superClass=AbstractInternalAntlrParser;
}

@header {
package com.sysma.goat.eclipse_plugin.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import com.sysma.goat.eclipse_plugin.services.GoatComponentsGrammarAccess;

}

@members {

 	private GoatComponentsGrammarAccess grammarAccess;

    public InternalGoatComponentsParser(TokenStream input, GoatComponentsGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected GoatComponentsGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getModelAccess().getModelAction_0(),
					$current);
			}
		)
		otherlv_1=Infrastructure
		{
			newLeafNode(otherlv_1, grammarAccess.getModelAccess().getInfrastructureKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getModelRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getModelAccess().getInfrastructureInfrastructureCrossReference_2_0());
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getModelAccess().getProcessesProcessDefinitionParserRuleCall_3_0_0());
					}
					lv_processes_3_0=ruleProcessDefinition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModelRule());
						}
						add(
							$current,
							"processes",
							lv_processes_3_0,
							"com.sysma.goat.eclipse_plugin.GoatComponents.ProcessDefinition");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getModelAccess().getComponentsComponentDefinitionParserRuleCall_3_1_0());
					}
					lv_components_4_0=ruleComponentDefinition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModelRule());
						}
						add(
							$current,
							"components",
							lv_components_4_0,
							"com.sysma.goat.eclipse_plugin.GoatComponents.ComponentDefinition");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getModelAccess().getFunctionsFuncDefinitionParserRuleCall_3_2_0());
					}
					lv_functions_5_0=ruleFuncDefinition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModelRule());
						}
						add(
							$current,
							"functions",
							lv_functions_5_0,
							"com.sysma.goat.eclipse_plugin.GoatComponents.FuncDefinition");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getModelAccess().getEnvironmentsEnvironmentDefinitionParserRuleCall_3_3_0());
					}
					lv_environments_6_0=ruleEnvironmentDefinition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModelRule());
						}
						add(
							$current,
							"environments",
							lv_environments_6_0,
							"com.sysma.goat.eclipse_plugin.GoatComponents.EnvironmentDefinition");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleProcessDefinition
entryRuleProcessDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProcessDefinitionRule()); }
	iv_ruleProcessDefinition=ruleProcessDefinition
	{ $current=$iv_ruleProcessDefinition.current; }
	EOF;

// Rule ProcessDefinition
ruleProcessDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Process
		{
			newLeafNode(otherlv_0, grammarAccess.getProcessDefinitionAccess().getProcessKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getProcessDefinitionAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getProcessDefinitionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				otherlv_2=EqualsSign
				{
					newLeafNode(otherlv_2, grammarAccess.getProcessDefinitionAccess().getEqualsSignKeyword_2_0_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getProcessDefinitionAccess().getBlockPDPBlockParserRuleCall_2_0_1_0());
						}
						lv_block_3_0=rulePDPBlock
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getProcessDefinitionRule());
							}
							set(
								$current,
								"block",
								lv_block_3_0,
								"com.sysma.goat.eclipse_plugin.GoatComponents.PDPBlock");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getProcessDefinitionAccess().getBlockProcessBlockParserRuleCall_2_1_0());
					}
					lv_block_4_0=ruleProcessBlock
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getProcessDefinitionRule());
						}
						set(
							$current,
							"block",
							lv_block_4_0,
							"com.sysma.goat.eclipse_plugin.GoatComponents.ProcessBlock");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRulePDPBlock
entryRulePDPBlock returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPDPBlockRule()); }
	iv_rulePDPBlock=rulePDPBlock
	{ $current=$iv_rulePDPBlock.current; }
	EOF;

// Rule PDPBlock
rulePDPBlock returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getPDPBlockAccess().getStatementsPDPSpawnParserRuleCall_0_0_0());
					}
					lv_statements_0_0=rulePDPSpawn
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPDPBlockRule());
						}
						add(
							$current,
							"statements",
							lv_statements_0_0,
							"com.sysma.goat.eclipse_plugin.GoatComponents.PDPSpawn");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_1=VerticalLine
			{
				newLeafNode(otherlv_1, grammarAccess.getPDPBlockAccess().getVerticalLineKeyword_0_1());
			}
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getPDPBlockAccess().getStatementsPDPCallParserRuleCall_1_0());
				}
				lv_statements_2_0=rulePDPCall
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPDPBlockRule());
					}
					add(
						$current,
						"statements",
						lv_statements_2_0,
						"com.sysma.goat.eclipse_plugin.GoatComponents.PDPCall");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulePDPSpawn
entryRulePDPSpawn returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPDPSpawnRule()); }
	iv_rulePDPSpawn=rulePDPSpawn
	{ $current=$iv_rulePDPSpawn.current; }
	EOF;

// Rule PDPSpawn
rulePDPSpawn returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getPDPSpawnRule());
				}
			}
			otherlv_0=RULE_ID
			{
				newLeafNode(otherlv_0, grammarAccess.getPDPSpawnAccess().getProcProcessDefinitionCrossReference_0());
			}
		)
	)
;

// Entry rule entryRulePDPCall
entryRulePDPCall returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPDPCallRule()); }
	iv_rulePDPCall=rulePDPCall
	{ $current=$iv_rulePDPCall.current; }
	EOF;

// Rule PDPCall
rulePDPCall returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getPDPCallRule());
				}
			}
			otherlv_0=RULE_ID
			{
				newLeafNode(otherlv_0, grammarAccess.getPDPCallAccess().getProcProcessDefinitionCrossReference_0());
			}
		)
	)
;

// Entry rule entryRuleProcessBlock
entryRuleProcessBlock returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProcessBlockRule()); }
	iv_ruleProcessBlock=ruleProcessBlock
	{ $current=$iv_ruleProcessBlock.current; }
	EOF;

// Rule ProcessBlock
ruleProcessBlock returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=LeftCurlyBracket
		{
			newLeafNode(otherlv_0, grammarAccess.getProcessBlockAccess().getLeftCurlyBracketKeyword_0());
		}
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getProcessBlockAccess().getProcessBlockAction_1(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getProcessBlockAccess().getStatementsProcessStatementParserRuleCall_2_0());
				}
				lv_statements_2_0=ruleProcessStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProcessBlockRule());
					}
					add(
						$current,
						"statements",
						lv_statements_2_0,
						"com.sysma.goat.eclipse_plugin.GoatComponents.ProcessStatement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_3=RightCurlyBracket
		{
			newLeafNode(otherlv_3, grammarAccess.getProcessBlockAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleProcessStatement
entryRuleProcessStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProcessStatementRule()); }
	iv_ruleProcessStatement=ruleProcessStatement
	{ $current=$iv_ruleProcessStatement.current; }
	EOF;

// Rule ProcessStatement
ruleProcessStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getProcessStatementAccess().getProcessSpawnParserRuleCall_0());
		}
		this_ProcessSpawn_0=ruleProcessSpawn
		{
			$current = $this_ProcessSpawn_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getProcessStatementAccess().getProcessCallParserRuleCall_1());
		}
		this_ProcessCall_1=ruleProcessCall
		{
			$current = $this_ProcessCall_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getProcessStatementAccess().getProcessSendParserRuleCall_2());
		}
		this_ProcessSend_2=ruleProcessSend
		{
			$current = $this_ProcessSend_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getProcessStatementAccess().getProcessReceiveParserRuleCall_3());
		}
		this_ProcessReceive_3=ruleProcessReceive
		{
			$current = $this_ProcessReceive_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getProcessStatementAccess().getProcessIfParserRuleCall_4());
		}
		this_ProcessIf_4=ruleProcessIf
		{
			$current = $this_ProcessIf_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getProcessStatementAccess().getProcessSetParserRuleCall_5());
		}
		this_ProcessSet_5=ruleProcessSet
		{
			$current = $this_ProcessSet_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getProcessStatementAccess().getProcessWaitForParserRuleCall_6());
		}
		this_ProcessWaitFor_6=ruleProcessWaitFor
		{
			$current = $this_ProcessWaitFor_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getProcessStatementAccess().getProcessLoopParserRuleCall_7());
		}
		this_ProcessLoop_7=ruleProcessLoop
		{
			$current = $this_ProcessLoop_7.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleProcessSpawn
entryRuleProcessSpawn returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProcessSpawnRule()); }
	iv_ruleProcessSpawn=ruleProcessSpawn
	{ $current=$iv_ruleProcessSpawn.current; }
	EOF;

// Rule ProcessSpawn
ruleProcessSpawn returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Spawn
		{
			newLeafNode(otherlv_0, grammarAccess.getProcessSpawnAccess().getSpawnKeyword_0());
		}
		otherlv_1=LeftParenthesis
		{
			newLeafNode(otherlv_1, grammarAccess.getProcessSpawnAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getProcessSpawnRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getProcessSpawnAccess().getProcProcessDefinitionCrossReference_2_0());
				}
			)
		)
		otherlv_3=RightParenthesis
		{
			newLeafNode(otherlv_3, grammarAccess.getProcessSpawnAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleProcessCall
entryRuleProcessCall returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProcessCallRule()); }
	iv_ruleProcessCall=ruleProcessCall
	{ $current=$iv_ruleProcessCall.current; }
	EOF;

// Rule ProcessCall
ruleProcessCall returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Call
		{
			newLeafNode(otherlv_0, grammarAccess.getProcessCallAccess().getCallKeyword_0());
		}
		otherlv_1=LeftParenthesis
		{
			newLeafNode(otherlv_1, grammarAccess.getProcessCallAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getProcessCallRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getProcessCallAccess().getProcProcessDefinitionCrossReference_2_0());
				}
			)
		)
		otherlv_3=RightParenthesis
		{
			newLeafNode(otherlv_3, grammarAccess.getProcessCallAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleProcessSend
entryRuleProcessSend returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProcessSendRule()); }
	iv_ruleProcessSend=ruleProcessSend
	{ $current=$iv_ruleProcessSend.current; }
	EOF;

// Rule ProcessSend
ruleProcessSend returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Send
		{
			newLeafNode(otherlv_0, grammarAccess.getProcessSendAccess().getSendKeyword_0());
		}
		otherlv_1=LeftCurlyBracket
		{
			newLeafNode(otherlv_1, grammarAccess.getProcessSendAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getProcessSendAccess().getMsgOutPartsExpressionParserRuleCall_2_0_0());
					}
					lv_msgOutParts_2_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getProcessSendRule());
						}
						add(
							$current,
							"msgOutParts",
							lv_msgOutParts_2_0,
							"com.sysma.goat.eclipse_plugin.GoatComponents.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=Comma
				{
					newLeafNode(otherlv_3, grammarAccess.getProcessSendAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getProcessSendAccess().getMsgOutPartsExpressionParserRuleCall_2_1_1_0());
						}
						lv_msgOutParts_4_0=ruleExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getProcessSendRule());
							}
							add(
								$current,
								"msgOutParts",
								lv_msgOutParts_4_0,
								"com.sysma.goat.eclipse_plugin.GoatComponents.Expression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_5=RightCurlyBracket
		{
			newLeafNode(otherlv_5, grammarAccess.getProcessSendAccess().getRightCurlyBracketKeyword_3());
		}
		otherlv_6=CommercialAt
		{
			newLeafNode(otherlv_6, grammarAccess.getProcessSendAccess().getCommercialAtKeyword_4());
		}
		otherlv_7=LeftParenthesis
		{
			newLeafNode(otherlv_7, grammarAccess.getProcessSendAccess().getLeftParenthesisKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getProcessSendAccess().getSend_predOutputPredicateParserRuleCall_6_0());
				}
				lv_send_pred_8_0=ruleOutputPredicate
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProcessSendRule());
					}
					set(
						$current,
						"send_pred",
						lv_send_pred_8_0,
						"com.sysma.goat.eclipse_plugin.GoatComponents.OutputPredicate");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_9=RightParenthesis
		{
			newLeafNode(otherlv_9, grammarAccess.getProcessSendAccess().getRightParenthesisKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getProcessSendAccess().getUpdatesUpdateParserRuleCall_8_0());
				}
				lv_updates_10_0=ruleUpdate
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProcessSendRule());
					}
					set(
						$current,
						"updates",
						lv_updates_10_0,
						"com.sysma.goat.eclipse_plugin.GoatComponents.Update");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getProcessSendAccess().getPrintPrintStatementParserRuleCall_9_0());
				}
				lv_print_11_0=rulePrintStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProcessSendRule());
					}
					set(
						$current,
						"print",
						lv_print_11_0,
						"com.sysma.goat.eclipse_plugin.GoatComponents.PrintStatement");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_12=Semicolon
		{
			newLeafNode(otherlv_12, grammarAccess.getProcessSendAccess().getSemicolonKeyword_10());
		}
	)
;

// Entry rule entryRuleProcessReceive
entryRuleProcessReceive returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProcessReceiveRule()); }
	iv_ruleProcessReceive=ruleProcessReceive
	{ $current=$iv_ruleProcessReceive.current; }
	EOF;

// Rule ProcessReceive
ruleProcessReceive returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getProcessReceiveAccess().getProcessReceiveSingleParserRuleCall_0());
		}
		this_ProcessReceiveSingle_0=ruleProcessReceiveSingle
		{
			$current = $this_ProcessReceiveSingle_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getProcessReceiveAccess().getProcessReceiveMultipleParserRuleCall_1());
		}
		this_ProcessReceiveMultiple_1=ruleProcessReceiveMultiple
		{
			$current = $this_ProcessReceiveMultiple_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleProcessReceiveSingle
entryRuleProcessReceiveSingle returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProcessReceiveSingleRule()); }
	iv_ruleProcessReceiveSingle=ruleProcessReceiveSingle
	{ $current=$iv_ruleProcessReceiveSingle.current; }
	EOF;

// Rule ProcessReceiveSingle
ruleProcessReceiveSingle returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Receive
		{
			newLeafNode(otherlv_0, grammarAccess.getProcessReceiveSingleAccess().getReceiveKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getProcessReceiveSingleAccess().getCasesReceiveCaseParserRuleCall_1_0());
				}
				lv_cases_1_0=ruleReceiveCase
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProcessReceiveSingleRule());
					}
					add(
						$current,
						"cases",
						lv_cases_1_0,
						"com.sysma.goat.eclipse_plugin.GoatComponents.ReceiveCase");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=Semicolon
		{
			newLeafNode(otherlv_2, grammarAccess.getProcessReceiveSingleAccess().getSemicolonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getProcessReceiveSingleAccess().getThenEmptyProcessBlockParserRuleCall_3_0());
				}
				lv_then_3_0=ruleEmptyProcessBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProcessReceiveSingleRule());
					}
					add(
						$current,
						"then",
						lv_then_3_0,
						"com.sysma.goat.eclipse_plugin.GoatComponents.EmptyProcessBlock");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleEmptyProcessBlock
entryRuleEmptyProcessBlock returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEmptyProcessBlockRule()); }
	iv_ruleEmptyProcessBlock=ruleEmptyProcessBlock
	{ $current=$iv_ruleEmptyProcessBlock.current; }
	EOF;

// Rule EmptyProcessBlock
ruleEmptyProcessBlock returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			$current = forceCreateModelElement(
				grammarAccess.getEmptyProcessBlockAccess().getProcessBlockAction(),
				$current);
		}
	)
;

// Entry rule entryRuleProcessReceiveMultiple
entryRuleProcessReceiveMultiple returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProcessReceiveMultipleRule()); }
	iv_ruleProcessReceiveMultiple=ruleProcessReceiveMultiple
	{ $current=$iv_ruleProcessReceiveMultiple.current; }
	EOF;

// Rule ProcessReceiveMultiple
ruleProcessReceiveMultiple returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Receive
		{
			newLeafNode(otherlv_0, grammarAccess.getProcessReceiveMultipleAccess().getReceiveKeyword_0());
		}
		otherlv_1=LeftCurlyBracket
		{
			newLeafNode(otherlv_1, grammarAccess.getProcessReceiveMultipleAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			otherlv_2=Case
			{
				newLeafNode(otherlv_2, grammarAccess.getProcessReceiveMultipleAccess().getCaseKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getProcessReceiveMultipleAccess().getCasesReceiveCaseParserRuleCall_2_1_0());
					}
					lv_cases_3_0=ruleReceiveCase
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getProcessReceiveMultipleRule());
						}
						add(
							$current,
							"cases",
							lv_cases_3_0,
							"com.sysma.goat.eclipse_plugin.GoatComponents.ReceiveCase");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_4=Colon
			{
				newLeafNode(otherlv_4, grammarAccess.getProcessReceiveMultipleAccess().getColonKeyword_2_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getProcessReceiveMultipleAccess().getThenProcessBlockParserRuleCall_2_3_0());
					}
					lv_then_5_0=ruleProcessBlock
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getProcessReceiveMultipleRule());
						}
						add(
							$current,
							"then",
							lv_then_5_0,
							"com.sysma.goat.eclipse_plugin.GoatComponents.ProcessBlock");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)+
		otherlv_6=RightCurlyBracket
		{
			newLeafNode(otherlv_6, grammarAccess.getProcessReceiveMultipleAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleReceiveCase
entryRuleReceiveCase returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReceiveCaseRule()); }
	iv_ruleReceiveCase=ruleReceiveCase
	{ $current=$iv_ruleReceiveCase.current; }
	EOF;

// Rule ReceiveCase
ruleReceiveCase returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=LeftParenthesis
		{
			newLeafNode(otherlv_0, grammarAccess.getReceiveCaseAccess().getLeftParenthesisKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getReceiveCaseAccess().getCondExpressionParserRuleCall_1_0());
				}
				lv_cond_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReceiveCaseRule());
					}
					set(
						$current,
						"cond",
						lv_cond_1_0,
						"com.sysma.goat.eclipse_plugin.GoatComponents.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=RightParenthesis
		{
			newLeafNode(otherlv_2, grammarAccess.getReceiveCaseAccess().getRightParenthesisKeyword_2());
		}
		otherlv_3=LeftCurlyBracket
		{
			newLeafNode(otherlv_3, grammarAccess.getReceiveCaseAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				(
					lv_msgInParts_4_0=RULE_ID
					{
						newLeafNode(lv_msgInParts_4_0, grammarAccess.getReceiveCaseAccess().getMsgInPartsIDTerminalRuleCall_4_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getReceiveCaseRule());
						}
						addWithLastConsumed(
							$current,
							"msgInParts",
							lv_msgInParts_4_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			(
				otherlv_5=Comma
				{
					newLeafNode(otherlv_5, grammarAccess.getReceiveCaseAccess().getCommaKeyword_4_1_0());
				}
				(
					(
						lv_msgInParts_6_0=RULE_ID
						{
							newLeafNode(lv_msgInParts_6_0, grammarAccess.getReceiveCaseAccess().getMsgInPartsIDTerminalRuleCall_4_1_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getReceiveCaseRule());
							}
							addWithLastConsumed(
								$current,
								"msgInParts",
								lv_msgInParts_6_0,
								"org.eclipse.xtext.common.Terminals.ID");
						}
					)
				)
			)*
		)?
		otherlv_7=RightCurlyBracket
		{
			newLeafNode(otherlv_7, grammarAccess.getReceiveCaseAccess().getRightCurlyBracketKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getReceiveCaseAccess().getUpdatesUpdateParserRuleCall_6_0());
				}
				lv_updates_8_0=ruleUpdate
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReceiveCaseRule());
					}
					set(
						$current,
						"updates",
						lv_updates_8_0,
						"com.sysma.goat.eclipse_plugin.GoatComponents.Update");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getReceiveCaseAccess().getPrintPrintStatementParserRuleCall_7_0());
				}
				lv_print_9_0=rulePrintStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReceiveCaseRule());
					}
					set(
						$current,
						"print",
						lv_print_9_0,
						"com.sysma.goat.eclipse_plugin.GoatComponents.PrintStatement");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleProcessIf
entryRuleProcessIf returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProcessIfRule()); }
	iv_ruleProcessIf=ruleProcessIf
	{ $current=$iv_ruleProcessIf.current; }
	EOF;

// Rule ProcessIf
ruleProcessIf returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=If
		{
			newLeafNode(otherlv_0, grammarAccess.getProcessIfAccess().getIfKeyword_0());
		}
		otherlv_1=LeftParenthesis
		{
			newLeafNode(otherlv_1, grammarAccess.getProcessIfAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getProcessIfAccess().getCondExpressionParserRuleCall_2_0());
				}
				lv_cond_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProcessIfRule());
					}
					add(
						$current,
						"cond",
						lv_cond_2_0,
						"com.sysma.goat.eclipse_plugin.GoatComponents.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=RightParenthesis
		{
			newLeafNode(otherlv_3, grammarAccess.getProcessIfAccess().getRightParenthesisKeyword_3());
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getProcessIfRule());
			}
			newCompositeNode(grammarAccess.getProcessIfAccess().getProcessThenBlockParserRuleCall_4());
		}
		this_ProcessThenBlock_4=ruleProcessThenBlock[$current]
		{
			$current = $this_ProcessThenBlock_4.current;
			afterParserOrEnumRuleCall();
		}
		(
			otherlv_5=Else
			{
				newLeafNode(otherlv_5, grammarAccess.getProcessIfAccess().getElseKeyword_5_0());
			}
			otherlv_6=If
			{
				newLeafNode(otherlv_6, grammarAccess.getProcessIfAccess().getIfKeyword_5_1());
			}
			otherlv_7=LeftParenthesis
			{
				newLeafNode(otherlv_7, grammarAccess.getProcessIfAccess().getLeftParenthesisKeyword_5_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getProcessIfAccess().getCondExpressionParserRuleCall_5_3_0());
					}
					lv_cond_8_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getProcessIfRule());
						}
						add(
							$current,
							"cond",
							lv_cond_8_0,
							"com.sysma.goat.eclipse_plugin.GoatComponents.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_9=RightParenthesis
			{
				newLeafNode(otherlv_9, grammarAccess.getProcessIfAccess().getRightParenthesisKeyword_5_4());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getProcessIfRule());
				}
				newCompositeNode(grammarAccess.getProcessIfAccess().getProcessThenBlockParserRuleCall_5_5());
			}
			this_ProcessThenBlock_10=ruleProcessThenBlock[$current]
			{
				$current = $this_ProcessThenBlock_10.current;
				afterParserOrEnumRuleCall();
			}
		)*
		(
			otherlv_11=Else
			{
				newLeafNode(otherlv_11, grammarAccess.getProcessIfAccess().getElseKeyword_6_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getProcessIfRule());
				}
				newCompositeNode(grammarAccess.getProcessIfAccess().getProcessThenBlockParserRuleCall_6_1());
			}
			this_ProcessThenBlock_12=ruleProcessThenBlock[$current]
			{
				$current = $this_ProcessThenBlock_12.current;
				afterParserOrEnumRuleCall();
			}
		)?
	)
;


// Rule ProcessThenBlock
ruleProcessThenBlock[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=LeftCurlyBracket
		{
			newLeafNode(otherlv_0, grammarAccess.getProcessThenBlockAccess().getLeftCurlyBracketKeyword_0());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getProcessThenBlockAccess().getActionProcessSendParserRuleCall_1_0_0());
					}
					lv_action_1_1=ruleProcessSend
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getProcessThenBlockRule());
						}
						add(
							$current,
							"action",
							lv_action_1_1,
							"com.sysma.goat.eclipse_plugin.GoatComponents.ProcessSend");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getProcessThenBlockAccess().getActionProcessReceiveParserRuleCall_1_0_1());
					}
					lv_action_1_2=ruleProcessReceive
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getProcessThenBlockRule());
						}
						add(
							$current,
							"action",
							lv_action_1_2,
							"com.sysma.goat.eclipse_plugin.GoatComponents.ProcessReceive");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getProcessThenBlockAccess().getActionProcessSetParserRuleCall_1_0_2());
					}
					lv_action_1_3=ruleProcessSet
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getProcessThenBlockRule());
						}
						add(
							$current,
							"action",
							lv_action_1_3,
							"com.sysma.goat.eclipse_plugin.GoatComponents.ProcessSet");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getProcessThenBlockAccess().getThenPTBThenParserRuleCall_2_0());
				}
				lv_then_2_0=rulePTBThen
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProcessThenBlockRule());
					}
					add(
						$current,
						"then",
						lv_then_2_0,
						"com.sysma.goat.eclipse_plugin.GoatComponents.PTBThen");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=RightCurlyBracket
		{
			newLeafNode(otherlv_3, grammarAccess.getProcessThenBlockAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRulePTBThen
entryRulePTBThen returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPTBThenRule()); }
	iv_rulePTBThen=rulePTBThen
	{ $current=$iv_rulePTBThen.current; }
	EOF;

// Rule PTBThen
rulePTBThen returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getPTBThenAccess().getProcessBlockAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getPTBThenAccess().getStatementsProcessStatementParserRuleCall_1_0());
				}
				lv_statements_1_0=ruleProcessStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPTBThenRule());
					}
					add(
						$current,
						"statements",
						lv_statements_1_0,
						"com.sysma.goat.eclipse_plugin.GoatComponents.ProcessStatement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleProcessSet
entryRuleProcessSet returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProcessSetRule()); }
	iv_ruleProcessSet=ruleProcessSet
	{ $current=$iv_ruleProcessSet.current; }
	EOF;

// Rule ProcessSet
ruleProcessSet returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Set
		{
			newLeafNode(otherlv_0, grammarAccess.getProcessSetAccess().getSetKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getProcessSetAccess().getUpdateUpdateParserRuleCall_1_0());
				}
				lv_update_1_0=ruleUpdate
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProcessSetRule());
					}
					set(
						$current,
						"update",
						lv_update_1_0,
						"com.sysma.goat.eclipse_plugin.GoatComponents.Update");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getProcessSetAccess().getPrintPrintStatementParserRuleCall_2_0());
				}
				lv_print_2_0=rulePrintStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProcessSetRule());
					}
					set(
						$current,
						"print",
						lv_print_2_0,
						"com.sysma.goat.eclipse_plugin.GoatComponents.PrintStatement");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_3=Semicolon
		{
			newLeafNode(otherlv_3, grammarAccess.getProcessSetAccess().getSemicolonKeyword_3());
		}
	)
;

// Entry rule entryRuleProcessWaitFor
entryRuleProcessWaitFor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProcessWaitForRule()); }
	iv_ruleProcessWaitFor=ruleProcessWaitFor
	{ $current=$iv_ruleProcessWaitFor.current; }
	EOF;

// Rule ProcessWaitFor
ruleProcessWaitFor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Waitfor
		{
			newLeafNode(otherlv_0, grammarAccess.getProcessWaitForAccess().getWaitforKeyword_0());
		}
		otherlv_1=LeftParenthesis
		{
			newLeafNode(otherlv_1, grammarAccess.getProcessWaitForAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getProcessWaitForAccess().getCondExpressionParserRuleCall_2_0());
				}
				lv_cond_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProcessWaitForRule());
					}
					set(
						$current,
						"cond",
						lv_cond_2_0,
						"com.sysma.goat.eclipse_plugin.GoatComponents.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=RightParenthesis
		{
			newLeafNode(otherlv_3, grammarAccess.getProcessWaitForAccess().getRightParenthesisKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getProcessWaitForAccess().getUpdateUpdateParserRuleCall_4_0());
				}
				lv_update_4_0=ruleUpdate
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProcessWaitForRule());
					}
					set(
						$current,
						"update",
						lv_update_4_0,
						"com.sysma.goat.eclipse_plugin.GoatComponents.Update");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getProcessWaitForAccess().getPrintPrintStatementParserRuleCall_5_0());
				}
				lv_print_5_0=rulePrintStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProcessWaitForRule());
					}
					set(
						$current,
						"print",
						lv_print_5_0,
						"com.sysma.goat.eclipse_plugin.GoatComponents.PrintStatement");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_6=Semicolon
		{
			newLeafNode(otherlv_6, grammarAccess.getProcessWaitForAccess().getSemicolonKeyword_6());
		}
	)
;

// Entry rule entryRuleProcessLoop
entryRuleProcessLoop returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProcessLoopRule()); }
	iv_ruleProcessLoop=ruleProcessLoop
	{ $current=$iv_ruleProcessLoop.current; }
	EOF;

// Rule ProcessLoop
ruleProcessLoop returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Loop
		{
			newLeafNode(otherlv_0, grammarAccess.getProcessLoopAccess().getLoopKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getProcessLoopAccess().getBlockProcessBlockParserRuleCall_1_0());
				}
				lv_block_1_0=ruleProcessBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProcessLoopRule());
					}
					set(
						$current,
						"block",
						lv_block_1_0,
						"com.sysma.goat.eclipse_plugin.GoatComponents.ProcessBlock");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleUpdate
entryRuleUpdate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUpdateRule()); }
	iv_ruleUpdate=ruleUpdate
	{ $current=$iv_ruleUpdate.current; }
	EOF;

// Rule Update
ruleUpdate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getUpdateAccess().getUpdateAction_0(),
					$current);
			}
		)
		(
			otherlv_1=LeftSquareBracket
			{
				newLeafNode(otherlv_1, grammarAccess.getUpdateAccess().getLeftSquareBracketKeyword_1_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getUpdateAccess().getAttributeUpdateComponentAttributeParserRuleCall_1_1_0_0());
						}
						lv_attribute_2_1=ruleUpdateComponentAttribute
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getUpdateRule());
							}
							add(
								$current,
								"attribute",
								lv_attribute_2_1,
								"com.sysma.goat.eclipse_plugin.GoatComponents.UpdateComponentAttribute");
							afterParserOrEnumRuleCall();
						}
						    |
						{
							newCompositeNode(grammarAccess.getUpdateAccess().getAttributeUpdateLocalAttributeParserRuleCall_1_1_0_1());
						}
						lv_attribute_2_2=ruleUpdateLocalAttribute
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getUpdateRule());
							}
							add(
								$current,
								"attribute",
								lv_attribute_2_2,
								"com.sysma.goat.eclipse_plugin.GoatComponents.UpdateLocalAttribute");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			otherlv_3=ColonEqualsSign
			{
				newLeafNode(otherlv_3, grammarAccess.getUpdateAccess().getColonEqualsSignKeyword_1_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getUpdateAccess().getValueExpressionParserRuleCall_1_3_0());
					}
					lv_value_4_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUpdateRule());
						}
						add(
							$current,
							"value",
							lv_value_4_0,
							"com.sysma.goat.eclipse_plugin.GoatComponents.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_5=Comma
				{
					newLeafNode(otherlv_5, grammarAccess.getUpdateAccess().getCommaKeyword_1_4_0());
				}
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getUpdateAccess().getAttributeUpdateComponentAttributeParserRuleCall_1_4_1_0_0());
							}
							lv_attribute_6_1=ruleUpdateComponentAttribute
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getUpdateRule());
								}
								add(
									$current,
									"attribute",
									lv_attribute_6_1,
									"com.sysma.goat.eclipse_plugin.GoatComponents.UpdateComponentAttribute");
								afterParserOrEnumRuleCall();
							}
							    |
							{
								newCompositeNode(grammarAccess.getUpdateAccess().getAttributeUpdateLocalAttributeParserRuleCall_1_4_1_0_1());
							}
							lv_attribute_6_2=ruleUpdateLocalAttribute
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getUpdateRule());
								}
								add(
									$current,
									"attribute",
									lv_attribute_6_2,
									"com.sysma.goat.eclipse_plugin.GoatComponents.UpdateLocalAttribute");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
				otherlv_7=ColonEqualsSign
				{
					newLeafNode(otherlv_7, grammarAccess.getUpdateAccess().getColonEqualsSignKeyword_1_4_2());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getUpdateAccess().getValueExpressionParserRuleCall_1_4_3_0());
						}
						lv_value_8_0=ruleExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getUpdateRule());
							}
							add(
								$current,
								"value",
								lv_value_8_0,
								"com.sysma.goat.eclipse_plugin.GoatComponents.Expression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_9=RightSquareBracket
			{
				newLeafNode(otherlv_9, grammarAccess.getUpdateAccess().getRightSquareBracketKeyword_1_5());
			}
		)?
	)
;

// Entry rule entryRuleUpdateComponentAttribute
entryRuleUpdateComponentAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUpdateComponentAttributeRule()); }
	iv_ruleUpdateComponentAttribute=ruleUpdateComponentAttribute
	{ $current=$iv_ruleUpdateComponentAttribute.current; }
	EOF;

// Rule UpdateComponentAttribute
ruleUpdateComponentAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Comp
		{
			newLeafNode(otherlv_0, grammarAccess.getUpdateComponentAttributeAccess().getCompKeyword_0());
		}
		otherlv_1=FullStop
		{
			newLeafNode(otherlv_1, grammarAccess.getUpdateComponentAttributeAccess().getFullStopKeyword_1());
		}
		(
			(
				lv_atname_2_0=RULE_ID
				{
					newLeafNode(lv_atname_2_0, grammarAccess.getUpdateComponentAttributeAccess().getAtnameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUpdateComponentAttributeRule());
					}
					setWithLastConsumed(
						$current,
						"atname",
						lv_atname_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleUpdateLocalAttribute
entryRuleUpdateLocalAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUpdateLocalAttributeRule()); }
	iv_ruleUpdateLocalAttribute=ruleUpdateLocalAttribute
	{ $current=$iv_ruleUpdateLocalAttribute.current; }
	EOF;

// Rule UpdateLocalAttribute
ruleUpdateLocalAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Proc
		{
			newLeafNode(otherlv_0, grammarAccess.getUpdateLocalAttributeAccess().getProcKeyword_0());
		}
		otherlv_1=FullStop
		{
			newLeafNode(otherlv_1, grammarAccess.getUpdateLocalAttributeAccess().getFullStopKeyword_1());
		}
		(
			(
				lv_atname_2_0=RULE_ID
				{
					newLeafNode(lv_atname_2_0, grammarAccess.getUpdateLocalAttributeAccess().getAtnameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUpdateLocalAttributeRule());
					}
					setWithLastConsumed(
						$current,
						"atname",
						lv_atname_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRulePrintStatement
entryRulePrintStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrintStatementRule()); }
	iv_rulePrintStatement=rulePrintStatement
	{ $current=$iv_rulePrintStatement.current; }
	EOF;

// Rule PrintStatement
rulePrintStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getPrintStatementAccess().getPrintFormattedStatementParserRuleCall());
	}
	this_PrintFormattedStatement_0=rulePrintFormattedStatement
	{
		$current = $this_PrintFormattedStatement_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRulePrintFormattedStatement
entryRulePrintFormattedStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrintFormattedStatementRule()); }
	iv_rulePrintFormattedStatement=rulePrintFormattedStatement
	{ $current=$iv_rulePrintFormattedStatement.current; }
	EOF;

// Rule PrintFormattedStatement
rulePrintFormattedStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Print
		{
			newLeafNode(otherlv_0, grammarAccess.getPrintFormattedStatementAccess().getPrintKeyword_0());
		}
		otherlv_1=LeftParenthesis
		{
			newLeafNode(otherlv_1, grammarAccess.getPrintFormattedStatementAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				lv_toPrint_2_0=RULE_STRING
				{
					newLeafNode(lv_toPrint_2_0, grammarAccess.getPrintFormattedStatementAccess().getToPrintSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPrintFormattedStatementRule());
					}
					setWithLastConsumed(
						$current,
						"toPrint",
						lv_toPrint_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_3=RightParenthesis
		{
			newLeafNode(otherlv_3, grammarAccess.getPrintFormattedStatementAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleEnvInitValue
entryRuleEnvInitValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnvInitValueRule()); }
	iv_ruleEnvInitValue=ruleEnvInitValue
	{ $current=$iv_ruleEnvInitValue.current; }
	EOF;

// Rule EnvInitValue
ruleEnvInitValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getEnvInitValueAccess().getNegativeIntConstantAction_0_0(),
						$current);
				}
			)
			otherlv_1=HyphenMinus
			{
				newLeafNode(otherlv_1, grammarAccess.getEnvInitValueAccess().getHyphenMinusKeyword_0_1());
			}
			(
				(
					lv_negvalue_2_0=RULE_INT
					{
						newLeafNode(lv_negvalue_2_0, grammarAccess.getEnvInitValueAccess().getNegvalueINTTerminalRuleCall_0_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEnvInitValueRule());
						}
						setWithLastConsumed(
							$current,
							"negvalue",
							lv_negvalue_2_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getEnvInitValueAccess().getIntConstantAction_1_0(),
						$current);
				}
			)
			(
				(
					lv_value_4_0=RULE_INT
					{
						newLeafNode(lv_value_4_0, grammarAccess.getEnvInitValueAccess().getValueINTTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEnvInitValueRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_4_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getEnvInitValueAccess().getStringConstantAction_2_0(),
						$current);
				}
			)
			(
				(
					lv_value_6_0=RULE_STRING
					{
						newLeafNode(lv_value_6_0, grammarAccess.getEnvInitValueAccess().getValueSTRINGTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEnvInitValueRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_6_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getEnvInitValueAccess().getBoolConstantAction_3_0(),
						$current);
				}
			)
			(
				(
					(
						lv_value_8_1=True
						{
							newLeafNode(lv_value_8_1, grammarAccess.getEnvInitValueAccess().getValueTrueKeyword_3_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getEnvInitValueRule());
							}
							setWithLastConsumed($current, "value", lv_value_8_1, null);
						}
						    |
						lv_value_8_2=False
						{
							newLeafNode(lv_value_8_2, grammarAccess.getEnvInitValueAccess().getValueFalseKeyword_3_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getEnvInitValueRule());
							}
							setWithLastConsumed($current, "value", lv_value_8_2, null);
						}
					)
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getEnvInitValueAccess().getTupleConstantAction_4_0(),
						$current);
				}
			)
			otherlv_10=LeftSquareBracket
			{
				newLeafNode(otherlv_10, grammarAccess.getEnvInitValueAccess().getLeftSquareBracketKeyword_4_1());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getEnvInitValueAccess().getElemEnvInitValueParserRuleCall_4_2_0_0());
						}
						lv_elem_11_0=ruleEnvInitValue
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getEnvInitValueRule());
							}
							add(
								$current,
								"elem",
								lv_elem_11_0,
								"com.sysma.goat.eclipse_plugin.GoatComponents.EnvInitValue");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_12=Comma
					{
						newLeafNode(otherlv_12, grammarAccess.getEnvInitValueAccess().getCommaKeyword_4_2_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getEnvInitValueAccess().getElemEnvInitValueParserRuleCall_4_2_1_1_0());
							}
							lv_elem_13_0=ruleEnvInitValue
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getEnvInitValueRule());
								}
								add(
									$current,
									"elem",
									lv_elem_13_0,
									"com.sysma.goat.eclipse_plugin.GoatComponents.EnvInitValue");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)?
			otherlv_14=RightSquareBracket
			{
				newLeafNode(otherlv_14, grammarAccess.getEnvInitValueAccess().getRightSquareBracketKeyword_4_3());
			}
		)
	)
;

// Entry rule entryRuleEnvironment
entryRuleEnvironment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnvironmentRule()); }
	iv_ruleEnvironment=ruleEnvironment
	{ $current=$iv_ruleEnvironment.current; }
	EOF;

// Rule Environment
ruleEnvironment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getEnvironmentAccess().getEnvironmentAction_0(),
					$current);
			}
		)
		otherlv_1=LeftCurlyBracket
		{
			newLeafNode(otherlv_1, grammarAccess.getEnvironmentAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				(
					lv_attrs_2_0=RULE_ID
					{
						newLeafNode(lv_attrs_2_0, grammarAccess.getEnvironmentAccess().getAttrsIDTerminalRuleCall_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEnvironmentRule());
						}
						addWithLastConsumed(
							$current,
							"attrs",
							lv_attrs_2_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			otherlv_3=ColonEqualsSign
			{
				newLeafNode(otherlv_3, grammarAccess.getEnvironmentAccess().getColonEqualsSignKeyword_2_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEnvironmentAccess().getValsEnvInitValueParserRuleCall_2_2_0());
					}
					lv_vals_4_0=ruleEnvInitValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEnvironmentRule());
						}
						add(
							$current,
							"vals",
							lv_vals_4_0,
							"com.sysma.goat.eclipse_plugin.GoatComponents.EnvInitValue");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_5=Comma
				{
					newLeafNode(otherlv_5, grammarAccess.getEnvironmentAccess().getCommaKeyword_2_3_0());
				}
				(
					(
						lv_attrs_6_0=RULE_ID
						{
							newLeafNode(lv_attrs_6_0, grammarAccess.getEnvironmentAccess().getAttrsIDTerminalRuleCall_2_3_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getEnvironmentRule());
							}
							addWithLastConsumed(
								$current,
								"attrs",
								lv_attrs_6_0,
								"org.eclipse.xtext.common.Terminals.ID");
						}
					)
				)
				otherlv_7=ColonEqualsSign
				{
					newLeafNode(otherlv_7, grammarAccess.getEnvironmentAccess().getColonEqualsSignKeyword_2_3_2());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getEnvironmentAccess().getValsEnvInitValueParserRuleCall_2_3_3_0());
						}
						lv_vals_8_0=ruleEnvInitValue
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getEnvironmentRule());
							}
							add(
								$current,
								"vals",
								lv_vals_8_0,
								"com.sysma.goat.eclipse_plugin.GoatComponents.EnvInitValue");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_9=RightCurlyBracket
		{
			newLeafNode(otherlv_9, grammarAccess.getEnvironmentAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleEnvironmentDefinition
entryRuleEnvironmentDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnvironmentDefinitionRule()); }
	iv_ruleEnvironmentDefinition=ruleEnvironmentDefinition
	{ $current=$iv_ruleEnvironmentDefinition.current; }
	EOF;

// Rule EnvironmentDefinition
ruleEnvironmentDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Environment
		{
			newLeafNode(otherlv_0, grammarAccess.getEnvironmentDefinitionAccess().getEnvironmentKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getEnvironmentDefinitionAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEnvironmentDefinitionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getEnvironmentDefinitionAccess().getEnvEnvironmentParserRuleCall_2_0());
				}
				lv_env_2_0=ruleEnvironment
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEnvironmentDefinitionRule());
					}
					set(
						$current,
						"env",
						lv_env_2_0,
						"com.sysma.goat.eclipse_plugin.GoatComponents.Environment");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleComponentDefinition
entryRuleComponentDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComponentDefinitionRule()); }
	iv_ruleComponentDefinition=ruleComponentDefinition
	{ $current=$iv_ruleComponentDefinition.current; }
	EOF;

// Rule ComponentDefinition
ruleComponentDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Component
		{
			newLeafNode(otherlv_0, grammarAccess.getComponentDefinitionAccess().getComponentKeyword_0());
		}
		(
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getComponentDefinitionRule());
						}
					}
					otherlv_1=RULE_ID
					{
						newLeafNode(otherlv_1, grammarAccess.getComponentDefinitionAccess().getEnvrefEnvironmentDefinitionCrossReference_1_0_0());
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getComponentDefinitionAccess().getEnvEnvironmentParserRuleCall_1_1_0());
					}
					lv_env_2_0=ruleEnvironment
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getComponentDefinitionRule());
						}
						set(
							$current,
							"env",
							lv_env_2_0,
							"com.sysma.goat.eclipse_plugin.GoatComponents.Environment");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		otherlv_3=Colon
		{
			newLeafNode(otherlv_3, grammarAccess.getComponentDefinitionAccess().getColonKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getComponentDefinitionAccess().getBlockPDPBlockParserRuleCall_3_0_0());
					}
					lv_block_4_1=rulePDPBlock
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getComponentDefinitionRule());
						}
						set(
							$current,
							"block",
							lv_block_4_1,
							"com.sysma.goat.eclipse_plugin.GoatComponents.PDPBlock");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getComponentDefinitionAccess().getBlockProcessBlockParserRuleCall_3_0_1());
					}
					lv_block_4_2=ruleProcessBlock
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getComponentDefinitionRule());
						}
						set(
							$current,
							"block",
							lv_block_4_2,
							"com.sysma.goat.eclipse_plugin.GoatComponents.ProcessBlock");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	iv_ruleExpression=ruleExpression
	{ $current=$iv_ruleExpression.current; }
	EOF;

// Rule Expression
ruleExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getExpressionAccess().getOrParserRuleCall());
	}
	this_Or_0=ruleOr
	{
		$current = $this_Or_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleOr
entryRuleOr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOrRule()); }
	iv_ruleOr=ruleOr
	{ $current=$iv_ruleOr.current; }
	EOF;

// Rule Or
ruleOr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getOrAccess().getAndParserRuleCall_0());
		}
		this_And_0=ruleAnd
		{
			$current = $this_And_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndAdd(
						grammarAccess.getOrAccess().getOrSubAction_1_0(),
						$current);
				}
			)
			otherlv_2=VerticalLineVerticalLine
			{
				newLeafNode(otherlv_2, grammarAccess.getOrAccess().getVerticalLineVerticalLineKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOrAccess().getSubAndParserRuleCall_1_2_0());
					}
					lv_sub_3_0=ruleAnd
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOrRule());
						}
						add(
							$current,
							"sub",
							lv_sub_3_0,
							"com.sysma.goat.eclipse_plugin.GoatComponents.And");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleAnd
entryRuleAnd returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAndRule()); }
	iv_ruleAnd=ruleAnd
	{ $current=$iv_ruleAnd.current; }
	EOF;

// Rule And
ruleAnd returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAndAccess().getEqualityParserRuleCall_0());
		}
		this_Equality_0=ruleEquality
		{
			$current = $this_Equality_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndAdd(
						grammarAccess.getAndAccess().getAndSubAction_1_0(),
						$current);
				}
			)
			otherlv_2=AmpersandAmpersand
			{
				newLeafNode(otherlv_2, grammarAccess.getAndAccess().getAmpersandAmpersandKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAndAccess().getSubEqualityParserRuleCall_1_2_0());
					}
					lv_sub_3_0=ruleEquality
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAndRule());
						}
						add(
							$current,
							"sub",
							lv_sub_3_0,
							"com.sysma.goat.eclipse_plugin.GoatComponents.Equality");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleEquality
entryRuleEquality returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEqualityRule()); }
	iv_ruleEquality=ruleEquality
	{ $current=$iv_ruleEquality.current; }
	EOF;

// Rule Equality
ruleEquality returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEqualityAccess().getComparisonParserRuleCall_0());
		}
		this_Comparison_0=ruleComparison
		{
			$current = $this_Comparison_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getEqualityAccess().getEqualityLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						lv_op_2_1=EqualsSignEqualsSign
						{
							newLeafNode(lv_op_2_1, grammarAccess.getEqualityAccess().getOpEqualsSignEqualsSignKeyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getEqualityRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_1, null);
						}
						    |
						lv_op_2_2=ExclamationMarkEqualsSign
						{
							newLeafNode(lv_op_2_2, grammarAccess.getEqualityAccess().getOpExclamationMarkEqualsSignKeyword_1_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getEqualityRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_2, null);
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getEqualityAccess().getRightComparisonParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleComparison
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEqualityRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"com.sysma.goat.eclipse_plugin.GoatComponents.Comparison");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleComparison
entryRuleComparison returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComparisonRule()); }
	iv_ruleComparison=ruleComparison
	{ $current=$iv_ruleComparison.current; }
	EOF;

// Rule Comparison
ruleComparison returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getComparisonAccess().getPlusOrMinusParserRuleCall_0());
		}
		this_PlusOrMinus_0=rulePlusOrMinus
		{
			$current = $this_PlusOrMinus_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getComparisonAccess().getComparisonLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						lv_op_2_1=GreaterThanSignEqualsSign
						{
							newLeafNode(lv_op_2_1, grammarAccess.getComparisonAccess().getOpGreaterThanSignEqualsSignKeyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getComparisonRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_1, null);
						}
						    |
						lv_op_2_2=LessThanSignEqualsSign
						{
							newLeafNode(lv_op_2_2, grammarAccess.getComparisonAccess().getOpLessThanSignEqualsSignKeyword_1_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getComparisonRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_2, null);
						}
						    |
						lv_op_2_3=GreaterThanSign
						{
							newLeafNode(lv_op_2_3, grammarAccess.getComparisonAccess().getOpGreaterThanSignKeyword_1_1_0_2());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getComparisonRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_3, null);
						}
						    |
						lv_op_2_4=LessThanSign
						{
							newLeafNode(lv_op_2_4, grammarAccess.getComparisonAccess().getOpLessThanSignKeyword_1_1_0_3());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getComparisonRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_4, null);
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getComparisonAccess().getRightPlusOrMinusParserRuleCall_1_2_0());
					}
					lv_right_3_0=rulePlusOrMinus
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getComparisonRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"com.sysma.goat.eclipse_plugin.GoatComponents.PlusOrMinus");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRulePlusOrMinus
entryRulePlusOrMinus returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPlusOrMinusRule()); }
	iv_rulePlusOrMinus=rulePlusOrMinus
	{ $current=$iv_rulePlusOrMinus.current; }
	EOF;

// Rule PlusOrMinus
rulePlusOrMinus returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPlusOrMinusAccess().getMulOrDivParserRuleCall_0());
		}
		this_MulOrDiv_0=ruleMulOrDiv
		{
			$current = $this_MulOrDiv_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getPlusOrMinusAccess().getPlusLeftAction_1_0_0_0(),
								$current);
						}
					)
					otherlv_2=PlusSign
					{
						newLeafNode(otherlv_2, grammarAccess.getPlusOrMinusAccess().getPlusSignKeyword_1_0_0_1());
					}
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getPlusOrMinusAccess().getMinusLeftAction_1_0_1_0(),
								$current);
						}
					)
					otherlv_4=HyphenMinus
					{
						newLeafNode(otherlv_4, grammarAccess.getPlusOrMinusAccess().getHyphenMinusKeyword_1_0_1_1());
					}
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getPlusOrMinusAccess().getConcatenateLeftAction_1_0_2_0(),
								$current);
						}
					)
					otherlv_6=PlusSignPlusSign
					{
						newLeafNode(otherlv_6, grammarAccess.getPlusOrMinusAccess().getPlusSignPlusSignKeyword_1_0_2_1());
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPlusOrMinusAccess().getRightMulOrDivParserRuleCall_1_1_0());
					}
					lv_right_7_0=ruleMulOrDiv
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPlusOrMinusRule());
						}
						set(
							$current,
							"right",
							lv_right_7_0,
							"com.sysma.goat.eclipse_plugin.GoatComponents.MulOrDiv");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleMulOrDiv
entryRuleMulOrDiv returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMulOrDivRule()); }
	iv_ruleMulOrDiv=ruleMulOrDiv
	{ $current=$iv_ruleMulOrDiv.current; }
	EOF;

// Rule MulOrDiv
ruleMulOrDiv returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getMulOrDivAccess().getPrimaryParserRuleCall_0());
		}
		this_Primary_0=rulePrimary
		{
			$current = $this_Primary_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getMulOrDivAccess().getMulOrDivLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						lv_op_2_1=Asterisk
						{
							newLeafNode(lv_op_2_1, grammarAccess.getMulOrDivAccess().getOpAsteriskKeyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getMulOrDivRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_1, null);
						}
						    |
						lv_op_2_2=Solidus
						{
							newLeafNode(lv_op_2_2, grammarAccess.getMulOrDivAccess().getOpSolidusKeyword_1_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getMulOrDivRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_2, null);
						}
						    |
						lv_op_2_3=PercentSign
						{
							newLeafNode(lv_op_2_3, grammarAccess.getMulOrDivAccess().getOpPercentSignKeyword_1_1_0_2());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getMulOrDivRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_3, null);
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getMulOrDivAccess().getRightPrimaryParserRuleCall_1_2_0());
					}
					lv_right_3_0=rulePrimary
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMulOrDivRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"com.sysma.goat.eclipse_plugin.GoatComponents.Primary");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRulePrimary
entryRulePrimary returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryRule()); }
	iv_rulePrimary=rulePrimary
	{ $current=$iv_rulePrimary.current; }
	EOF;

// Rule Primary
rulePrimary returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0=LeftParenthesis
			{
				newLeafNode(otherlv_0, grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_0_0());
			}
			{
				newCompositeNode(grammarAccess.getPrimaryAccess().getExpressionParserRuleCall_0_1());
			}
			this_Expression_1=ruleExpression
			{
				$current = $this_Expression_1.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_2=RightParenthesis
			{
				newLeafNode(otherlv_2, grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_0_2());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimaryAccess().getUnaryMinusAction_1_0(),
						$current);
				}
			)
			otherlv_4=HyphenMinus
			{
				newLeafNode(otherlv_4, grammarAccess.getPrimaryAccess().getHyphenMinusKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryAccess().getExpressionPrimaryParserRuleCall_1_2_0());
					}
					lv_expression_5_0=rulePrimary
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryRule());
						}
						set(
							$current,
							"expression",
							lv_expression_5_0,
							"com.sysma.goat.eclipse_plugin.GoatComponents.Primary");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimaryAccess().getNotAction_2_0(),
						$current);
				}
			)
			otherlv_7=ExclamationMark
			{
				newLeafNode(otherlv_7, grammarAccess.getPrimaryAccess().getExclamationMarkKeyword_2_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryAccess().getExpressionPrimaryParserRuleCall_2_2_0());
					}
					lv_expression_8_0=rulePrimary
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryRule());
						}
						set(
							$current,
							"expression",
							lv_expression_8_0,
							"com.sysma.goat.eclipse_plugin.GoatComponents.Primary");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryAccess().getAtomicParserRuleCall_3());
		}
		this_Atomic_9=ruleAtomic
		{
			$current = $this_Atomic_9.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleAtomic
entryRuleAtomic returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAtomicRule()); }
	iv_ruleAtomic=ruleAtomic
	{ $current=$iv_ruleAtomic.current; }
	EOF;

// Rule Atomic
ruleAtomic returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicAccess().getIntConstantAction_0_0(),
						$current);
				}
			)
			(
				(
					lv_value_1_0=RULE_INT
					{
						newLeafNode(lv_value_1_0, grammarAccess.getAtomicAccess().getValueINTTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAtomicRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_1_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicAccess().getStringConstantAction_1_0(),
						$current);
				}
			)
			(
				(
					lv_value_3_0=RULE_STRING
					{
						newLeafNode(lv_value_3_0, grammarAccess.getAtomicAccess().getValueSTRINGTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAtomicRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_3_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicAccess().getBoolConstantAction_2_0(),
						$current);
				}
			)
			(
				(
					(
						lv_value_5_1=True
						{
							newLeafNode(lv_value_5_1, grammarAccess.getAtomicAccess().getValueTrueKeyword_2_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getAtomicRule());
							}
							setWithLastConsumed($current, "value", lv_value_5_1, null);
						}
						    |
						lv_value_5_2=False
						{
							newLeafNode(lv_value_5_2, grammarAccess.getAtomicAccess().getValueFalseKeyword_2_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getAtomicRule());
							}
							setWithLastConsumed($current, "value", lv_value_5_2, null);
						}
					)
				)
			)
		)
		    |
		(
			{
				newCompositeNode(grammarAccess.getAtomicAccess().getAtomicIndexableParserRuleCall_3_0());
			}
			this_AtomicIndexable_6=ruleAtomicIndexable
			{
				$current = $this_AtomicIndexable_6.current;
				afterParserOrEnumRuleCall();
			}
			(
				otherlv_7=LeftSquareBracket
				{
					newLeafNode(otherlv_7, grammarAccess.getAtomicAccess().getLeftSquareBracketKeyword_3_1_0());
				}
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getAtomicAccess().getTupleGetElemAction_3_1_1(),
							$current);
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getAtomicAccess().getIdxAtomicParserRuleCall_3_1_2_0());
						}
						lv_idx_9_0=ruleAtomic
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAtomicRule());
							}
							set(
								$current,
								"idx",
								lv_idx_9_0,
								"com.sysma.goat.eclipse_plugin.GoatComponents.Atomic");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_10=RightSquareBracket
				{
					newLeafNode(otherlv_10, grammarAccess.getAtomicAccess().getRightSquareBracketKeyword_3_1_3());
				}
			)?
		)
	)
;

// Entry rule entryRuleAtomicIndexable
entryRuleAtomicIndexable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAtomicIndexableRule()); }
	iv_ruleAtomicIndexable=ruleAtomicIndexable
	{ $current=$iv_ruleAtomicIndexable.current; }
	EOF;

// Rule AtomicIndexable
ruleAtomicIndexable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicIndexableAccess().getTupleConstantAction_0_0(),
						$current);
				}
			)
			otherlv_1=LeftSquareBracket
			{
				newLeafNode(otherlv_1, grammarAccess.getAtomicIndexableAccess().getLeftSquareBracketKeyword_0_1());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getAtomicIndexableAccess().getElemExpressionParserRuleCall_0_2_0_0());
						}
						lv_elem_2_0=ruleExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAtomicIndexableRule());
							}
							add(
								$current,
								"elem",
								lv_elem_2_0,
								"com.sysma.goat.eclipse_plugin.GoatComponents.Expression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_3=Comma
					{
						newLeafNode(otherlv_3, grammarAccess.getAtomicIndexableAccess().getCommaKeyword_0_2_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getAtomicIndexableAccess().getElemExpressionParserRuleCall_0_2_1_1_0());
							}
							lv_elem_4_0=ruleExpression
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getAtomicIndexableRule());
								}
								add(
									$current,
									"elem",
									lv_elem_4_0,
									"com.sysma.goat.eclipse_plugin.GoatComponents.Expression");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)?
			otherlv_5=RightSquareBracket
			{
				newLeafNode(otherlv_5, grammarAccess.getAtomicIndexableAccess().getRightSquareBracketKeyword_0_3());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicIndexableAccess().getTupleLengthAction_1_0(),
						$current);
				}
			)
			otherlv_7=Length
			{
				newLeafNode(otherlv_7, grammarAccess.getAtomicIndexableAccess().getLengthKeyword_1_1());
			}
			otherlv_8=LeftParenthesis
			{
				newLeafNode(otherlv_8, grammarAccess.getAtomicIndexableAccess().getLeftParenthesisKeyword_1_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAtomicIndexableAccess().getElemAtomicParserRuleCall_1_3_0());
					}
					lv_elem_9_0=ruleAtomic
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAtomicIndexableRule());
						}
						set(
							$current,
							"elem",
							lv_elem_9_0,
							"com.sysma.goat.eclipse_plugin.GoatComponents.Atomic");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_10=RightParenthesis
			{
				newLeafNode(otherlv_10, grammarAccess.getAtomicIndexableAccess().getRightParenthesisKeyword_1_4());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicIndexableAccess().getTupleGetAction_2_0(),
						$current);
				}
			)
			otherlv_12=Get
			{
				newLeafNode(otherlv_12, grammarAccess.getAtomicIndexableAccess().getGetKeyword_2_1());
			}
			otherlv_13=LeftParenthesis
			{
				newLeafNode(otherlv_13, grammarAccess.getAtomicIndexableAccess().getLeftParenthesisKeyword_2_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAtomicIndexableAccess().getElemAtomicParserRuleCall_2_3_0());
					}
					lv_elem_14_0=ruleAtomic
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAtomicIndexableRule());
						}
						set(
							$current,
							"elem",
							lv_elem_14_0,
							"com.sysma.goat.eclipse_plugin.GoatComponents.Atomic");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_15=Comma
			{
				newLeafNode(otherlv_15, grammarAccess.getAtomicIndexableAccess().getCommaKeyword_2_4());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAtomicIndexableAccess().getIdxAtomicParserRuleCall_2_5_0());
					}
					lv_idx_16_0=ruleAtomic
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAtomicIndexableRule());
						}
						set(
							$current,
							"idx",
							lv_idx_16_0,
							"com.sysma.goat.eclipse_plugin.GoatComponents.Atomic");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_17=RightParenthesis
			{
				newLeafNode(otherlv_17, grammarAccess.getAtomicIndexableAccess().getRightParenthesisKeyword_2_6());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicIndexableAccess().getLocalVarRefAction_3_0(),
						$current);
				}
			)
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAtomicIndexableRule());
						}
					}
					otherlv_19=RULE_ID
					{
						newLeafNode(otherlv_19, grammarAccess.getAtomicIndexableAccess().getRefLRefCrossReference_3_1_0());
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicIndexableAccess().getLocalAttributeRefAction_4_0(),
						$current);
				}
			)
			otherlv_21=Proc
			{
				newLeafNode(otherlv_21, grammarAccess.getAtomicIndexableAccess().getProcKeyword_4_1());
			}
			otherlv_22=FullStop
			{
				newLeafNode(otherlv_22, grammarAccess.getAtomicIndexableAccess().getFullStopKeyword_4_2());
			}
			(
				(
					lv_attribute_23_0=RULE_ID
					{
						newLeafNode(lv_attribute_23_0, grammarAccess.getAtomicIndexableAccess().getAttributeIDTerminalRuleCall_4_3_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAtomicIndexableRule());
						}
						setWithLastConsumed(
							$current,
							"attribute",
							lv_attribute_23_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicIndexableAccess().getFunctionCallAction_5_0(),
						$current);
				}
			)
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAtomicIndexableRule());
						}
					}
					otherlv_25=RULE_ID
					{
						newLeafNode(otherlv_25, grammarAccess.getAtomicIndexableAccess().getFunctionFuncDefinitionCrossReference_5_1_0());
					}
				)
			)
			otherlv_26=LeftParenthesis
			{
				newLeafNode(otherlv_26, grammarAccess.getAtomicIndexableAccess().getLeftParenthesisKeyword_5_2());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getAtomicIndexableAccess().getParamsExpressionParserRuleCall_5_3_0_0());
						}
						lv_params_27_0=ruleExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAtomicIndexableRule());
							}
							add(
								$current,
								"params",
								lv_params_27_0,
								"com.sysma.goat.eclipse_plugin.GoatComponents.Expression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_28=Comma
					{
						newLeafNode(otherlv_28, grammarAccess.getAtomicIndexableAccess().getCommaKeyword_5_3_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getAtomicIndexableAccess().getParamsExpressionParserRuleCall_5_3_1_1_0());
							}
							lv_params_29_0=ruleExpression
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getAtomicIndexableRule());
								}
								add(
									$current,
									"params",
									lv_params_29_0,
									"com.sysma.goat.eclipse_plugin.GoatComponents.Expression");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)?
			otherlv_30=RightParenthesis
			{
				newLeafNode(otherlv_30, grammarAccess.getAtomicIndexableAccess().getRightParenthesisKeyword_5_4());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicIndexableAccess().getComponentAttributeRefAction_6_0(),
						$current);
				}
			)
			otherlv_32=Comp
			{
				newLeafNode(otherlv_32, grammarAccess.getAtomicIndexableAccess().getCompKeyword_6_1());
			}
			otherlv_33=FullStop
			{
				newLeafNode(otherlv_33, grammarAccess.getAtomicIndexableAccess().getFullStopKeyword_6_2());
			}
			(
				(
					lv_attribute_34_0=RULE_ID
					{
						newLeafNode(lv_attribute_34_0, grammarAccess.getAtomicIndexableAccess().getAttributeIDTerminalRuleCall_6_3_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAtomicIndexableRule());
						}
						setWithLastConsumed(
							$current,
							"attribute",
							lv_attribute_34_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleOutputPredicate
entryRuleOutputPredicate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOutputPredicateRule()); }
	iv_ruleOutputPredicate=ruleOutputPredicate
	{ $current=$iv_ruleOutputPredicate.current; }
	EOF;

// Rule OutputPredicate
ruleOutputPredicate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getOutputPredicateAccess().getOutOrParserRuleCall());
	}
	this_OutOr_0=ruleOutOr
	{
		$current = $this_OutOr_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleOutOr
entryRuleOutOr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOutOrRule()); }
	iv_ruleOutOr=ruleOutOr
	{ $current=$iv_ruleOutOr.current; }
	EOF;

// Rule OutOr
ruleOutOr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getOutOrAccess().getOutAndParserRuleCall_0());
		}
		this_OutAnd_0=ruleOutAnd
		{
			$current = $this_OutAnd_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndAdd(
						grammarAccess.getOutOrAccess().getOrSubAction_1_0(),
						$current);
				}
			)
			otherlv_2=VerticalLineVerticalLine
			{
				newLeafNode(otherlv_2, grammarAccess.getOutOrAccess().getVerticalLineVerticalLineKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOutOrAccess().getSubOutAndParserRuleCall_1_2_0());
					}
					lv_sub_3_0=ruleOutAnd
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOutOrRule());
						}
						add(
							$current,
							"sub",
							lv_sub_3_0,
							"com.sysma.goat.eclipse_plugin.GoatComponents.OutAnd");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleOutAnd
entryRuleOutAnd returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOutAndRule()); }
	iv_ruleOutAnd=ruleOutAnd
	{ $current=$iv_ruleOutAnd.current; }
	EOF;

// Rule OutAnd
ruleOutAnd returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getOutAndAccess().getOutEqualityComparisonParserRuleCall_0());
		}
		this_OutEqualityComparison_0=ruleOutEqualityComparison
		{
			$current = $this_OutEqualityComparison_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndAdd(
						grammarAccess.getOutAndAccess().getAndSubAction_1_0(),
						$current);
				}
			)
			otherlv_2=AmpersandAmpersand
			{
				newLeafNode(otherlv_2, grammarAccess.getOutAndAccess().getAmpersandAmpersandKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOutAndAccess().getSubOutEqualityComparisonParserRuleCall_1_2_0());
					}
					lv_sub_3_0=ruleOutEqualityComparison
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOutAndRule());
						}
						add(
							$current,
							"sub",
							lv_sub_3_0,
							"com.sysma.goat.eclipse_plugin.GoatComponents.OutEqualityComparison");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleOutEqualityComparison
entryRuleOutEqualityComparison returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOutEqualityComparisonRule()); }
	iv_ruleOutEqualityComparison=ruleOutEqualityComparison
	{ $current=$iv_ruleOutEqualityComparison.current; }
	EOF;

// Rule OutEqualityComparison
ruleOutEqualityComparison returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getOutEqualityComparisonAccess().getOutPrimaryParserRuleCall_0());
		}
		this_OutPrimary_0=ruleOutPrimary
		{
			$current = $this_OutPrimary_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getOutEqualityComparisonAccess().getOutEqualityComparisonAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getOutEqualityComparisonAccess().getLeftOutAtomicOrRecParserRuleCall_1_1_0());
					}
					lv_left_2_0=ruleOutAtomicOrRec
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOutEqualityComparisonRule());
						}
						set(
							$current,
							"left",
							lv_left_2_0,
							"com.sysma.goat.eclipse_plugin.GoatComponents.OutAtomicOrRec");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					(
						lv_op_3_1=EqualsSignEqualsSign
						{
							newLeafNode(lv_op_3_1, grammarAccess.getOutEqualityComparisonAccess().getOpEqualsSignEqualsSignKeyword_1_2_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getOutEqualityComparisonRule());
							}
							setWithLastConsumed($current, "op", lv_op_3_1, null);
						}
						    |
						lv_op_3_2=ExclamationMarkEqualsSign
						{
							newLeafNode(lv_op_3_2, grammarAccess.getOutEqualityComparisonAccess().getOpExclamationMarkEqualsSignKeyword_1_2_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getOutEqualityComparisonRule());
							}
							setWithLastConsumed($current, "op", lv_op_3_2, null);
						}
						    |
						lv_op_3_3=GreaterThanSignEqualsSign
						{
							newLeafNode(lv_op_3_3, grammarAccess.getOutEqualityComparisonAccess().getOpGreaterThanSignEqualsSignKeyword_1_2_0_2());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getOutEqualityComparisonRule());
							}
							setWithLastConsumed($current, "op", lv_op_3_3, null);
						}
						    |
						lv_op_3_4=LessThanSignEqualsSign
						{
							newLeafNode(lv_op_3_4, grammarAccess.getOutEqualityComparisonAccess().getOpLessThanSignEqualsSignKeyword_1_2_0_3());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getOutEqualityComparisonRule());
							}
							setWithLastConsumed($current, "op", lv_op_3_4, null);
						}
						    |
						lv_op_3_5=GreaterThanSign
						{
							newLeafNode(lv_op_3_5, grammarAccess.getOutEqualityComparisonAccess().getOpGreaterThanSignKeyword_1_2_0_4());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getOutEqualityComparisonRule());
							}
							setWithLastConsumed($current, "op", lv_op_3_5, null);
						}
						    |
						lv_op_3_6=LessThanSign
						{
							newLeafNode(lv_op_3_6, grammarAccess.getOutEqualityComparisonAccess().getOpLessThanSignKeyword_1_2_0_5());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getOutEqualityComparisonRule());
							}
							setWithLastConsumed($current, "op", lv_op_3_6, null);
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getOutEqualityComparisonAccess().getRightOutAtomicOrRecParserRuleCall_1_3_0());
					}
					lv_right_4_0=ruleOutAtomicOrRec
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOutEqualityComparisonRule());
						}
						set(
							$current,
							"right",
							lv_right_4_0,
							"com.sysma.goat.eclipse_plugin.GoatComponents.OutAtomicOrRec");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleOutPrimary
entryRuleOutPrimary returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOutPrimaryRule()); }
	iv_ruleOutPrimary=ruleOutPrimary
	{ $current=$iv_ruleOutPrimary.current; }
	EOF;

// Rule OutPrimary
ruleOutPrimary returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0=LeftParenthesis
			{
				newLeafNode(otherlv_0, grammarAccess.getOutPrimaryAccess().getLeftParenthesisKeyword_0_0());
			}
			{
				newCompositeNode(grammarAccess.getOutPrimaryAccess().getOutputPredicateParserRuleCall_0_1());
			}
			this_OutputPredicate_1=ruleOutputPredicate
			{
				$current = $this_OutputPredicate_1.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_2=RightParenthesis
			{
				newLeafNode(otherlv_2, grammarAccess.getOutPrimaryAccess().getRightParenthesisKeyword_0_2());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getOutPrimaryAccess().getNotAction_1_0(),
						$current);
				}
			)
			otherlv_4=ExclamationMark
			{
				newLeafNode(otherlv_4, grammarAccess.getOutPrimaryAccess().getExclamationMarkKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOutPrimaryAccess().getExpressionOutPrimaryParserRuleCall_1_2_0());
					}
					lv_expression_5_0=ruleOutPrimary
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOutPrimaryRule());
						}
						set(
							$current,
							"expression",
							lv_expression_5_0,
							"com.sysma.goat.eclipse_plugin.GoatComponents.OutPrimary");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getOutPrimaryAccess().getBoolConstantAction_2_0(),
						$current);
				}
			)
			(
				(
					(
						lv_value_7_1=True
						{
							newLeafNode(lv_value_7_1, grammarAccess.getOutPrimaryAccess().getValueTrueKeyword_2_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getOutPrimaryRule());
							}
							setWithLastConsumed($current, "value", lv_value_7_1, null);
						}
						    |
						lv_value_7_2=False
						{
							newLeafNode(lv_value_7_2, grammarAccess.getOutPrimaryAccess().getValueFalseKeyword_2_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getOutPrimaryRule());
							}
							setWithLastConsumed($current, "value", lv_value_7_2, null);
						}
					)
				)
			)
		)
	)
;

// Entry rule entryRuleOutAtomicOrRec
entryRuleOutAtomicOrRec returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOutAtomicOrRecRule()); }
	iv_ruleOutAtomicOrRec=ruleOutAtomicOrRec
	{ $current=$iv_ruleOutAtomicOrRec.current; }
	EOF;

// Rule OutAtomicOrRec
ruleOutAtomicOrRec returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getOutAtomicOrRecAccess().getRecAttributeRefAction_0_0(),
						$current);
				}
			)
			otherlv_1=Receiver
			{
				newLeafNode(otherlv_1, grammarAccess.getOutAtomicOrRecAccess().getReceiverKeyword_0_1());
			}
			otherlv_2=FullStop
			{
				newLeafNode(otherlv_2, grammarAccess.getOutAtomicOrRecAccess().getFullStopKeyword_0_2());
			}
			(
				(
					lv_attribute_3_0=RULE_ID
					{
						newLeafNode(lv_attribute_3_0, grammarAccess.getOutAtomicOrRecAccess().getAttributeIDTerminalRuleCall_0_3_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOutAtomicOrRecRule());
						}
						setWithLastConsumed(
							$current,
							"attribute",
							lv_attribute_3_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
		    |
		{
			newCompositeNode(grammarAccess.getOutAtomicOrRecAccess().getOutAtomicParserRuleCall_1());
		}
		this_OutAtomic_4=ruleOutAtomic
		{
			$current = $this_OutAtomic_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleOutAtomic
entryRuleOutAtomic returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOutAtomicRule()); }
	iv_ruleOutAtomic=ruleOutAtomic
	{ $current=$iv_ruleOutAtomic.current; }
	EOF;

// Rule OutAtomic
ruleOutAtomic returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getOutAtomicAccess().getIntConstantAction_0_0(),
						$current);
				}
			)
			(
				(
					lv_value_1_0=RULE_INT
					{
						newLeafNode(lv_value_1_0, grammarAccess.getOutAtomicAccess().getValueINTTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOutAtomicRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_1_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getOutAtomicAccess().getStringConstantAction_1_0(),
						$current);
				}
			)
			(
				(
					lv_value_3_0=RULE_STRING
					{
						newLeafNode(lv_value_3_0, grammarAccess.getOutAtomicAccess().getValueSTRINGTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOutAtomicRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_3_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getOutAtomicAccess().getBoolConstantAction_2_0(),
						$current);
				}
			)
			(
				(
					(
						lv_value_5_1=True
						{
							newLeafNode(lv_value_5_1, grammarAccess.getOutAtomicAccess().getValueTrueKeyword_2_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getOutAtomicRule());
							}
							setWithLastConsumed($current, "value", lv_value_5_1, null);
						}
						    |
						lv_value_5_2=False
						{
							newLeafNode(lv_value_5_2, grammarAccess.getOutAtomicAccess().getValueFalseKeyword_2_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getOutAtomicRule());
							}
							setWithLastConsumed($current, "value", lv_value_5_2, null);
						}
					)
				)
			)
		)
		    |
		(
			{
				newCompositeNode(grammarAccess.getOutAtomicAccess().getOutAtomicIndexableParserRuleCall_3_0());
			}
			this_OutAtomicIndexable_6=ruleOutAtomicIndexable
			{
				$current = $this_OutAtomicIndexable_6.current;
				afterParserOrEnumRuleCall();
			}
			(
				otherlv_7=LeftSquareBracket
				{
					newLeafNode(otherlv_7, grammarAccess.getOutAtomicAccess().getLeftSquareBracketKeyword_3_1_0());
				}
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getOutAtomicAccess().getTupleGetElemAction_3_1_1(),
							$current);
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getOutAtomicAccess().getIdxOutAtomicParserRuleCall_3_1_2_0());
						}
						lv_idx_9_0=ruleOutAtomic
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getOutAtomicRule());
							}
							set(
								$current,
								"idx",
								lv_idx_9_0,
								"com.sysma.goat.eclipse_plugin.GoatComponents.OutAtomic");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_10=RightSquareBracket
				{
					newLeafNode(otherlv_10, grammarAccess.getOutAtomicAccess().getRightSquareBracketKeyword_3_1_3());
				}
			)?
		)
	)
;

// Entry rule entryRuleOutAtomicIndexable
entryRuleOutAtomicIndexable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOutAtomicIndexableRule()); }
	iv_ruleOutAtomicIndexable=ruleOutAtomicIndexable
	{ $current=$iv_ruleOutAtomicIndexable.current; }
	EOF;

// Rule OutAtomicIndexable
ruleOutAtomicIndexable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getOutAtomicIndexableAccess().getTupleConstantAction_0_0(),
						$current);
				}
			)
			otherlv_1=LeftSquareBracket
			{
				newLeafNode(otherlv_1, grammarAccess.getOutAtomicIndexableAccess().getLeftSquareBracketKeyword_0_1());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getOutAtomicIndexableAccess().getElemOutAtomicParserRuleCall_0_2_0_0());
						}
						lv_elem_2_0=ruleOutAtomic
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getOutAtomicIndexableRule());
							}
							add(
								$current,
								"elem",
								lv_elem_2_0,
								"com.sysma.goat.eclipse_plugin.GoatComponents.OutAtomic");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_3=Comma
					{
						newLeafNode(otherlv_3, grammarAccess.getOutAtomicIndexableAccess().getCommaKeyword_0_2_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getOutAtomicIndexableAccess().getElemOutAtomicParserRuleCall_0_2_1_1_0());
							}
							lv_elem_4_0=ruleOutAtomic
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getOutAtomicIndexableRule());
								}
								add(
									$current,
									"elem",
									lv_elem_4_0,
									"com.sysma.goat.eclipse_plugin.GoatComponents.OutAtomic");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)?
			otherlv_5=RightSquareBracket
			{
				newLeafNode(otherlv_5, grammarAccess.getOutAtomicIndexableAccess().getRightSquareBracketKeyword_0_3());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getOutAtomicIndexableAccess().getTupleLengthAction_1_0(),
						$current);
				}
			)
			otherlv_7=Length
			{
				newLeafNode(otherlv_7, grammarAccess.getOutAtomicIndexableAccess().getLengthKeyword_1_1());
			}
			otherlv_8=LeftParenthesis
			{
				newLeafNode(otherlv_8, grammarAccess.getOutAtomicIndexableAccess().getLeftParenthesisKeyword_1_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOutAtomicIndexableAccess().getElemOutAtomicParserRuleCall_1_3_0());
					}
					lv_elem_9_0=ruleOutAtomic
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOutAtomicIndexableRule());
						}
						set(
							$current,
							"elem",
							lv_elem_9_0,
							"com.sysma.goat.eclipse_plugin.GoatComponents.OutAtomic");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_10=RightParenthesis
			{
				newLeafNode(otherlv_10, grammarAccess.getOutAtomicIndexableAccess().getRightParenthesisKeyword_1_4());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getOutAtomicIndexableAccess().getFunctionCallAction_2_0(),
						$current);
				}
			)
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOutAtomicIndexableRule());
						}
					}
					otherlv_12=RULE_ID
					{
						newLeafNode(otherlv_12, grammarAccess.getOutAtomicIndexableAccess().getFunctionFuncDefinitionCrossReference_2_1_0());
					}
				)
			)
			otherlv_13=LeftParenthesis
			{
				newLeafNode(otherlv_13, grammarAccess.getOutAtomicIndexableAccess().getLeftParenthesisKeyword_2_2());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getOutAtomicIndexableAccess().getParamsOutAtomicParserRuleCall_2_3_0_0());
						}
						lv_params_14_0=ruleOutAtomic
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getOutAtomicIndexableRule());
							}
							add(
								$current,
								"params",
								lv_params_14_0,
								"com.sysma.goat.eclipse_plugin.GoatComponents.OutAtomic");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_15=Comma
					{
						newLeafNode(otherlv_15, grammarAccess.getOutAtomicIndexableAccess().getCommaKeyword_2_3_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getOutAtomicIndexableAccess().getParamsOutAtomicParserRuleCall_2_3_1_1_0());
							}
							lv_params_16_0=ruleOutAtomic
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getOutAtomicIndexableRule());
								}
								add(
									$current,
									"params",
									lv_params_16_0,
									"com.sysma.goat.eclipse_plugin.GoatComponents.OutAtomic");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)?
			otherlv_17=RightParenthesis
			{
				newLeafNode(otherlv_17, grammarAccess.getOutAtomicIndexableAccess().getRightParenthesisKeyword_2_4());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getOutAtomicIndexableAccess().getLocalAttributeRefAction_3_0(),
						$current);
				}
			)
			otherlv_19=Proc
			{
				newLeafNode(otherlv_19, grammarAccess.getOutAtomicIndexableAccess().getProcKeyword_3_1());
			}
			otherlv_20=FullStop
			{
				newLeafNode(otherlv_20, grammarAccess.getOutAtomicIndexableAccess().getFullStopKeyword_3_2());
			}
			(
				(
					lv_attribute_21_0=RULE_ID
					{
						newLeafNode(lv_attribute_21_0, grammarAccess.getOutAtomicIndexableAccess().getAttributeIDTerminalRuleCall_3_3_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOutAtomicIndexableRule());
						}
						setWithLastConsumed(
							$current,
							"attribute",
							lv_attribute_21_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getOutAtomicIndexableAccess().getComponentAttributeRefAction_4_0(),
						$current);
				}
			)
			otherlv_23=Comp
			{
				newLeafNode(otherlv_23, grammarAccess.getOutAtomicIndexableAccess().getCompKeyword_4_1());
			}
			otherlv_24=FullStop
			{
				newLeafNode(otherlv_24, grammarAccess.getOutAtomicIndexableAccess().getFullStopKeyword_4_2());
			}
			(
				(
					lv_attribute_25_0=RULE_ID
					{
						newLeafNode(lv_attribute_25_0, grammarAccess.getOutAtomicIndexableAccess().getAttributeIDTerminalRuleCall_4_3_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOutAtomicIndexableRule());
						}
						setWithLastConsumed(
							$current,
							"attribute",
							lv_attribute_25_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleFuncParam
entryRuleFuncParam returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFuncParamRule()); }
	iv_ruleFuncParam=ruleFuncParam
	{ $current=$iv_ruleFuncParam.current; }
	EOF;

// Rule FuncParam
ruleFuncParam returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_type_0_0=RULE_TYPE
				{
					newLeafNode(lv_type_0_0, grammarAccess.getFuncParamAccess().getTypeTYPETerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFuncParamRule());
					}
					setWithLastConsumed(
						$current,
						"type",
						lv_type_0_0,
						"com.sysma.goat.eclipse_plugin.GoatComponents.TYPE");
				}
			)
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getFuncParamAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFuncParamRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleFuncDefinition
entryRuleFuncDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFuncDefinitionRule()); }
	iv_ruleFuncDefinition=ruleFuncDefinition
	{ $current=$iv_ruleFuncDefinition.current; }
	EOF;

// Rule FuncDefinition
ruleFuncDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Function
		{
			newLeafNode(otherlv_0, grammarAccess.getFuncDefinitionAccess().getFunctionKeyword_0());
		}
		(
			(
				lv_type_1_0=RULE_TYPE
				{
					newLeafNode(lv_type_1_0, grammarAccess.getFuncDefinitionAccess().getTypeTYPETerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFuncDefinitionRule());
					}
					setWithLastConsumed(
						$current,
						"type",
						lv_type_1_0,
						"com.sysma.goat.eclipse_plugin.GoatComponents.TYPE");
				}
			)
		)
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getFuncDefinitionAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFuncDefinitionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3=LeftParenthesis
		{
			newLeafNode(otherlv_3, grammarAccess.getFuncDefinitionAccess().getLeftParenthesisKeyword_3());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getFuncDefinitionAccess().getParamsFuncParamParserRuleCall_4_0_0());
					}
					lv_params_4_0=ruleFuncParam
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFuncDefinitionRule());
						}
						add(
							$current,
							"params",
							lv_params_4_0,
							"com.sysma.goat.eclipse_plugin.GoatComponents.FuncParam");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_5=Comma
				{
					newLeafNode(otherlv_5, grammarAccess.getFuncDefinitionAccess().getCommaKeyword_4_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getFuncDefinitionAccess().getParamsFuncParamParserRuleCall_4_1_1_0());
						}
						lv_params_6_0=ruleFuncParam
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFuncDefinitionRule());
							}
							add(
								$current,
								"params",
								lv_params_6_0,
								"com.sysma.goat.eclipse_plugin.GoatComponents.FuncParam");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_7=RightParenthesis
		{
			newLeafNode(otherlv_7, grammarAccess.getFuncDefinitionAccess().getRightParenthesisKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFuncDefinitionAccess().getBlkFuncBlockParserRuleCall_6_0());
				}
				lv_blk_8_0=ruleFuncBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFuncDefinitionRule());
					}
					set(
						$current,
						"blk",
						lv_blk_8_0,
						"com.sysma.goat.eclipse_plugin.GoatComponents.FuncBlock");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFuncBlock
entryRuleFuncBlock returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFuncBlockRule()); }
	iv_ruleFuncBlock=ruleFuncBlock
	{ $current=$iv_ruleFuncBlock.current; }
	EOF;

// Rule FuncBlock
ruleFuncBlock returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=LeftCurlyBracket
		{
			newLeafNode(otherlv_0, grammarAccess.getFuncBlockAccess().getLeftCurlyBracketKeyword_0());
		}
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getFuncBlockAccess().getFuncBlockAction_1(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFuncBlockAccess().getStatementsFuncStatementParserRuleCall_2_0());
				}
				lv_statements_2_0=ruleFuncStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFuncBlockRule());
					}
					add(
						$current,
						"statements",
						lv_statements_2_0,
						"com.sysma.goat.eclipse_plugin.GoatComponents.FuncStatement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_3=RightCurlyBracket
		{
			newLeafNode(otherlv_3, grammarAccess.getFuncBlockAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleFuncStatement
entryRuleFuncStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFuncStatementRule()); }
	iv_ruleFuncStatement=ruleFuncStatement
	{ $current=$iv_ruleFuncStatement.current; }
	EOF;

// Rule FuncStatement
ruleFuncStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getFuncStatementAccess().getFuncVarAssignParserRuleCall_0());
		}
		this_FuncVarAssign_0=ruleFuncVarAssign
		{
			$current = $this_FuncVarAssign_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFuncStatementAccess().getFuncIfElseParserRuleCall_1());
		}
		this_FuncIfElse_1=ruleFuncIfElse
		{
			$current = $this_FuncIfElse_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFuncStatementAccess().getFuncReturnParserRuleCall_2());
		}
		this_FuncReturn_2=ruleFuncReturn
		{
			$current = $this_FuncReturn_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFuncStatementAccess().getFuncVarDeclarationParserRuleCall_3());
		}
		this_FuncVarDeclaration_3=ruleFuncVarDeclaration
		{
			$current = $this_FuncVarDeclaration_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFuncStatementAccess().getFuncVarAppendParserRuleCall_4());
		}
		this_FuncVarAppend_4=ruleFuncVarAppend
		{
			$current = $this_FuncVarAppend_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFuncStatementAccess().getFuncVarPopParserRuleCall_5());
		}
		this_FuncVarPop_5=ruleFuncVarPop
		{
			$current = $this_FuncVarPop_5.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleFuncVarDeclaration
entryRuleFuncVarDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFuncVarDeclarationRule()); }
	iv_ruleFuncVarDeclaration=ruleFuncVarDeclaration
	{ $current=$iv_ruleFuncVarDeclaration.current; }
	EOF;

// Rule FuncVarDeclaration
ruleFuncVarDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Var
		{
			newLeafNode(otherlv_0, grammarAccess.getFuncVarDeclarationAccess().getVarKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getFuncVarDeclarationAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFuncVarDeclarationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=EqualsSign
		{
			newLeafNode(otherlv_2, grammarAccess.getFuncVarDeclarationAccess().getEqualsSignKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFuncVarDeclarationAccess().getValExpressionParserRuleCall_3_0());
				}
				lv_val_3_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFuncVarDeclarationRule());
					}
					set(
						$current,
						"val",
						lv_val_3_0,
						"com.sysma.goat.eclipse_plugin.GoatComponents.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFuncVarAssign
entryRuleFuncVarAssign returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFuncVarAssignRule()); }
	iv_ruleFuncVarAssign=ruleFuncVarAssign
	{ $current=$iv_ruleFuncVarAssign.current; }
	EOF;

// Rule FuncVarAssign
ruleFuncVarAssign returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFuncVarAssignRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getFuncVarAssignAccess().getVarFuncVarDeclarationCrossReference_0_0());
				}
			)
		)
		(
			otherlv_1=LeftSquareBracket
			{
				newLeafNode(otherlv_1, grammarAccess.getFuncVarAssignAccess().getLeftSquareBracketKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFuncVarAssignAccess().getIdxExpressionParserRuleCall_1_1_0());
					}
					lv_idx_2_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFuncVarAssignRule());
						}
						set(
							$current,
							"idx",
							lv_idx_2_0,
							"com.sysma.goat.eclipse_plugin.GoatComponents.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_3=RightSquareBracket
			{
				newLeafNode(otherlv_3, grammarAccess.getFuncVarAssignAccess().getRightSquareBracketKeyword_1_2());
			}
		)?
		otherlv_4=EqualsSign
		{
			newLeafNode(otherlv_4, grammarAccess.getFuncVarAssignAccess().getEqualsSignKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFuncVarAssignAccess().getValExpressionParserRuleCall_3_0());
				}
				lv_val_5_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFuncVarAssignRule());
					}
					set(
						$current,
						"val",
						lv_val_5_0,
						"com.sysma.goat.eclipse_plugin.GoatComponents.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFuncVarAppend
entryRuleFuncVarAppend returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFuncVarAppendRule()); }
	iv_ruleFuncVarAppend=ruleFuncVarAppend
	{ $current=$iv_ruleFuncVarAppend.current; }
	EOF;

// Rule FuncVarAppend
ruleFuncVarAppend returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFuncVarAppendRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getFuncVarAppendAccess().getVarFuncVarDeclarationCrossReference_0_0());
				}
			)
		)
		otherlv_1=FullStop
		{
			newLeafNode(otherlv_1, grammarAccess.getFuncVarAppendAccess().getFullStopKeyword_1());
		}
		otherlv_2=Append
		{
			newLeafNode(otherlv_2, grammarAccess.getFuncVarAppendAccess().getAppendKeyword_2());
		}
		otherlv_3=LeftParenthesis
		{
			newLeafNode(otherlv_3, grammarAccess.getFuncVarAppendAccess().getLeftParenthesisKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFuncVarAppendAccess().getItemExpressionParserRuleCall_4_0());
				}
				lv_item_4_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFuncVarAppendRule());
					}
					set(
						$current,
						"item",
						lv_item_4_0,
						"com.sysma.goat.eclipse_plugin.GoatComponents.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=RightParenthesis
		{
			newLeafNode(otherlv_5, grammarAccess.getFuncVarAppendAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuleFuncVarPop
entryRuleFuncVarPop returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFuncVarPopRule()); }
	iv_ruleFuncVarPop=ruleFuncVarPop
	{ $current=$iv_ruleFuncVarPop.current; }
	EOF;

// Rule FuncVarPop
ruleFuncVarPop returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFuncVarPopRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getFuncVarPopAccess().getVarFuncVarDeclarationCrossReference_0_0());
				}
			)
		)
		otherlv_1=FullStop
		{
			newLeafNode(otherlv_1, grammarAccess.getFuncVarPopAccess().getFullStopKeyword_1());
		}
		otherlv_2=Pop
		{
			newLeafNode(otherlv_2, grammarAccess.getFuncVarPopAccess().getPopKeyword_2());
		}
		otherlv_3=LeftParenthesis
		{
			newLeafNode(otherlv_3, grammarAccess.getFuncVarPopAccess().getLeftParenthesisKeyword_3());
		}
		otherlv_4=RightParenthesis
		{
			newLeafNode(otherlv_4, grammarAccess.getFuncVarPopAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleFuncIfElse
entryRuleFuncIfElse returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFuncIfElseRule()); }
	iv_ruleFuncIfElse=ruleFuncIfElse
	{ $current=$iv_ruleFuncIfElse.current; }
	EOF;

// Rule FuncIfElse
ruleFuncIfElse returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=If
		{
			newLeafNode(otherlv_0, grammarAccess.getFuncIfElseAccess().getIfKeyword_0());
		}
		otherlv_1=LeftParenthesis
		{
			newLeafNode(otherlv_1, grammarAccess.getFuncIfElseAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFuncIfElseAccess().getTestExpressionParserRuleCall_2_0());
				}
				lv_test_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFuncIfElseRule());
					}
					add(
						$current,
						"test",
						lv_test_2_0,
						"com.sysma.goat.eclipse_plugin.GoatComponents.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=RightParenthesis
		{
			newLeafNode(otherlv_3, grammarAccess.getFuncIfElseAccess().getRightParenthesisKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFuncIfElseAccess().getThenFuncBlockParserRuleCall_4_0());
				}
				lv_then_4_0=ruleFuncBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFuncIfElseRule());
					}
					add(
						$current,
						"then",
						lv_then_4_0,
						"com.sysma.goat.eclipse_plugin.GoatComponents.FuncBlock");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5=Else
			{
				newLeafNode(otherlv_5, grammarAccess.getFuncIfElseAccess().getElseKeyword_5_0());
			}
			otherlv_6=If
			{
				newLeafNode(otherlv_6, grammarAccess.getFuncIfElseAccess().getIfKeyword_5_1());
			}
			otherlv_7=LeftParenthesis
			{
				newLeafNode(otherlv_7, grammarAccess.getFuncIfElseAccess().getLeftParenthesisKeyword_5_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFuncIfElseAccess().getTestExpressionParserRuleCall_5_3_0());
					}
					lv_test_8_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFuncIfElseRule());
						}
						add(
							$current,
							"test",
							lv_test_8_0,
							"com.sysma.goat.eclipse_plugin.GoatComponents.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_9=RightParenthesis
			{
				newLeafNode(otherlv_9, grammarAccess.getFuncIfElseAccess().getRightParenthesisKeyword_5_4());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFuncIfElseAccess().getThenFuncBlockParserRuleCall_5_5_0());
					}
					lv_then_10_0=ruleFuncBlock
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFuncIfElseRule());
						}
						add(
							$current,
							"then",
							lv_then_10_0,
							"com.sysma.goat.eclipse_plugin.GoatComponents.FuncBlock");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			otherlv_11=Else
			{
				newLeafNode(otherlv_11, grammarAccess.getFuncIfElseAccess().getElseKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFuncIfElseAccess().getElseBranchFuncBlockParserRuleCall_6_1_0());
					}
					lv_elseBranch_12_0=ruleFuncBlock
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFuncIfElseRule());
						}
						set(
							$current,
							"elseBranch",
							lv_elseBranch_12_0,
							"com.sysma.goat.eclipse_plugin.GoatComponents.FuncBlock");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleFuncReturn
entryRuleFuncReturn returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFuncReturnRule()); }
	iv_ruleFuncReturn=ruleFuncReturn
	{ $current=$iv_ruleFuncReturn.current; }
	EOF;

// Rule FuncReturn
ruleFuncReturn returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Return
		{
			newLeafNode(otherlv_0, grammarAccess.getFuncReturnAccess().getReturnKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFuncReturnAccess().getValExpressionParserRuleCall_1_0());
				}
				lv_val_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFuncReturnRule());
					}
					set(
						$current,
						"val",
						lv_val_1_0,
						"com.sysma.goat.eclipse_plugin.GoatComponents.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;
