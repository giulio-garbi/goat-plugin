/*
 * generated by Xtext 2.12.0
 */
parser grammar InternalGoatComponentsParser;

options {
	tokenVocab=InternalGoatComponentsLexer;
	superClass=AbstractInternalAntlrParser;
}

@header {
package com.sysma.goat.eclipse_plugin.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import com.sysma.goat.eclipse_plugin.services.GoatComponentsGrammarAccess;

}

@members {

 	private GoatComponentsGrammarAccess grammarAccess;

    public InternalGoatComponentsParser(TokenStream input, GoatComponentsGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected GoatComponentsGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getModelAccess().getModelAction_0(),
					$current);
			}
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getModelAccess().getProcessesProcessDefinitionParserRuleCall_1_0_0());
					}
					lv_processes_1_0=ruleProcessDefinition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModelRule());
						}
						add(
							$current,
							"processes",
							lv_processes_1_0,
							"com.sysma.goat.eclipse_plugin.GoatComponents.ProcessDefinition");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getModelAccess().getComponentsComponentDefinitionParserRuleCall_1_1_0());
					}
					lv_components_2_0=ruleComponentDefinition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModelRule());
						}
						add(
							$current,
							"components",
							lv_components_2_0,
							"com.sysma.goat.eclipse_plugin.GoatComponents.ComponentDefinition");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getModelAccess().getFunctionsFuncDefinitionParserRuleCall_1_2_0());
					}
					lv_functions_3_0=ruleFuncDefinition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModelRule());
						}
						add(
							$current,
							"functions",
							lv_functions_3_0,
							"com.sysma.goat.eclipse_plugin.GoatComponents.FuncDefinition");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleProc
entryRuleProc returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProcRule()); }
	iv_ruleProc=ruleProc
	{ $current=$iv_ruleProc.current; }
	EOF;

// Rule Proc
ruleProc returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getProcAccess().getInterleavingProcessParserRuleCall_0());
		}
		this_InterleavingProcess_0=ruleInterleavingProcess
		{
			$current = $this_InterleavingProcess_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getProcAccess().getNonDeterminismProcessParserRuleCall_1());
		}
		this_NonDeterminismProcess_1=ruleNonDeterminismProcess
		{
			$current = $this_NonDeterminismProcess_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleInterleavingProcess
entryRuleInterleavingProcess returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInterleavingProcessRule()); }
	iv_ruleInterleavingProcess=ruleInterleavingProcess
	{ $current=$iv_ruleInterleavingProcess.current; }
	EOF;

// Rule InterleavingProcess
ruleInterleavingProcess returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getInterleavingProcessAccess().getCallProcessParserRuleCall_0());
		}
		this_CallProcess_0=ruleCallProcess
		{
			$current = $this_CallProcess_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			{
				$current = forceCreateModelElementAndAdd(
					grammarAccess.getInterleavingProcessAccess().getInterleavingProcessSubProcsAction_1(),
					$current);
			}
		)
		(
			otherlv_2=VerticalLine
			{
				newLeafNode(otherlv_2, grammarAccess.getInterleavingProcessAccess().getVerticalLineKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInterleavingProcessAccess().getSubProcsCallProcessParserRuleCall_2_1_0());
					}
					lv_subProcs_3_0=ruleCallProcess
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInterleavingProcessRule());
						}
						add(
							$current,
							"subProcs",
							lv_subProcs_3_0,
							"com.sysma.goat.eclipse_plugin.GoatComponents.CallProcess");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleNonDeterminismProcess
entryRuleNonDeterminismProcess returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNonDeterminismProcessRule()); }
	iv_ruleNonDeterminismProcess=ruleNonDeterminismProcess
	{ $current=$iv_ruleNonDeterminismProcess.current; }
	EOF;

// Rule NonDeterminismProcess
ruleNonDeterminismProcess returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getNonDeterminismProcessAccess().getPredOutputProcessOrInputProcessesParserRuleCall_0());
		}
		this_PredOutputProcessOrInputProcesses_0=rulePredOutputProcessOrInputProcesses
		{
			$current = $this_PredOutputProcessOrInputProcesses_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getNonDeterminismProcessAccess().getIfProcessesParserRuleCall_1());
		}
		this_IfProcesses_1=ruleIfProcesses
		{
			$current = $this_IfProcesses_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getNonDeterminismProcessAccess().getNProcessParserRuleCall_2());
		}
		this_NProcess_2=ruleNProcess
		{
			$current = $this_NProcess_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulePreconditions
entryRulePreconditions returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPreconditionsRule()); }
	iv_rulePreconditions=rulePreconditions
	{ $current=$iv_rulePreconditions.current; }
	EOF;

// Rule Preconditions
rulePreconditions returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getPreconditionsAccess().getPreconditionsAction_0(),
					$current);
			}
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getPreconditionsAccess().getPrecondUpdateParserRuleCall_1_0_0());
					}
					lv_precond_1_1=ruleUpdate
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPreconditionsRule());
						}
						add(
							$current,
							"precond",
							lv_precond_1_1,
							"com.sysma.goat.eclipse_plugin.GoatComponents.Update");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getPreconditionsAccess().getPrecondAwarenessParserRuleCall_1_0_1());
					}
					lv_precond_1_2=ruleAwareness
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPreconditionsRule());
						}
						add(
							$current,
							"precond",
							lv_precond_1_2,
							"com.sysma.goat.eclipse_plugin.GoatComponents.Awareness");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRulePredOutputProcessOrInputProcesses
entryRulePredOutputProcessOrInputProcesses returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPredOutputProcessOrInputProcessesRule()); }
	iv_rulePredOutputProcessOrInputProcesses=rulePredOutputProcessOrInputProcesses
	{ $current=$iv_rulePredOutputProcessOrInputProcesses.current; }
	EOF;

// Rule PredOutputProcessOrInputProcesses
rulePredOutputProcessOrInputProcesses returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPredOutputProcessOrInputProcessesAccess().getPreconditionsParserRuleCall_0());
		}
		this_Preconditions_0=rulePreconditions
		{
			$current = $this_Preconditions_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getPredOutputProcessOrInputProcessesAccess().getOutputProcessPrecondAction_1_0_0(),
							$current);
					}
				)
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPredOutputProcessOrInputProcessesRule());
					}
					newCompositeNode(grammarAccess.getPredOutputProcessOrInputProcessesAccess().getOutputProcessPartParserRuleCall_1_0_1());
				}
				this_OutputProcessPart_2=ruleOutputProcessPart[$current]
				{
					$current = $this_OutputProcessPart_2.current;
					afterParserOrEnumRuleCall();
				}
			)
			    |
			(
				(
					{
						$current = forceCreateModelElementAndAdd(
							grammarAccess.getPredOutputProcessOrInputProcessesAccess().getInputProcessesPrecondsAction_1_1_0(),
							$current);
					}
				)
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPredOutputProcessOrInputProcessesRule());
					}
					newCompositeNode(grammarAccess.getPredOutputProcessOrInputProcessesAccess().getInputProcessesPartParserRuleCall_1_1_1());
				}
				this_InputProcessesPart_4=ruleInputProcessesPart[$current]
				{
					$current = $this_InputProcessesPart_4.current;
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulePredOutputProcessOrInputProcess
entryRulePredOutputProcessOrInputProcess returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPredOutputProcessOrInputProcessRule()); }
	iv_rulePredOutputProcessOrInputProcess=rulePredOutputProcessOrInputProcess
	{ $current=$iv_rulePredOutputProcessOrInputProcess.current; }
	EOF;

// Rule PredOutputProcessOrInputProcess
rulePredOutputProcessOrInputProcess returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPredOutputProcessOrInputProcessAccess().getPreconditionsParserRuleCall_0());
		}
		this_Preconditions_0=rulePreconditions
		{
			$current = $this_Preconditions_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getPredOutputProcessOrInputProcessAccess().getOutputProcessPrecondAction_1_0_0(),
							$current);
					}
				)
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPredOutputProcessOrInputProcessRule());
					}
					newCompositeNode(grammarAccess.getPredOutputProcessOrInputProcessAccess().getOutputProcessPartParserRuleCall_1_0_1());
				}
				this_OutputProcessPart_2=ruleOutputProcessPart[$current]
				{
					$current = $this_OutputProcessPart_2.current;
					afterParserOrEnumRuleCall();
				}
			)
			    |
			(
				(
					{
						$current = forceCreateModelElementAndAdd(
							grammarAccess.getPredOutputProcessOrInputProcessAccess().getInputProcessesPrecondsAction_1_1_0(),
							$current);
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getPredOutputProcessOrInputProcessAccess().getInputsInputProcessParserRuleCall_1_1_1_0());
						}
						lv_inputs_4_0=ruleInputProcess
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPredOutputProcessOrInputProcessRule());
							}
							add(
								$current,
								"inputs",
								lv_inputs_4_0,
								"com.sysma.goat.eclipse_plugin.GoatComponents.InputProcess");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)
	)
;


// Rule InputProcessesPart
ruleInputProcessesPart[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getInputProcessesPartAccess().getInputsInputProcessParserRuleCall_0_0());
				}
				lv_inputs_0_0=ruleInputProcess
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInputProcessesPartRule());
					}
					add(
						$current,
						"inputs",
						lv_inputs_0_0,
						"com.sysma.goat.eclipse_plugin.GoatComponents.InputProcess");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=PlusSign
			{
				newLeafNode(otherlv_1, grammarAccess.getInputProcessesPartAccess().getPlusSignKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInputProcessesPartAccess().getPrecondsPreconditionsParserRuleCall_1_1_0());
					}
					lv_preconds_2_0=rulePreconditions
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInputProcessesPartRule());
						}
						add(
							$current,
							"preconds",
							lv_preconds_2_0,
							"com.sysma.goat.eclipse_plugin.GoatComponents.Preconditions");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getInputProcessesPartAccess().getInputsInputProcessParserRuleCall_1_2_0());
					}
					lv_inputs_3_0=ruleInputProcess
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInputProcessesPartRule());
						}
						add(
							$current,
							"inputs",
							lv_inputs_3_0,
							"com.sysma.goat.eclipse_plugin.GoatComponents.InputProcess");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleInputProcess
entryRuleInputProcess returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInputProcessRule()); }
	iv_ruleInputProcess=ruleInputProcess
	{ $current=$iv_ruleInputProcess.current; }
	EOF;

// Rule InputProcess
ruleInputProcess returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getInputProcessAccess().getInputProcessAction_0(),
					$current);
			}
		)
		otherlv_1=Receive
		{
			newLeafNode(otherlv_1, grammarAccess.getInputProcessAccess().getReceiveKeyword_1());
		}
		otherlv_2=LeftParenthesis
		{
			newLeafNode(otherlv_2, grammarAccess.getInputProcessAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInputProcessAccess().getRec_predExpressionParserRuleCall_3_0());
				}
				lv_rec_pred_3_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInputProcessRule());
					}
					set(
						$current,
						"rec_pred",
						lv_rec_pred_3_0,
						"com.sysma.goat.eclipse_plugin.GoatComponents.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=RightParenthesis
		{
			newLeafNode(otherlv_4, grammarAccess.getInputProcessAccess().getRightParenthesisKeyword_4());
		}
		otherlv_5=LeftCurlyBracket
		{
			newLeafNode(otherlv_5, grammarAccess.getInputProcessAccess().getLeftCurlyBracketKeyword_5());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getInputProcessAccess().getMsgInPartsAttributeToSetParserRuleCall_6_0_0());
					}
					lv_msgInParts_6_0=ruleAttributeToSet
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInputProcessRule());
						}
						add(
							$current,
							"msgInParts",
							lv_msgInParts_6_0,
							"com.sysma.goat.eclipse_plugin.GoatComponents.AttributeToSet");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_7=Comma
				{
					newLeafNode(otherlv_7, grammarAccess.getInputProcessAccess().getCommaKeyword_6_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getInputProcessAccess().getMsgInPartsAttributeToSetParserRuleCall_6_1_1_0());
						}
						lv_msgInParts_8_0=ruleAttributeToSet
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getInputProcessRule());
							}
							add(
								$current,
								"msgInParts",
								lv_msgInParts_8_0,
								"com.sysma.goat.eclipse_plugin.GoatComponents.AttributeToSet");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_9=RightCurlyBracket
		{
			newLeafNode(otherlv_9, grammarAccess.getInputProcessAccess().getRightCurlyBracketKeyword_7());
		}
		(
			otherlv_10=Print
			{
				newLeafNode(otherlv_10, grammarAccess.getInputProcessAccess().getPrintKeyword_8_0());
			}
			otherlv_11=LeftParenthesis
			{
				newLeafNode(otherlv_11, grammarAccess.getInputProcessAccess().getLeftParenthesisKeyword_8_1());
			}
			(
				(
					lv_output_12_0=RULE_STRING
					{
						newLeafNode(lv_output_12_0, grammarAccess.getInputProcessAccess().getOutputSTRINGTerminalRuleCall_8_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getInputProcessRule());
						}
						setWithLastConsumed(
							$current,
							"output",
							lv_output_12_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
			otherlv_13=RightParenthesis
			{
				newLeafNode(otherlv_13, grammarAccess.getInputProcessAccess().getRightParenthesisKeyword_8_3());
			}
		)?
		otherlv_14=FullStop
		{
			newLeafNode(otherlv_14, grammarAccess.getInputProcessAccess().getFullStopKeyword_9());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInputProcessAccess().getNextNZCProcessParserRuleCall_10_0());
				}
				lv_next_15_0=ruleNZCProcess
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInputProcessRule());
					}
					set(
						$current,
						"next",
						lv_next_15_0,
						"com.sysma.goat.eclipse_plugin.GoatComponents.NZCProcess");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;


// Rule OutputProcessPart
ruleOutputProcessPart[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Send
		{
			newLeafNode(otherlv_0, grammarAccess.getOutputProcessPartAccess().getSendKeyword_0());
		}
		otherlv_1=LeftCurlyBracket
		{
			newLeafNode(otherlv_1, grammarAccess.getOutputProcessPartAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getOutputProcessPartAccess().getMsgOutPartsExpressionParserRuleCall_2_0_0());
					}
					lv_msgOutParts_2_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOutputProcessPartRule());
						}
						add(
							$current,
							"msgOutParts",
							lv_msgOutParts_2_0,
							"com.sysma.goat.eclipse_plugin.GoatComponents.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=Comma
				{
					newLeafNode(otherlv_3, grammarAccess.getOutputProcessPartAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getOutputProcessPartAccess().getMsgOutPartsExpressionParserRuleCall_2_1_1_0());
						}
						lv_msgOutParts_4_0=ruleExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getOutputProcessPartRule());
							}
							add(
								$current,
								"msgOutParts",
								lv_msgOutParts_4_0,
								"com.sysma.goat.eclipse_plugin.GoatComponents.Expression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_5=RightCurlyBracket
		{
			newLeafNode(otherlv_5, grammarAccess.getOutputProcessPartAccess().getRightCurlyBracketKeyword_3());
		}
		otherlv_6=CommercialAt
		{
			newLeafNode(otherlv_6, grammarAccess.getOutputProcessPartAccess().getCommercialAtKeyword_4());
		}
		otherlv_7=LeftParenthesis
		{
			newLeafNode(otherlv_7, grammarAccess.getOutputProcessPartAccess().getLeftParenthesisKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOutputProcessPartAccess().getSend_predExpressionParserRuleCall_6_0());
				}
				lv_send_pred_8_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOutputProcessPartRule());
					}
					set(
						$current,
						"send_pred",
						lv_send_pred_8_0,
						"com.sysma.goat.eclipse_plugin.GoatComponents.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_9=RightParenthesis
		{
			newLeafNode(otherlv_9, grammarAccess.getOutputProcessPartAccess().getRightParenthesisKeyword_7());
		}
		(
			otherlv_10=Print
			{
				newLeafNode(otherlv_10, grammarAccess.getOutputProcessPartAccess().getPrintKeyword_8_0());
			}
			otherlv_11=LeftParenthesis
			{
				newLeafNode(otherlv_11, grammarAccess.getOutputProcessPartAccess().getLeftParenthesisKeyword_8_1());
			}
			(
				(
					lv_output_12_0=RULE_STRING
					{
						newLeafNode(lv_output_12_0, grammarAccess.getOutputProcessPartAccess().getOutputSTRINGTerminalRuleCall_8_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOutputProcessPartRule());
						}
						setWithLastConsumed(
							$current,
							"output",
							lv_output_12_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
			otherlv_13=RightParenthesis
			{
				newLeafNode(otherlv_13, grammarAccess.getOutputProcessPartAccess().getRightParenthesisKeyword_8_3());
			}
		)?
		(
			otherlv_14=Sleep
			{
				newLeafNode(otherlv_14, grammarAccess.getOutputProcessPartAccess().getSleepKeyword_9_0());
			}
			otherlv_15=LeftParenthesis
			{
				newLeafNode(otherlv_15, grammarAccess.getOutputProcessPartAccess().getLeftParenthesisKeyword_9_1());
			}
			(
				(
					lv_msec_16_0=RULE_INT
					{
						newLeafNode(lv_msec_16_0, grammarAccess.getOutputProcessPartAccess().getMsecINTTerminalRuleCall_9_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOutputProcessPartRule());
						}
						setWithLastConsumed(
							$current,
							"msec",
							lv_msec_16_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
			otherlv_17=RightParenthesis
			{
				newLeafNode(otherlv_17, grammarAccess.getOutputProcessPartAccess().getRightParenthesisKeyword_9_3());
			}
		)?
		otherlv_18=FullStop
		{
			newLeafNode(otherlv_18, grammarAccess.getOutputProcessPartAccess().getFullStopKeyword_10());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOutputProcessPartAccess().getNextProcParserRuleCall_11_0());
				}
				lv_next_19_0=ruleProc
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOutputProcessPartRule());
					}
					set(
						$current,
						"next",
						lv_next_19_0,
						"com.sysma.goat.eclipse_plugin.GoatComponents.Proc");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleIfProcesses
entryRuleIfProcesses returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIfProcessesRule()); }
	iv_ruleIfProcesses=ruleIfProcesses
	{ $current=$iv_ruleIfProcesses.current; }
	EOF;

// Rule IfProcesses
ruleIfProcesses returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getIfProcessesAccess().getIfProcessesAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getIfProcessesAccess().getBranchesIfBranchProcessParserRuleCall_1_0());
				}
				lv_branches_1_0=ruleIfBranchProcess
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfProcessesRule());
					}
					add(
						$current,
						"branches",
						lv_branches_1_0,
						"com.sysma.goat.eclipse_plugin.GoatComponents.IfBranchProcess");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=Else
			{
				newLeafNode(otherlv_2, grammarAccess.getIfProcessesAccess().getElseKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getIfProcessesAccess().getBranchesIfBranchProcessParserRuleCall_2_1_0());
					}
					lv_branches_3_0=ruleIfBranchProcess
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIfProcessesRule());
						}
						add(
							$current,
							"branches",
							lv_branches_3_0,
							"com.sysma.goat.eclipse_plugin.GoatComponents.IfBranchProcess");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			otherlv_4=Else
			{
				newLeafNode(otherlv_4, grammarAccess.getIfProcessesAccess().getElseKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getIfProcessesAccess().getBranchesElseBranchProcessParserRuleCall_3_1_0());
					}
					lv_branches_5_0=ruleElseBranchProcess
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIfProcessesRule());
						}
						add(
							$current,
							"branches",
							lv_branches_5_0,
							"com.sysma.goat.eclipse_plugin.GoatComponents.ElseBranchProcess");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleIfBranchProcess
entryRuleIfBranchProcess returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIfBranchProcessRule()); }
	iv_ruleIfBranchProcess=ruleIfBranchProcess
	{ $current=$iv_ruleIfBranchProcess.current; }
	EOF;

// Rule IfBranchProcess
ruleIfBranchProcess returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getIfBranchProcessAccess().getIfBranchProcessAction_0(),
					$current);
			}
		)
		otherlv_1=If
		{
			newLeafNode(otherlv_1, grammarAccess.getIfBranchProcessAccess().getIfKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIfBranchProcessAccess().getCondPreconditionsParserRuleCall_2_0());
				}
				lv_cond_2_0=rulePreconditions
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfBranchProcessRule());
					}
					set(
						$current,
						"cond",
						lv_cond_2_0,
						"com.sysma.goat.eclipse_plugin.GoatComponents.Preconditions");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=LeftCurlyBracket
		{
			newLeafNode(otherlv_3, grammarAccess.getIfBranchProcessAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIfBranchProcessAccess().getThenPredOutputProcessOrInputProcessParserRuleCall_4_0());
				}
				lv_then_4_0=rulePredOutputProcessOrInputProcess
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfBranchProcessRule());
					}
					set(
						$current,
						"then",
						lv_then_4_0,
						"com.sysma.goat.eclipse_plugin.GoatComponents.PredOutputProcessOrInputProcess");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=RightCurlyBracket
		{
			newLeafNode(otherlv_5, grammarAccess.getIfBranchProcessAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleElseBranchProcess
entryRuleElseBranchProcess returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElseBranchProcessRule()); }
	iv_ruleElseBranchProcess=ruleElseBranchProcess
	{ $current=$iv_ruleElseBranchProcess.current; }
	EOF;

// Rule ElseBranchProcess
ruleElseBranchProcess returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getElseBranchProcessAccess().getIfBranchProcessAction_0(),
					$current);
			}
		)
		otherlv_1=LeftCurlyBracket
		{
			newLeafNode(otherlv_1, grammarAccess.getElseBranchProcessAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getElseBranchProcessAccess().getThenPredOutputProcessOrInputProcessParserRuleCall_2_0());
				}
				lv_then_2_0=rulePredOutputProcessOrInputProcess
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getElseBranchProcessRule());
					}
					set(
						$current,
						"then",
						lv_then_2_0,
						"com.sysma.goat.eclipse_plugin.GoatComponents.PredOutputProcessOrInputProcess");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=RightCurlyBracket
		{
			newLeafNode(otherlv_3, grammarAccess.getElseBranchProcessAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleUpdate
entryRuleUpdate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUpdateRule()); }
	iv_ruleUpdate=ruleUpdate
	{ $current=$iv_ruleUpdate.current; }
	EOF;

// Rule Update
ruleUpdate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=LeftSquareBracket
		{
			newLeafNode(otherlv_0, grammarAccess.getUpdateAccess().getLeftSquareBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getUpdateAccess().getVarsAttributeToSetParserRuleCall_1_0());
				}
				lv_vars_1_0=ruleAttributeToSet
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUpdateRule());
					}
					add(
						$current,
						"vars",
						lv_vars_1_0,
						"com.sysma.goat.eclipse_plugin.GoatComponents.AttributeToSet");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=ColonEqualsSign
		{
			newLeafNode(otherlv_2, grammarAccess.getUpdateAccess().getColonEqualsSignKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getUpdateAccess().getValsExpressionParserRuleCall_3_0());
				}
				lv_vals_3_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUpdateRule());
					}
					add(
						$current,
						"vals",
						lv_vals_3_0,
						"com.sysma.goat.eclipse_plugin.GoatComponents.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=Comma
			{
				newLeafNode(otherlv_4, grammarAccess.getUpdateAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getUpdateAccess().getVarsAttributeToSetParserRuleCall_4_1_0());
					}
					lv_vars_5_0=ruleAttributeToSet
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUpdateRule());
						}
						add(
							$current,
							"vars",
							lv_vars_5_0,
							"com.sysma.goat.eclipse_plugin.GoatComponents.AttributeToSet");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_6=ColonEqualsSign
			{
				newLeafNode(otherlv_6, grammarAccess.getUpdateAccess().getColonEqualsSignKeyword_4_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getUpdateAccess().getValsExpressionParserRuleCall_4_3_0());
					}
					lv_vals_7_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUpdateRule());
						}
						add(
							$current,
							"vals",
							lv_vals_7_0,
							"com.sysma.goat.eclipse_plugin.GoatComponents.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_8=RightSquareBracket
		{
			newLeafNode(otherlv_8, grammarAccess.getUpdateAccess().getRightSquareBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleAwareness
entryRuleAwareness returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAwarenessRule()); }
	iv_ruleAwareness=ruleAwareness
	{ $current=$iv_ruleAwareness.current; }
	EOF;

// Rule Awareness
ruleAwareness returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Wait
		{
			newLeafNode(otherlv_0, grammarAccess.getAwarenessAccess().getWaitKeyword_0());
		}
		otherlv_1=Until
		{
			newLeafNode(otherlv_1, grammarAccess.getAwarenessAccess().getUntilKeyword_1());
		}
		otherlv_2=LeftParenthesis
		{
			newLeafNode(otherlv_2, grammarAccess.getAwarenessAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAwarenessAccess().getPredExpressionParserRuleCall_3_0());
				}
				lv_pred_3_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAwarenessRule());
					}
					set(
						$current,
						"pred",
						lv_pred_3_0,
						"com.sysma.goat.eclipse_plugin.GoatComponents.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=RightParenthesis
		{
			newLeafNode(otherlv_4, grammarAccess.getAwarenessAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleNZCProcess
entryRuleNZCProcess returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNZCProcessRule()); }
	iv_ruleNZCProcess=ruleNZCProcess
	{ $current=$iv_ruleNZCProcess.current; }
	EOF;

// Rule NZCProcess
ruleNZCProcess returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0=LeftParenthesis
			{
				newLeafNode(otherlv_0, grammarAccess.getNZCProcessAccess().getLeftParenthesisKeyword_0_0());
			}
			{
				newCompositeNode(grammarAccess.getNZCProcessAccess().getProcParserRuleCall_0_1());
			}
			this_Proc_1=ruleProc
			{
				$current = $this_Proc_1.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_2=RightParenthesis
			{
				newLeafNode(otherlv_2, grammarAccess.getNZCProcessAccess().getRightParenthesisKeyword_0_2());
			}
		)
		    |
		{
			newCompositeNode(grammarAccess.getNZCProcessAccess().getZeroProcessParserRuleCall_1());
		}
		this_ZeroProcess_3=ruleZeroProcess
		{
			$current = $this_ZeroProcess_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getNZCProcessAccess().getCallProcessParserRuleCall_2());
		}
		this_CallProcess_4=ruleCallProcess
		{
			$current = $this_CallProcess_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleNProcess
entryRuleNProcess returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNProcessRule()); }
	iv_ruleNProcess=ruleNProcess
	{ $current=$iv_ruleNProcess.current; }
	EOF;

// Rule NProcess
ruleNProcess returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0=LeftParenthesis
			{
				newLeafNode(otherlv_0, grammarAccess.getNProcessAccess().getLeftParenthesisKeyword_0_0());
			}
			{
				newCompositeNode(grammarAccess.getNProcessAccess().getProcParserRuleCall_0_1());
			}
			this_Proc_1=ruleProc
			{
				$current = $this_Proc_1.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_2=RightParenthesis
			{
				newLeafNode(otherlv_2, grammarAccess.getNProcessAccess().getRightParenthesisKeyword_0_2());
			}
		)
		    |
		{
			newCompositeNode(grammarAccess.getNProcessAccess().getZeroProcessParserRuleCall_1());
		}
		this_ZeroProcess_3=ruleZeroProcess
		{
			$current = $this_ZeroProcess_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleCallProcess
entryRuleCallProcess returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCallProcessRule()); }
	iv_ruleCallProcess=ruleCallProcess
	{ $current=$iv_ruleCallProcess.current; }
	EOF;

// Rule CallProcess
ruleCallProcess returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getCallProcessAccess().getCallProcessAction_0(),
					$current);
			}
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCallProcessRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getCallProcessAccess().getProcnameProcessDefinitionCrossReference_1_0());
				}
			)
		)
	)
;

// Entry rule entryRuleZeroProcess
entryRuleZeroProcess returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getZeroProcessRule()); }
	iv_ruleZeroProcess=ruleZeroProcess
	{ $current=$iv_ruleZeroProcess.current; }
	EOF;

// Rule ZeroProcess
ruleZeroProcess returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getZeroProcessAccess().getZeroProcessAction_0(),
					$current);
			}
		)
		otherlv_1=Nil
		{
			newLeafNode(otherlv_1, grammarAccess.getZeroProcessAccess().getNilKeyword_1());
		}
	)
;

// Entry rule entryRuleProcessDefinition
entryRuleProcessDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProcessDefinitionRule()); }
	iv_ruleProcessDefinition=ruleProcessDefinition
	{ $current=$iv_ruleProcessDefinition.current; }
	EOF;

// Rule ProcessDefinition
ruleProcessDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Proc
		{
			newLeafNode(otherlv_0, grammarAccess.getProcessDefinitionAccess().getProcKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getProcessDefinitionAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getProcessDefinitionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=EqualsSign
		{
			newLeafNode(otherlv_2, grammarAccess.getProcessDefinitionAccess().getEqualsSignKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getProcessDefinitionAccess().getProcProcParserRuleCall_3_0());
				}
				lv_proc_3_0=ruleProc
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProcessDefinitionRule());
					}
					set(
						$current,
						"proc",
						lv_proc_3_0,
						"com.sysma.goat.eclipse_plugin.GoatComponents.Proc");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleEnvInitValue
entryRuleEnvInitValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnvInitValueRule()); }
	iv_ruleEnvInitValue=ruleEnvInitValue
	{ $current=$iv_ruleEnvInitValue.current; }
	EOF;

// Rule EnvInitValue
ruleEnvInitValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getEnvInitValueAccess().getIntConstantAction_0_0(),
						$current);
				}
			)
			(
				(
					lv_value_1_0=RULE_INT
					{
						newLeafNode(lv_value_1_0, grammarAccess.getEnvInitValueAccess().getValueINTTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEnvInitValueRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_1_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getEnvInitValueAccess().getStringConstantAction_1_0(),
						$current);
				}
			)
			(
				(
					lv_value_3_0=RULE_STRING
					{
						newLeafNode(lv_value_3_0, grammarAccess.getEnvInitValueAccess().getValueSTRINGTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEnvInitValueRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_3_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getEnvInitValueAccess().getBoolConstantAction_2_0(),
						$current);
				}
			)
			(
				(
					(
						lv_value_5_1=True
						{
							newLeafNode(lv_value_5_1, grammarAccess.getEnvInitValueAccess().getValueTrueKeyword_2_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getEnvInitValueRule());
							}
							setWithLastConsumed($current, "value", lv_value_5_1, null);
						}
						    |
						lv_value_5_2=False
						{
							newLeafNode(lv_value_5_2, grammarAccess.getEnvInitValueAccess().getValueFalseKeyword_2_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getEnvInitValueRule());
							}
							setWithLastConsumed($current, "value", lv_value_5_2, null);
						}
					)
				)
			)
		)
	)
;

// Entry rule entryRuleEnvironment
entryRuleEnvironment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnvironmentRule()); }
	iv_ruleEnvironment=ruleEnvironment
	{ $current=$iv_ruleEnvironment.current; }
	EOF;

// Rule Environment
ruleEnvironment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getEnvironmentAccess().getEnvironmentAction_0(),
					$current);
			}
		)
		otherlv_1=LeftCurlyBracket
		{
			newLeafNode(otherlv_1, grammarAccess.getEnvironmentAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				(
					lv_attrs_2_0=RULE_ID
					{
						newLeafNode(lv_attrs_2_0, grammarAccess.getEnvironmentAccess().getAttrsIDTerminalRuleCall_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEnvironmentRule());
						}
						addWithLastConsumed(
							$current,
							"attrs",
							lv_attrs_2_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			otherlv_3=ColonEqualsSign
			{
				newLeafNode(otherlv_3, grammarAccess.getEnvironmentAccess().getColonEqualsSignKeyword_2_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEnvironmentAccess().getValsEnvInitValueParserRuleCall_2_2_0());
					}
					lv_vals_4_0=ruleEnvInitValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEnvironmentRule());
						}
						add(
							$current,
							"vals",
							lv_vals_4_0,
							"com.sysma.goat.eclipse_plugin.GoatComponents.EnvInitValue");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_5=Comma
				{
					newLeafNode(otherlv_5, grammarAccess.getEnvironmentAccess().getCommaKeyword_2_3_0());
				}
				(
					(
						lv_attrs_6_0=RULE_ID
						{
							newLeafNode(lv_attrs_6_0, grammarAccess.getEnvironmentAccess().getAttrsIDTerminalRuleCall_2_3_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getEnvironmentRule());
							}
							addWithLastConsumed(
								$current,
								"attrs",
								lv_attrs_6_0,
								"org.eclipse.xtext.common.Terminals.ID");
						}
					)
				)
				otherlv_7=ColonEqualsSign
				{
					newLeafNode(otherlv_7, grammarAccess.getEnvironmentAccess().getColonEqualsSignKeyword_2_3_2());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getEnvironmentAccess().getValsEnvInitValueParserRuleCall_2_3_3_0());
						}
						lv_vals_8_0=ruleEnvInitValue
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getEnvironmentRule());
							}
							add(
								$current,
								"vals",
								lv_vals_8_0,
								"com.sysma.goat.eclipse_plugin.GoatComponents.EnvInitValue");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_9=RightCurlyBracket
		{
			newLeafNode(otherlv_9, grammarAccess.getEnvironmentAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleComponentDefinition
entryRuleComponentDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComponentDefinitionRule()); }
	iv_ruleComponentDefinition=ruleComponentDefinition
	{ $current=$iv_ruleComponentDefinition.current; }
	EOF;

// Rule ComponentDefinition
ruleComponentDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Component
		{
			newLeafNode(otherlv_0, grammarAccess.getComponentDefinitionAccess().getComponentKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getComponentDefinitionAccess().getEnvEnvironmentParserRuleCall_1_0());
				}
				lv_env_1_0=ruleEnvironment
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComponentDefinitionRule());
					}
					set(
						$current,
						"env",
						lv_env_1_0,
						"com.sysma.goat.eclipse_plugin.GoatComponents.Environment");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComponentDefinitionRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getComponentDefinitionAccess().getProcProcessDefinitionCrossReference_2_0());
				}
			)
		)
		otherlv_3=At
		{
			newLeafNode(otherlv_3, grammarAccess.getComponentDefinitionAccess().getAtKeyword_3());
		}
		(
			(
				lv_address_4_0=RULE_STRING
				{
					newLeafNode(lv_address_4_0, grammarAccess.getComponentDefinitionAccess().getAddressSTRINGTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComponentDefinitionRule());
					}
					setWithLastConsumed(
						$current,
						"address",
						lv_address_4_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	iv_ruleExpression=ruleExpression
	{ $current=$iv_ruleExpression.current; }
	EOF;

// Rule Expression
ruleExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getExpressionAccess().getOrParserRuleCall());
	}
	this_Or_0=ruleOr
	{
		$current = $this_Or_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleOr
entryRuleOr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOrRule()); }
	iv_ruleOr=ruleOr
	{ $current=$iv_ruleOr.current; }
	EOF;

// Rule Or
ruleOr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getOrAccess().getAndParserRuleCall_0());
		}
		this_And_0=ruleAnd
		{
			$current = $this_And_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getOrAccess().getOrLeftAction_1_0(),
						$current);
				}
			)
			otherlv_2=VerticalLineVerticalLine
			{
				newLeafNode(otherlv_2, grammarAccess.getOrAccess().getVerticalLineVerticalLineKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOrAccess().getRightAndParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleAnd
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOrRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"com.sysma.goat.eclipse_plugin.GoatComponents.And");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleAnd
entryRuleAnd returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAndRule()); }
	iv_ruleAnd=ruleAnd
	{ $current=$iv_ruleAnd.current; }
	EOF;

// Rule And
ruleAnd returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAndAccess().getEqualityParserRuleCall_0());
		}
		this_Equality_0=ruleEquality
		{
			$current = $this_Equality_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getAndAccess().getAndLeftAction_1_0(),
						$current);
				}
			)
			otherlv_2=AmpersandAmpersand
			{
				newLeafNode(otherlv_2, grammarAccess.getAndAccess().getAmpersandAmpersandKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAndAccess().getRightEqualityParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleEquality
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAndRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"com.sysma.goat.eclipse_plugin.GoatComponents.Equality");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleEquality
entryRuleEquality returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEqualityRule()); }
	iv_ruleEquality=ruleEquality
	{ $current=$iv_ruleEquality.current; }
	EOF;

// Rule Equality
ruleEquality returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEqualityAccess().getComparisonParserRuleCall_0());
		}
		this_Comparison_0=ruleComparison
		{
			$current = $this_Comparison_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getEqualityAccess().getEqualityLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						lv_op_2_1=EqualsSignEqualsSign
						{
							newLeafNode(lv_op_2_1, grammarAccess.getEqualityAccess().getOpEqualsSignEqualsSignKeyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getEqualityRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_1, null);
						}
						    |
						lv_op_2_2=ExclamationMarkEqualsSign
						{
							newLeafNode(lv_op_2_2, grammarAccess.getEqualityAccess().getOpExclamationMarkEqualsSignKeyword_1_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getEqualityRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_2, null);
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getEqualityAccess().getRightComparisonParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleComparison
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEqualityRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"com.sysma.goat.eclipse_plugin.GoatComponents.Comparison");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleComparison
entryRuleComparison returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComparisonRule()); }
	iv_ruleComparison=ruleComparison
	{ $current=$iv_ruleComparison.current; }
	EOF;

// Rule Comparison
ruleComparison returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getComparisonAccess().getPlusOrMinusParserRuleCall_0());
		}
		this_PlusOrMinus_0=rulePlusOrMinus
		{
			$current = $this_PlusOrMinus_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getComparisonAccess().getComparisonLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						lv_op_2_1=GreaterThanSignEqualsSign
						{
							newLeafNode(lv_op_2_1, grammarAccess.getComparisonAccess().getOpGreaterThanSignEqualsSignKeyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getComparisonRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_1, null);
						}
						    |
						lv_op_2_2=LessThanSignEqualsSign
						{
							newLeafNode(lv_op_2_2, grammarAccess.getComparisonAccess().getOpLessThanSignEqualsSignKeyword_1_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getComparisonRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_2, null);
						}
						    |
						lv_op_2_3=GreaterThanSign
						{
							newLeafNode(lv_op_2_3, grammarAccess.getComparisonAccess().getOpGreaterThanSignKeyword_1_1_0_2());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getComparisonRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_3, null);
						}
						    |
						lv_op_2_4=LessThanSign
						{
							newLeafNode(lv_op_2_4, grammarAccess.getComparisonAccess().getOpLessThanSignKeyword_1_1_0_3());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getComparisonRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_4, null);
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getComparisonAccess().getRightPlusOrMinusParserRuleCall_1_2_0());
					}
					lv_right_3_0=rulePlusOrMinus
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getComparisonRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"com.sysma.goat.eclipse_plugin.GoatComponents.PlusOrMinus");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRulePlusOrMinus
entryRulePlusOrMinus returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPlusOrMinusRule()); }
	iv_rulePlusOrMinus=rulePlusOrMinus
	{ $current=$iv_rulePlusOrMinus.current; }
	EOF;

// Rule PlusOrMinus
rulePlusOrMinus returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPlusOrMinusAccess().getMulOrDivParserRuleCall_0());
		}
		this_MulOrDiv_0=ruleMulOrDiv
		{
			$current = $this_MulOrDiv_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getPlusOrMinusAccess().getPlusLeftAction_1_0_0_0(),
								$current);
						}
					)
					otherlv_2=PlusSign
					{
						newLeafNode(otherlv_2, grammarAccess.getPlusOrMinusAccess().getPlusSignKeyword_1_0_0_1());
					}
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getPlusOrMinusAccess().getMinusLeftAction_1_0_1_0(),
								$current);
						}
					)
					otherlv_4=HyphenMinus
					{
						newLeafNode(otherlv_4, grammarAccess.getPlusOrMinusAccess().getHyphenMinusKeyword_1_0_1_1());
					}
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getPlusOrMinusAccess().getConcatenateLeftAction_1_0_2_0(),
								$current);
						}
					)
					otherlv_6=PlusSignPlusSign
					{
						newLeafNode(otherlv_6, grammarAccess.getPlusOrMinusAccess().getPlusSignPlusSignKeyword_1_0_2_1());
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPlusOrMinusAccess().getRightMulOrDivParserRuleCall_1_1_0());
					}
					lv_right_7_0=ruleMulOrDiv
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPlusOrMinusRule());
						}
						set(
							$current,
							"right",
							lv_right_7_0,
							"com.sysma.goat.eclipse_plugin.GoatComponents.MulOrDiv");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleMulOrDiv
entryRuleMulOrDiv returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMulOrDivRule()); }
	iv_ruleMulOrDiv=ruleMulOrDiv
	{ $current=$iv_ruleMulOrDiv.current; }
	EOF;

// Rule MulOrDiv
ruleMulOrDiv returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getMulOrDivAccess().getPrimaryParserRuleCall_0());
		}
		this_Primary_0=rulePrimary
		{
			$current = $this_Primary_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getMulOrDivAccess().getMulOrDivLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						lv_op_2_1=Asterisk
						{
							newLeafNode(lv_op_2_1, grammarAccess.getMulOrDivAccess().getOpAsteriskKeyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getMulOrDivRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_1, null);
						}
						    |
						lv_op_2_2=Solidus
						{
							newLeafNode(lv_op_2_2, grammarAccess.getMulOrDivAccess().getOpSolidusKeyword_1_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getMulOrDivRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_2, null);
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getMulOrDivAccess().getRightPrimaryParserRuleCall_1_2_0());
					}
					lv_right_3_0=rulePrimary
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMulOrDivRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"com.sysma.goat.eclipse_plugin.GoatComponents.Primary");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRulePrimary
entryRulePrimary returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryRule()); }
	iv_rulePrimary=rulePrimary
	{ $current=$iv_rulePrimary.current; }
	EOF;

// Rule Primary
rulePrimary returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0=LeftParenthesis
			{
				newLeafNode(otherlv_0, grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_0_0());
			}
			{
				newCompositeNode(grammarAccess.getPrimaryAccess().getExpressionParserRuleCall_0_1());
			}
			this_Expression_1=ruleExpression
			{
				$current = $this_Expression_1.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_2=RightParenthesis
			{
				newLeafNode(otherlv_2, grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_0_2());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimaryAccess().getNotAction_1_0(),
						$current);
				}
			)
			otherlv_4=ExclamationMark
			{
				newLeafNode(otherlv_4, grammarAccess.getPrimaryAccess().getExclamationMarkKeyword_1_1());
			}
			otherlv_5=LeftParenthesis
			{
				newLeafNode(otherlv_5, grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_1_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryAccess().getExpressionPrimaryParserRuleCall_1_3_0());
					}
					lv_expression_6_0=rulePrimary
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryRule());
						}
						set(
							$current,
							"expression",
							lv_expression_6_0,
							"com.sysma.goat.eclipse_plugin.GoatComponents.Primary");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_7=RightParenthesis
			{
				newLeafNode(otherlv_7, grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_1_4());
			}
		)
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryAccess().getAtomicParserRuleCall_2());
		}
		this_Atomic_8=ruleAtomic
		{
			$current = $this_Atomic_8.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleAtomic
entryRuleAtomic returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAtomicRule()); }
	iv_ruleAtomic=ruleAtomic
	{ $current=$iv_ruleAtomic.current; }
	EOF;

// Rule Atomic
ruleAtomic returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicAccess().getIntConstantAction_0_0(),
						$current);
				}
			)
			(
				(
					lv_value_1_0=RULE_INT
					{
						newLeafNode(lv_value_1_0, grammarAccess.getAtomicAccess().getValueINTTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAtomicRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_1_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicAccess().getStringConstantAction_1_0(),
						$current);
				}
			)
			(
				(
					lv_value_3_0=RULE_STRING
					{
						newLeafNode(lv_value_3_0, grammarAccess.getAtomicAccess().getValueSTRINGTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAtomicRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_3_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicAccess().getBoolConstantAction_2_0(),
						$current);
				}
			)
			(
				(
					(
						lv_value_5_1=True
						{
							newLeafNode(lv_value_5_1, grammarAccess.getAtomicAccess().getValueTrueKeyword_2_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getAtomicRule());
							}
							setWithLastConsumed($current, "value", lv_value_5_1, null);
						}
						    |
						lv_value_5_2=False
						{
							newLeafNode(lv_value_5_2, grammarAccess.getAtomicAccess().getValueFalseKeyword_2_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getAtomicRule());
							}
							setWithLastConsumed($current, "value", lv_value_5_2, null);
						}
					)
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicAccess().getLocalVarRefAction_3_0(),
						$current);
				}
			)
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAtomicRule());
						}
					}
					otherlv_7=RULE_ID
					{
						newLeafNode(otherlv_7, grammarAccess.getAtomicAccess().getRefLRefCrossReference_3_1_0());
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicAccess().getLocalAttributeRefAction_4_0(),
						$current);
				}
			)
			otherlv_9=Proc
			{
				newLeafNode(otherlv_9, grammarAccess.getAtomicAccess().getProcKeyword_4_1());
			}
			otherlv_10=FullStop
			{
				newLeafNode(otherlv_10, grammarAccess.getAtomicAccess().getFullStopKeyword_4_2());
			}
			(
				(
					lv_attribute_11_0=RULE_ID
					{
						newLeafNode(lv_attribute_11_0, grammarAccess.getAtomicAccess().getAttributeIDTerminalRuleCall_4_3_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAtomicRule());
						}
						setWithLastConsumed(
							$current,
							"attribute",
							lv_attribute_11_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicAccess().getFunctionCallAction_5_0(),
						$current);
				}
			)
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAtomicRule());
						}
					}
					otherlv_13=RULE_ID
					{
						newLeafNode(otherlv_13, grammarAccess.getAtomicAccess().getFunctionFuncDefinitionCrossReference_5_1_0());
					}
				)
			)
			otherlv_14=LeftParenthesis
			{
				newLeafNode(otherlv_14, grammarAccess.getAtomicAccess().getLeftParenthesisKeyword_5_2());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getAtomicAccess().getParamsExpressionParserRuleCall_5_3_0_0());
						}
						lv_params_15_0=ruleExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAtomicRule());
							}
							add(
								$current,
								"params",
								lv_params_15_0,
								"com.sysma.goat.eclipse_plugin.GoatComponents.Expression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_16=Comma
					{
						newLeafNode(otherlv_16, grammarAccess.getAtomicAccess().getCommaKeyword_5_3_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getAtomicAccess().getParamsExpressionParserRuleCall_5_3_1_1_0());
							}
							lv_params_17_0=ruleExpression
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getAtomicRule());
								}
								add(
									$current,
									"params",
									lv_params_17_0,
									"com.sysma.goat.eclipse_plugin.GoatComponents.Expression");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)?
			otherlv_18=RightParenthesis
			{
				newLeafNode(otherlv_18, grammarAccess.getAtomicAccess().getRightParenthesisKeyword_5_4());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicAccess().getComponentAttributeRefAction_6_0(),
						$current);
				}
			)
			otherlv_20=This
			{
				newLeafNode(otherlv_20, grammarAccess.getAtomicAccess().getThisKeyword_6_1());
			}
			otherlv_21=FullStop
			{
				newLeafNode(otherlv_21, grammarAccess.getAtomicAccess().getFullStopKeyword_6_2());
			}
			(
				(
					lv_attribute_22_0=RULE_ID
					{
						newLeafNode(lv_attribute_22_0, grammarAccess.getAtomicAccess().getAttributeIDTerminalRuleCall_6_3_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAtomicRule());
						}
						setWithLastConsumed(
							$current,
							"attribute",
							lv_attribute_22_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicAccess().getRecAttributeRefAction_7_0(),
						$current);
				}
			)
			otherlv_24=Receiver
			{
				newLeafNode(otherlv_24, grammarAccess.getAtomicAccess().getReceiverKeyword_7_1());
			}
			otherlv_25=FullStop
			{
				newLeafNode(otherlv_25, grammarAccess.getAtomicAccess().getFullStopKeyword_7_2());
			}
			(
				(
					lv_attribute_26_0=RULE_ID
					{
						newLeafNode(lv_attribute_26_0, grammarAccess.getAtomicAccess().getAttributeIDTerminalRuleCall_7_3_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAtomicRule());
						}
						setWithLastConsumed(
							$current,
							"attribute",
							lv_attribute_26_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleAttributeToSet
entryRuleAttributeToSet returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAttributeToSetRule()); }
	iv_ruleAttributeToSet=ruleAttributeToSet
	{ $current=$iv_ruleAttributeToSet.current; }
	EOF;

// Rule AttributeToSet
ruleAttributeToSet returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAttributeToSetAccess().getComponentAttributeToSetAction_0_0(),
						$current);
				}
			)
			otherlv_1=This
			{
				newLeafNode(otherlv_1, grammarAccess.getAttributeToSetAccess().getThisKeyword_0_1());
			}
			otherlv_2=FullStop
			{
				newLeafNode(otherlv_2, grammarAccess.getAttributeToSetAccess().getFullStopKeyword_0_2());
			}
			(
				(
					lv_attribute_3_0=RULE_ID
					{
						newLeafNode(lv_attribute_3_0, grammarAccess.getAttributeToSetAccess().getAttributeIDTerminalRuleCall_0_3_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAttributeToSetRule());
						}
						setWithLastConsumed(
							$current,
							"attribute",
							lv_attribute_3_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAttributeToSetAccess().getLocalAttributeToSetAction_1_0(),
						$current);
				}
			)
			otherlv_5=Proc
			{
				newLeafNode(otherlv_5, grammarAccess.getAttributeToSetAccess().getProcKeyword_1_1());
			}
			otherlv_6=FullStop
			{
				newLeafNode(otherlv_6, grammarAccess.getAttributeToSetAccess().getFullStopKeyword_1_2());
			}
			(
				(
					lv_attribute_7_0=RULE_ID
					{
						newLeafNode(lv_attribute_7_0, grammarAccess.getAttributeToSetAccess().getAttributeIDTerminalRuleCall_1_3_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAttributeToSetRule());
						}
						setWithLastConsumed(
							$current,
							"attribute",
							lv_attribute_7_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleFuncParam
entryRuleFuncParam returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFuncParamRule()); }
	iv_ruleFuncParam=ruleFuncParam
	{ $current=$iv_ruleFuncParam.current; }
	EOF;

// Rule FuncParam
ruleFuncParam returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_type_0_0=RULE_TYPE
				{
					newLeafNode(lv_type_0_0, grammarAccess.getFuncParamAccess().getTypeTYPETerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFuncParamRule());
					}
					setWithLastConsumed(
						$current,
						"type",
						lv_type_0_0,
						"com.sysma.goat.eclipse_plugin.GoatComponents.TYPE");
				}
			)
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getFuncParamAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFuncParamRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleFuncDefinition
entryRuleFuncDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFuncDefinitionRule()); }
	iv_ruleFuncDefinition=ruleFuncDefinition
	{ $current=$iv_ruleFuncDefinition.current; }
	EOF;

// Rule FuncDefinition
ruleFuncDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Function
		{
			newLeafNode(otherlv_0, grammarAccess.getFuncDefinitionAccess().getFunctionKeyword_0());
		}
		(
			(
				lv_type_1_0=RULE_TYPE
				{
					newLeafNode(lv_type_1_0, grammarAccess.getFuncDefinitionAccess().getTypeTYPETerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFuncDefinitionRule());
					}
					setWithLastConsumed(
						$current,
						"type",
						lv_type_1_0,
						"com.sysma.goat.eclipse_plugin.GoatComponents.TYPE");
				}
			)
		)
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getFuncDefinitionAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFuncDefinitionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3=LeftParenthesis
		{
			newLeafNode(otherlv_3, grammarAccess.getFuncDefinitionAccess().getLeftParenthesisKeyword_3());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getFuncDefinitionAccess().getParamsFuncParamParserRuleCall_4_0_0());
					}
					lv_params_4_0=ruleFuncParam
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFuncDefinitionRule());
						}
						add(
							$current,
							"params",
							lv_params_4_0,
							"com.sysma.goat.eclipse_plugin.GoatComponents.FuncParam");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_5=Comma
				{
					newLeafNode(otherlv_5, grammarAccess.getFuncDefinitionAccess().getCommaKeyword_4_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getFuncDefinitionAccess().getParamsFuncParamParserRuleCall_4_1_1_0());
						}
						lv_params_6_0=ruleFuncParam
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFuncDefinitionRule());
							}
							add(
								$current,
								"params",
								lv_params_6_0,
								"com.sysma.goat.eclipse_plugin.GoatComponents.FuncParam");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_7=RightParenthesis
		{
			newLeafNode(otherlv_7, grammarAccess.getFuncDefinitionAccess().getRightParenthesisKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFuncDefinitionAccess().getBlkFuncBlockParserRuleCall_6_0());
				}
				lv_blk_8_0=ruleFuncBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFuncDefinitionRule());
					}
					set(
						$current,
						"blk",
						lv_blk_8_0,
						"com.sysma.goat.eclipse_plugin.GoatComponents.FuncBlock");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFuncBlock
entryRuleFuncBlock returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFuncBlockRule()); }
	iv_ruleFuncBlock=ruleFuncBlock
	{ $current=$iv_ruleFuncBlock.current; }
	EOF;

// Rule FuncBlock
ruleFuncBlock returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=LeftCurlyBracket
		{
			newLeafNode(otherlv_0, grammarAccess.getFuncBlockAccess().getLeftCurlyBracketKeyword_0());
		}
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getFuncBlockAccess().getFuncBlockAction_1(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFuncBlockAccess().getStatementsFuncStatementParserRuleCall_2_0());
				}
				lv_statements_2_0=ruleFuncStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFuncBlockRule());
					}
					add(
						$current,
						"statements",
						lv_statements_2_0,
						"com.sysma.goat.eclipse_plugin.GoatComponents.FuncStatement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_3=RightCurlyBracket
		{
			newLeafNode(otherlv_3, grammarAccess.getFuncBlockAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleFuncStatement
entryRuleFuncStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFuncStatementRule()); }
	iv_ruleFuncStatement=ruleFuncStatement
	{ $current=$iv_ruleFuncStatement.current; }
	EOF;

// Rule FuncStatement
ruleFuncStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getFuncStatementAccess().getFuncVarAssignParserRuleCall_0());
		}
		this_FuncVarAssign_0=ruleFuncVarAssign
		{
			$current = $this_FuncVarAssign_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFuncStatementAccess().getFuncIfElseParserRuleCall_1());
		}
		this_FuncIfElse_1=ruleFuncIfElse
		{
			$current = $this_FuncIfElse_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFuncStatementAccess().getFuncReturnParserRuleCall_2());
		}
		this_FuncReturn_2=ruleFuncReturn
		{
			$current = $this_FuncReturn_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFuncStatementAccess().getFuncVarDeclarationParserRuleCall_3());
		}
		this_FuncVarDeclaration_3=ruleFuncVarDeclaration
		{
			$current = $this_FuncVarDeclaration_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleFuncVarDeclaration
entryRuleFuncVarDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFuncVarDeclarationRule()); }
	iv_ruleFuncVarDeclaration=ruleFuncVarDeclaration
	{ $current=$iv_ruleFuncVarDeclaration.current; }
	EOF;

// Rule FuncVarDeclaration
ruleFuncVarDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Var
		{
			newLeafNode(otherlv_0, grammarAccess.getFuncVarDeclarationAccess().getVarKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getFuncVarDeclarationAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFuncVarDeclarationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=EqualsSign
		{
			newLeafNode(otherlv_2, grammarAccess.getFuncVarDeclarationAccess().getEqualsSignKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFuncVarDeclarationAccess().getValExpressionParserRuleCall_3_0());
				}
				lv_val_3_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFuncVarDeclarationRule());
					}
					set(
						$current,
						"val",
						lv_val_3_0,
						"com.sysma.goat.eclipse_plugin.GoatComponents.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFuncVarAssign
entryRuleFuncVarAssign returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFuncVarAssignRule()); }
	iv_ruleFuncVarAssign=ruleFuncVarAssign
	{ $current=$iv_ruleFuncVarAssign.current; }
	EOF;

// Rule FuncVarAssign
ruleFuncVarAssign returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFuncVarAssignRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getFuncVarAssignAccess().getVarFuncVarDeclarationCrossReference_0_0());
				}
			)
		)
		otherlv_1=EqualsSign
		{
			newLeafNode(otherlv_1, grammarAccess.getFuncVarAssignAccess().getEqualsSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFuncVarAssignAccess().getValExpressionParserRuleCall_2_0());
				}
				lv_val_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFuncVarAssignRule());
					}
					set(
						$current,
						"val",
						lv_val_2_0,
						"com.sysma.goat.eclipse_plugin.GoatComponents.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFuncIfElse
entryRuleFuncIfElse returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFuncIfElseRule()); }
	iv_ruleFuncIfElse=ruleFuncIfElse
	{ $current=$iv_ruleFuncIfElse.current; }
	EOF;

// Rule FuncIfElse
ruleFuncIfElse returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=If
		{
			newLeafNode(otherlv_0, grammarAccess.getFuncIfElseAccess().getIfKeyword_0());
		}
		otherlv_1=LeftParenthesis
		{
			newLeafNode(otherlv_1, grammarAccess.getFuncIfElseAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFuncIfElseAccess().getTestExpressionParserRuleCall_2_0());
				}
				lv_test_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFuncIfElseRule());
					}
					add(
						$current,
						"test",
						lv_test_2_0,
						"com.sysma.goat.eclipse_plugin.GoatComponents.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=RightParenthesis
		{
			newLeafNode(otherlv_3, grammarAccess.getFuncIfElseAccess().getRightParenthesisKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFuncIfElseAccess().getThenFuncBlockParserRuleCall_4_0());
				}
				lv_then_4_0=ruleFuncBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFuncIfElseRule());
					}
					add(
						$current,
						"then",
						lv_then_4_0,
						"com.sysma.goat.eclipse_plugin.GoatComponents.FuncBlock");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5=Elif
			{
				newLeafNode(otherlv_5, grammarAccess.getFuncIfElseAccess().getElifKeyword_5_0());
			}
			otherlv_6=LeftParenthesis
			{
				newLeafNode(otherlv_6, grammarAccess.getFuncIfElseAccess().getLeftParenthesisKeyword_5_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFuncIfElseAccess().getTestExpressionParserRuleCall_5_2_0());
					}
					lv_test_7_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFuncIfElseRule());
						}
						add(
							$current,
							"test",
							lv_test_7_0,
							"com.sysma.goat.eclipse_plugin.GoatComponents.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_8=RightParenthesis
			{
				newLeafNode(otherlv_8, grammarAccess.getFuncIfElseAccess().getRightParenthesisKeyword_5_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFuncIfElseAccess().getThenFuncBlockParserRuleCall_5_4_0());
					}
					lv_then_9_0=ruleFuncBlock
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFuncIfElseRule());
						}
						add(
							$current,
							"then",
							lv_then_9_0,
							"com.sysma.goat.eclipse_plugin.GoatComponents.FuncBlock");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			otherlv_10=Else
			{
				newLeafNode(otherlv_10, grammarAccess.getFuncIfElseAccess().getElseKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFuncIfElseAccess().getElseBranchFuncBlockParserRuleCall_6_1_0());
					}
					lv_elseBranch_11_0=ruleFuncBlock
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFuncIfElseRule());
						}
						set(
							$current,
							"elseBranch",
							lv_elseBranch_11_0,
							"com.sysma.goat.eclipse_plugin.GoatComponents.FuncBlock");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleFuncReturn
entryRuleFuncReturn returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFuncReturnRule()); }
	iv_ruleFuncReturn=ruleFuncReturn
	{ $current=$iv_ruleFuncReturn.current; }
	EOF;

// Rule FuncReturn
ruleFuncReturn returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Return
		{
			newLeafNode(otherlv_0, grammarAccess.getFuncReturnAccess().getReturnKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFuncReturnAccess().getValExpressionParserRuleCall_1_0());
				}
				lv_val_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFuncReturnRule());
					}
					set(
						$current,
						"val",
						lv_val_1_0,
						"com.sysma.goat.eclipse_plugin.GoatComponents.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;
