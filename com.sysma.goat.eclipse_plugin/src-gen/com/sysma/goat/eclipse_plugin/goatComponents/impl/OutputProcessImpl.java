/**
 * generated by Xtext 2.12.0
 */
package com.sysma.goat.eclipse_plugin.goatComponents.impl;

import com.sysma.goat.eclipse_plugin.goatComponents.GoatComponentsPackage;
import com.sysma.goat.eclipse_plugin.goatComponents.OutputProcess;
import com.sysma.goat.eclipse_plugin.goatComponents.Preconditions;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Output Process</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.sysma.goat.eclipse_plugin.goatComponents.impl.OutputProcessImpl#getPrecond <em>Precond</em>}</li>
 * </ul>
 *
 * @generated
 */
public class OutputProcessImpl extends ProcessImpl implements OutputProcess
{
  /**
   * The cached value of the '{@link #getPrecond() <em>Precond</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPrecond()
   * @generated
   * @ordered
   */
  protected Preconditions precond;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected OutputProcessImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return GoatComponentsPackage.Literals.OUTPUT_PROCESS;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Preconditions getPrecond()
  {
    return precond;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetPrecond(Preconditions newPrecond, NotificationChain msgs)
  {
    Preconditions oldPrecond = precond;
    precond = newPrecond;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GoatComponentsPackage.OUTPUT_PROCESS__PRECOND, oldPrecond, newPrecond);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setPrecond(Preconditions newPrecond)
  {
    if (newPrecond != precond)
    {
      NotificationChain msgs = null;
      if (precond != null)
        msgs = ((InternalEObject)precond).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GoatComponentsPackage.OUTPUT_PROCESS__PRECOND, null, msgs);
      if (newPrecond != null)
        msgs = ((InternalEObject)newPrecond).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GoatComponentsPackage.OUTPUT_PROCESS__PRECOND, null, msgs);
      msgs = basicSetPrecond(newPrecond, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GoatComponentsPackage.OUTPUT_PROCESS__PRECOND, newPrecond, newPrecond));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case GoatComponentsPackage.OUTPUT_PROCESS__PRECOND:
        return basicSetPrecond(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case GoatComponentsPackage.OUTPUT_PROCESS__PRECOND:
        return getPrecond();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case GoatComponentsPackage.OUTPUT_PROCESS__PRECOND:
        setPrecond((Preconditions)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case GoatComponentsPackage.OUTPUT_PROCESS__PRECOND:
        setPrecond((Preconditions)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case GoatComponentsPackage.OUTPUT_PROCESS__PRECOND:
        return precond != null;
    }
    return super.eIsSet(featureID);
  }

} //OutputProcessImpl
