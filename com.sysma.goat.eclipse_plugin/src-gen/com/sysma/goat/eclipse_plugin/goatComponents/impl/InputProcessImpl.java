/**
 * generated by Xtext 2.12.0
 */
package com.sysma.goat.eclipse_plugin.goatComponents.impl;

import com.sysma.goat.eclipse_plugin.goatComponents.Attribute;
import com.sysma.goat.eclipse_plugin.goatComponents.GoatComponentsPackage;
import com.sysma.goat.eclipse_plugin.goatComponents.InputProcess;
import com.sysma.goat.eclipse_plugin.goatComponents.Pred;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Input Process</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.sysma.goat.eclipse_plugin.goatComponents.impl.InputProcessImpl#getRec_pred <em>Rec pred</em>}</li>
 *   <li>{@link com.sysma.goat.eclipse_plugin.goatComponents.impl.InputProcessImpl#getMsgInParts <em>Msg In Parts</em>}</li>
 * </ul>
 *
 * @generated
 */
public class InputProcessImpl extends ProcessImpl implements InputProcess
{
  /**
   * The cached value of the '{@link #getRec_pred() <em>Rec pred</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRec_pred()
   * @generated
   * @ordered
   */
  protected Pred rec_pred;

  /**
   * The cached value of the '{@link #getMsgInParts() <em>Msg In Parts</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMsgInParts()
   * @generated
   * @ordered
   */
  protected EList<Attribute> msgInParts;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected InputProcessImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return GoatComponentsPackage.Literals.INPUT_PROCESS;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Pred getRec_pred()
  {
    return rec_pred;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetRec_pred(Pred newRec_pred, NotificationChain msgs)
  {
    Pred oldRec_pred = rec_pred;
    rec_pred = newRec_pred;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GoatComponentsPackage.INPUT_PROCESS__REC_PRED, oldRec_pred, newRec_pred);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setRec_pred(Pred newRec_pred)
  {
    if (newRec_pred != rec_pred)
    {
      NotificationChain msgs = null;
      if (rec_pred != null)
        msgs = ((InternalEObject)rec_pred).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GoatComponentsPackage.INPUT_PROCESS__REC_PRED, null, msgs);
      if (newRec_pred != null)
        msgs = ((InternalEObject)newRec_pred).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GoatComponentsPackage.INPUT_PROCESS__REC_PRED, null, msgs);
      msgs = basicSetRec_pred(newRec_pred, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GoatComponentsPackage.INPUT_PROCESS__REC_PRED, newRec_pred, newRec_pred));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Attribute> getMsgInParts()
  {
    if (msgInParts == null)
    {
      msgInParts = new EObjectContainmentEList<Attribute>(Attribute.class, this, GoatComponentsPackage.INPUT_PROCESS__MSG_IN_PARTS);
    }
    return msgInParts;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case GoatComponentsPackage.INPUT_PROCESS__REC_PRED:
        return basicSetRec_pred(null, msgs);
      case GoatComponentsPackage.INPUT_PROCESS__MSG_IN_PARTS:
        return ((InternalEList<?>)getMsgInParts()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case GoatComponentsPackage.INPUT_PROCESS__REC_PRED:
        return getRec_pred();
      case GoatComponentsPackage.INPUT_PROCESS__MSG_IN_PARTS:
        return getMsgInParts();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case GoatComponentsPackage.INPUT_PROCESS__REC_PRED:
        setRec_pred((Pred)newValue);
        return;
      case GoatComponentsPackage.INPUT_PROCESS__MSG_IN_PARTS:
        getMsgInParts().clear();
        getMsgInParts().addAll((Collection<? extends Attribute>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case GoatComponentsPackage.INPUT_PROCESS__REC_PRED:
        setRec_pred((Pred)null);
        return;
      case GoatComponentsPackage.INPUT_PROCESS__MSG_IN_PARTS:
        getMsgInParts().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case GoatComponentsPackage.INPUT_PROCESS__REC_PRED:
        return rec_pred != null;
      case GoatComponentsPackage.INPUT_PROCESS__MSG_IN_PARTS:
        return msgInParts != null && !msgInParts.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //InputProcessImpl
