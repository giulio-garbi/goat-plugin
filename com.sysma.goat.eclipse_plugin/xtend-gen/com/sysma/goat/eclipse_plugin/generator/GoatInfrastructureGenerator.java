/**
 * generated by Xtext 2.12.0
 */
package com.sysma.goat.eclipse_plugin.generator;

import com.google.common.collect.Iterables;
import com.sysma.goat.eclipse_plugin.generator.CodeSingleServer;
import com.sysma.goat.eclipse_plugin.goatInfrastructure.SingleServer;
import org.eclipse.core.runtime.Path;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.xtext.generator.AbstractGenerator;
import org.eclipse.xtext.generator.IFileSystemAccess2;
import org.eclipse.xtext.generator.IGeneratorContext;
import org.eclipse.xtext.xbase.lib.IteratorExtensions;

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
@SuppressWarnings("all")
public class GoatInfrastructureGenerator extends AbstractGenerator {
  @Override
  public void doGenerate(final Resource resource, final IFileSystemAccess2 fsa, final IGeneratorContext context) {
    Iterable<SingleServer> _filter = Iterables.<SingleServer>filter(IteratorExtensions.<EObject>toIterable(resource.getAllContents()), SingleServer.class);
    for (final SingleServer server : _filter) {
      {
        final CodeSingleServer c_ssrv = new CodeSingleServer(server);
        String _platformString = resource.getURI().toPlatformString(true);
        final String goFileName = new Path("infrastructure").append(
          new Path(_platformString).removeFirstSegments(2).removeFileExtension().addFileExtension("go")).toString();
        fsa.generateFile(goFileName, c_ssrv.getCode());
      }
    }
  }
}
